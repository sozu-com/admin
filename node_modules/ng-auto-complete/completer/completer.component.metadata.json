[{"__symbolic":"module","version":3,"metadata":{"CompleterComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"ng-completer","template":"\n      <div #element class=\"ng-autocomplete-dropdown\" [ngClass]=\"{'open': dropdown._open, 'is-loading': _DOM.isLoading, 'is-async': group.async !== null}\">\n\n        <!--GROUP: {{group.key}}-->\n\n        <div class=\"ng-autocomplete-inputs\" (click)=\"RegisterClick()\"\n             [ngClass]=\"{'completion-off': !group.completion}\">\n                <span class=\"ng-autocomplete-placeholder\"\n                      *ngIf=\"_DOM.placeholder\">\n                  <ng-container *ngIf=\"group.placeholderValue\">\n                      <ng-template *ngTemplateOutlet=\"group.placeholderValue; context: {$implicit: _DOM.placeholder}\"></ng-template>\n                  </ng-container>\n                  <ng-template [ngIf]=\"!group.placeholderValue\">\n                      {{_DOM.placeholder.title}}\n                  </ng-template>\n                </span>\n          <input #input type=\"text\" [placeholder]=\"group.placeholder\" name=\"completer\" [(ngModel)]=\"_completer\"\n                 (ngModelChange)=\"_change.next($event);\"\n                 [value]=\"_completer\"\n                 autocomplete=\"off\"\n                 (click)=\"OpenDropdown()\"\n                 (focus)=\"OpenDropdown()\" class=\"ng-autocomplete-input\">\n\n          <span [ngClass]=\"{'open': dropdown._open}\" class=\"ng-autocomplete-dropdown-icon\"\n                (click)=\"DropdownArray()\"></span>\n        </div>\n\n        <div class=\"ng-dropdown\" ngDropdown [list]=\"_items\" [element]=\"element\" [input]=\"input\"\n             [ngClass]=\"{'is-initial-empty': _DOM.empty}\"\n             [active]=\"_DOM.selected\" [key]=\"group.key\"\n             [completion]=\"group.completion\"\n             (hover)=\"OnHoverDropdownItem($event)\"\n             (selected)=\"SelectItem($event)\"\n             (closed)=\"OnInputBlurred()\"\n        >\n          <div *ngIf=\"_DOM.notFound && group.noResults\" class=\"dropdown-item no-results\">\n            <ng-container *ngIf=\"group.noResults\">\n              <ng-template *ngTemplateOutlet=\"group.noResults; context: {$implicit: _completer}\"></ng-template>\n            </ng-container>\n          </div>\n\n          <div class=\"dropdown-item\" *ngFor=\"let item of _items | keys; let i = index\"\n               (click)=\"SelectItem(_items[item])\">\n\n            <ng-container *ngIf=\"group.dropdownValue\">\n              <ng-template\n                *ngTemplateOutlet=\"group.dropdownValue; context: {$implicit: _items[item], highlight: _items[item].title | highlight:_highlight}\"></ng-template>\n            </ng-container>\n\n            <div *ngIf=\"!group.dropdownValue\" [innerHTML]=\"_items[item].title | highlight:_highlight\"></div>\n          </div>\n        </div>\n      </div>","styles":["\n        .ng-autocomplete-inputs {\n            position: relative;\n        }\n\n        .ng-autocomplete-inputs.completion-off {\n            cursor: pointer;\n        }\n\n        .ng-autocomplete-inputs.completion-off input {\n            pointer-events: none;\n        }\n\n        .ng-autocomplete-placeholder {\n            pointer-events: none;\n        }\n\n        .ng-autocomplete-dropdown-icon {\n\n        }\n\n        .ng-autocomplete-dropdown .ng-dropdown {\n            display: none;\n        }\n\n        .ng-autocomplete-dropdown .ng-dropdown.is-empty {\n          display: none;\n        }\n\n        .ng-autocomplete-dropdown .ng-dropdown.open {\n            display: block;\n        }\n    "]}]}],"members":{"dropdown":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":[{"__symbolic":"reference","module":"../dropdown/ng-dropdown.directive","name":"NgDropdownDirective"}]}]}],"cleared":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"selected":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"noResult":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"},"arguments":["no-result"]}]}],"group":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"NgZone"}]}],"ngOnInit":[{"__symbolic":"method"}],"RegisterClick":[{"__symbolic":"method"}],"DropdownArray":[{"__symbolic":"method"}],"SwitchDropdownState":[{"__symbolic":"method"}],"CloseDropdown":[{"__symbolic":"method"}],"OpenDropdown":[{"__symbolic":"method"}],"SetItems":[{"__symbolic":"method"}],"SelectItem":[{"__symbolic":"method"}],"RunAsyncFunction":[{"__symbolic":"method"}],"OnModelChange":[{"__symbolic":"method"}],"ClearModel":[{"__symbolic":"method"}],"CompareItemsAndSet":[{"__symbolic":"method"}],"OnInputBlurred":[{"__symbolic":"method"}],"OnHoverDropdownItem":[{"__symbolic":"method"}],"IsInitialEmpty":[{"__symbolic":"method"}],"HasChosenValue":[{"__symbolic":"method"}],"EmptySearch":[{"__symbolic":"method"}],"ClearValue":[{"__symbolic":"method"}]}}}},{"__symbolic":"module","version":1,"metadata":{"CompleterComponent":{"__symbolic":"class","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Component"},"arguments":[{"selector":"ng-completer","template":"\n      <div #element class=\"ng-autocomplete-dropdown\" [ngClass]=\"{'open': dropdown._open, 'is-loading': _DOM.isLoading, 'is-async': group.async !== null}\">\n\n        <!--GROUP: {{group.key}}-->\n\n        <div class=\"ng-autocomplete-inputs\" (click)=\"RegisterClick()\"\n             [ngClass]=\"{'completion-off': !group.completion}\">\n                <span class=\"ng-autocomplete-placeholder\"\n                      *ngIf=\"_DOM.placeholder\">\n                  <ng-container *ngIf=\"group.placeholderValue\">\n                      <ng-template *ngTemplateOutlet=\"group.placeholderValue; context: {$implicit: _DOM.placeholder}\"></ng-template>\n                  </ng-container>\n                  <ng-template [ngIf]=\"!group.placeholderValue\">\n                      {{_DOM.placeholder.title}}\n                  </ng-template>\n                </span>\n          <input #input type=\"text\" [placeholder]=\"group.placeholder\" name=\"completer\" [(ngModel)]=\"_completer\"\n                 (ngModelChange)=\"_change.next($event);\"\n                 [value]=\"_completer\"\n                 autocomplete=\"off\"\n                 (click)=\"OpenDropdown()\"\n                 (focus)=\"OpenDropdown()\" class=\"ng-autocomplete-input\">\n\n          <span [ngClass]=\"{'open': dropdown._open}\" class=\"ng-autocomplete-dropdown-icon\"\n                (click)=\"DropdownArray()\"></span>\n        </div>\n\n        <div class=\"ng-dropdown\" ngDropdown [list]=\"_items\" [element]=\"element\" [input]=\"input\"\n             [ngClass]=\"{'is-initial-empty': _DOM.empty}\"\n             [active]=\"_DOM.selected\" [key]=\"group.key\"\n             [completion]=\"group.completion\"\n             (hover)=\"OnHoverDropdownItem($event)\"\n             (selected)=\"SelectItem($event)\"\n             (closed)=\"OnInputBlurred()\"\n        >\n          <div *ngIf=\"_DOM.notFound && group.noResults\" class=\"dropdown-item no-results\">\n            <ng-container *ngIf=\"group.noResults\">\n              <ng-template *ngTemplateOutlet=\"group.noResults; context: {$implicit: _completer}\"></ng-template>\n            </ng-container>\n          </div>\n\n          <div class=\"dropdown-item\" *ngFor=\"let item of _items | keys; let i = index\"\n               (click)=\"SelectItem(_items[item])\">\n\n            <ng-container *ngIf=\"group.dropdownValue\">\n              <ng-template\n                *ngTemplateOutlet=\"group.dropdownValue; context: {$implicit: _items[item], highlight: _items[item].title | highlight:_highlight}\"></ng-template>\n            </ng-container>\n\n            <div *ngIf=\"!group.dropdownValue\" [innerHTML]=\"_items[item].title | highlight:_highlight\"></div>\n          </div>\n        </div>\n      </div>","styles":["\n        .ng-autocomplete-inputs {\n            position: relative;\n        }\n\n        .ng-autocomplete-inputs.completion-off {\n            cursor: pointer;\n        }\n\n        .ng-autocomplete-inputs.completion-off input {\n            pointer-events: none;\n        }\n\n        .ng-autocomplete-placeholder {\n            pointer-events: none;\n        }\n\n        .ng-autocomplete-dropdown-icon {\n\n        }\n\n        .ng-autocomplete-dropdown .ng-dropdown {\n            display: none;\n        }\n\n        .ng-autocomplete-dropdown .ng-dropdown.is-empty {\n          display: none;\n        }\n\n        .ng-autocomplete-dropdown .ng-dropdown.open {\n            display: block;\n        }\n    "]}]}],"members":{"dropdown":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"ViewChild"},"arguments":[{"__symbolic":"reference","module":"../dropdown/ng-dropdown.directive","name":"NgDropdownDirective"}]}]}],"cleared":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"selected":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"}}]}],"noResult":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Output"},"arguments":["no-result"]}]}],"group":[{"__symbolic":"property","decorators":[{"__symbolic":"call","expression":{"__symbolic":"reference","module":"@angular/core","name":"Input"}}]}],"__ctor__":[{"__symbolic":"constructor","parameters":[{"__symbolic":"reference","module":"@angular/core","name":"NgZone"}]}],"ngOnInit":[{"__symbolic":"method"}],"RegisterClick":[{"__symbolic":"method"}],"DropdownArray":[{"__symbolic":"method"}],"SwitchDropdownState":[{"__symbolic":"method"}],"CloseDropdown":[{"__symbolic":"method"}],"OpenDropdown":[{"__symbolic":"method"}],"SetItems":[{"__symbolic":"method"}],"SelectItem":[{"__symbolic":"method"}],"RunAsyncFunction":[{"__symbolic":"method"}],"OnModelChange":[{"__symbolic":"method"}],"ClearModel":[{"__symbolic":"method"}],"CompareItemsAndSet":[{"__symbolic":"method"}],"OnInputBlurred":[{"__symbolic":"method"}],"OnHoverDropdownItem":[{"__symbolic":"method"}],"IsInitialEmpty":[{"__symbolic":"method"}],"HasChosenValue":[{"__symbolic":"method"}],"EmptySearch":[{"__symbolic":"method"}],"ClearValue":[{"__symbolic":"method"}]}}}}]