import { Injectable, NgZone } from '@angular/core';
var MalihuScrollbarService = (function () {
    function MalihuScrollbarService(zone) {
        this.zone = zone;
    }
    MalihuScrollbarService.prototype.initScrollbar = function (element, options) {
        var jQueryElement = this.getElement(element);
        this.zone.runOutsideAngular(function () { return jQueryElement.mCustomScrollbar(options); });
        if (jQueryElement.length > 0 && jQueryElement[0].tagName === 'BODY') {
            jQueryElement[0].style.position = 'absolute';
            jQueryElement[0].style.overflow = 'auto';
            jQueryElement[0].style.height = '100vh';
            jQueryElement[0].style.width = '100vw';
        }
    };
    MalihuScrollbarService.prototype.scrollTo = function (element, parameter, options) {
        var _this = this;
        this.zone.runOutsideAngular(function () { return _this.getElement(element).mCustomScrollbar('scrollTo', parameter, options); });
    };
    MalihuScrollbarService.prototype.update = function (element) {
        var _this = this;
        this.zone.runOutsideAngular(function () { return _this.getElement(element).mCustomScrollbar('update'); });
    };
    MalihuScrollbarService.prototype.stop = function (element) {
        var _this = this;
        this.zone.runOutsideAngular(function () { return _this.getElement(element).mCustomScrollbar('stop'); });
    };
    MalihuScrollbarService.prototype.disable = function (element, reset) {
        var _this = this;
        this.zone.runOutsideAngular(function () { return _this.getElement(element).mCustomScrollbar('disable', !!reset); });
    };
    MalihuScrollbarService.prototype.destroy = function (element) {
        var _this = this;
        this.zone.runOutsideAngular(function () { return _this.getElement(element).mCustomScrollbar('destroy'); });
    };
    MalihuScrollbarService.prototype.getElement = function (element) {
        if (typeof element === 'string' || element instanceof String) {
            return $(element);
        }
        if (typeof element === 'object' && element instanceof HTMLElement) {
            return $(element);
        }
        if (element instanceof jQuery || 'jquery' in Object(element)) {
            return element;
        }
        throw Error("Unsupported element type in MalihuScrollbarService: " + element);
    };
    return MalihuScrollbarService;
}());
export { MalihuScrollbarService };
MalihuScrollbarService.decorators = [
    { type: Injectable },
];
/** @nocollapse */
MalihuScrollbarService.ctorParameters = function () { return [
    { type: NgZone, },
]; };
//# sourceMappingURL=malihu-scrollbar.service.js.map