{"version":3,"sources":["/home/cbl1002/Documents/realestate-admin/src/app/layout/settings/documents/documents.component.css","/home/cbl1002/Documents/realestate-admin/src/app/layout/settings/documents/documents.component.html","/home/cbl1002/Documents/realestate-admin/src/app/layout/settings/documents/documents.component.ts","/home/cbl1002/Documents/realestate-admin/src/app/layout/settings/edit-profile/edit-profile.component.css","/home/cbl1002/Documents/realestate-admin/src/app/layout/settings/edit-profile/edit-profile.component.html","/home/cbl1002/Documents/realestate-admin/src/app/layout/settings/edit-profile/edit-profile.component.ts","/home/cbl1002/Documents/realestate-admin/src/app/layout/settings/locality/locality.component.css","/home/cbl1002/Documents/realestate-admin/src/app/layout/settings/locality/locality.component.html","/home/cbl1002/Documents/realestate-admin/src/app/layout/settings/locality/locality.component.ts","/home/cbl1002/Documents/realestate-admin/src/app/layout/settings/location/location.component.css","/home/cbl1002/Documents/realestate-admin/src/app/layout/settings/location/location.component.html","/home/cbl1002/Documents/realestate-admin/src/app/layout/settings/location/location.component.ts","/home/cbl1002/Documents/realestate-admin/src/app/layout/settings/project/project.component.css","/home/cbl1002/Documents/realestate-admin/src/app/layout/settings/project/project.component.html","/home/cbl1002/Documents/realestate-admin/src/app/layout/settings/project/project.component.ts","/home/cbl1002/Documents/realestate-admin/src/app/layout/settings/property/property.component.css","/home/cbl1002/Documents/realestate-admin/src/app/layout/settings/property/property.component.html","/home/cbl1002/Documents/realestate-admin/src/app/layout/settings/property/property.component.ts","/home/cbl1002/Documents/realestate-admin/src/app/layout/settings/settings.component.css","/home/cbl1002/Documents/realestate-admin/src/app/layout/settings/settings.component.html","/home/cbl1002/Documents/realestate-admin/src/app/layout/settings/settings.component.ts","/home/cbl1002/Documents/realestate-admin/src/app/layout/settings/settings.module.ts","/home/cbl1002/Documents/realestate-admin/src/app/models/document.model.ts","/home/cbl1002/Documents/realestate-admin/src/app/models/locality.model.ts","/home/cbl1002/Documents/realestate-admin/src/app/models/location.model.ts","/home/cbl1002/Documents/realestate-admin/src/app/models/project.model.ts","/home/cbl1002/Documents/realestate-admin/src/app/models/property.model.ts"],"names":[],"mappings":"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","file":"2.chunk.js","sourcesContent":["exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/cbl1002/Documents/realestate-admin/src/app/layout/settings/documents/documents.component.css\n// module id = ../../../../../src/app/layout/settings/documents/documents.component.css\n// module chunks = 2","module.exports = \"\\n<div class=\\\"container-fluid\\\">\\n    <div class=\\\"breadcrumb-group\\\">\\n        <h5>Settings</h5>\\n        <nav class=\\\"breadcrumb\\\">\\n            <a class=\\\"breadcrumb-item\\\">Home</a>\\n            <!-- <a class=\\\"breadcrumb-item\\\" routerLink=\\\"/dashboard\\\">Home</a> -->\\n          <a class=\\\"breadcrumb-item\\\">Settings</a>\\n          <span class=\\\"breadcrumb-item active\\\">Documents Listing</span>\\n        </nav>\\n    </div>\\n    <!-- <ngx-loading [show]=\\\"parameter.loading\\\"></ngx-loading> -->\\n    <div class=\\\"white-bg\\\">\\n        <div class=\\\"page-title\\\">\\n          <h3>Documents</h3>\\n        </div>\\n  \\n        <div class=\\\"form-outer\\\">\\n            <div class=\\\"inline-form-group\\\">\\n               <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-4\\\">\\n                      <label><strong>Document Name</strong></label>\\n                  </div>\\n                  <div class=\\\"col-md-8\\\" *ngIf=\\\"admin?.admin_acl['Settings']?.can_create==1\\\">\\n                     <form role=\\\"form\\\" novalidate #addForm=\\\"ngForm\\\" (ngSubmit)=\\\"checkIfSpanishNameEntered('', addForm.value.name_en, addForm.value.name_es, 1, 'add');\\\">\\n                        <div class=\\\"row\\\">\\n                          <div class=\\\"col-lg-6 col-md-6\\\">\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Name (English)\\\" id=\\\"name_en\\\" required [(ngModel)]=\\\"model.name_en\\\" name=\\\"name_en\\\">\\n                          </div>\\n                          <div class=\\\"col-lg-6 col-md-6\\\">\\n                              <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Name (Spanish)\\\" [(ngModel)]=\\\"model.name_es\\\" name=\\\"name_es\\\">\\n                          </div>\\n                        </div>\\n                      <button [disabled]=\\\"addForm.invalid\\\" type=\\\"submit\\\" class=\\\"add-btn btn\\\">\\n                         <img src=\\\"./../../../../assets/img/add.png\\\" alt=\\\"img\\\">\\n                       </button>\\n                     </form>\\n                  </div>\\n               </div>\\n            </div>\\n        </div>\\n  \\n        <div class=\\\"tabel-section padding40 paddingT0\\\">\\n            <div class=\\\"table-responsive\\\">\\n              <table class=\\\"table table-striped\\\">\\n                  <tr>\\n                    <th style=\\\"width:40%; text-align:left;\\\">Name (English)</th>\\n                    <th style=\\\"width:40%; text-align:left;\\\">Name (Spanish)</th>\\n                    <!-- <th style=\\\"width:20%\\\">Action</th> -->\\n                  </tr>\\n                  <tr *ngFor=\\\"let item of parameter.items\\\">\\n                    <td class=\\\"text-left\\\">\\n                      {{item.name_en}}\\n                    </td>\\n                    <td class=\\\"text-left\\\">\\n                      {{item.name_es}}\\n                    </td>\\n                    <!-- <td>\\n                      <a title=\\\"Edit Configuration\\\" (click)=\\\"openPossessionStatusModal(addPossessionStatusModal, item.id, item.name_en, item.name_es, item.status)\\\" class=\\\"icon-block edit-icon\\\"><img src=\\\"./../../../../assets/img/edit.png\\\" alt=\\\"img\\\"></a>\\n                      <a *ngIf=\\\"item.status == 1\\\" (click)=\\\"addPossessionStatusPopup(item.id, item.name_en, item.name_es, 0, 'block')\\\" title=\\\"Block Configuration\\\" class=\\\"icon-block block-icon\\\"><img src=\\\"./../../../../assets/img/unblock.png\\\" alt=\\\"img\\\"></a>\\n                      <a *ngIf=\\\"item.status == 0\\\" (click)=\\\"addPossessionStatusPopup(item.id, item.name_en, item.name_es, 1, 'unblock')\\\" title=\\\"Unblock Configuration\\\" class=\\\"icon-block block-icon unblock-bg\\\"><img src=\\\"./../../../../assets/img/block.png\\\" alt=\\\"img\\\"></a>\\n                    </td> -->\\n                  </tr>\\n  \\n                  <div *ngIf=\\\"parameter.total == 0\\\">\\n                    <p class=\\\"show-error\\\">\\n                      {{constant.errorMsg.NO_POSSESSION_FOUND}}\\n                    </p>\\n                  </div>\\n              </table>\\n            </div>\\n        </div>\\n  \\n    </div>\\n  </div>\\n  \\n  \\n  <!-- add possession status modal -->\\n  <ng-template #addPossessionStatusModal>\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header my-modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Edit Property Configuration</h4>\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <form class=\\\"form-horizontal my-modal-form\\\" role=\\\"form\\\" novalidate #addForm=\\\"ngForm\\\" (ngSubmit)=\\\"checkIfPossessionSpanishNameEntered(project.possession.id, addForm.value.name_en, addForm.value.name_es, project.possession.status, 'edit')\\\">\\n        <div class=\\\"modal-body my-modal-body\\\">\\n          <div class=\\\"form-group\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Project possession status (English)\\\" id=\\\"name_en\\\" required [(ngModel)]=\\\"project.possession.name_en\\\" name=\\\"name_en\\\" #name_en=\\\"ngModel\\\">\\n            <!-- <div *ngIf=\\\"name_en.errors && (name_en.dirty || name_en.touched)\\\" class=\\\"show-error\\\">\\n                <div [hidden]=\\\"!name_en.errors.required\\\">\\n                  {{constant.errorMsg.PROPERTY_TYPE_REQUIRED}}\\n                </div>\\n            </div> -->\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Project possession status (Spanish)\\\" [(ngModel)]=\\\"project.possession.name_es\\\" name=\\\"name_es\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n          <button type=\\\"submit\\\" [disabled]=\\\"addForm.invalid\\\" class=\\\"btn btn-info\\\">Submit</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-default\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">Close</button>\\n        </div>\\n      </form>\\n    </div>\\n  </ng-template>\\n  \\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/cbl1002/Documents/realestate-admin/src/app/layout/settings/documents/documents.component.html\n// module id = ../../../../../src/app/layout/settings/documents/documents.component.html\n// module chunks = 2","import { Component, OnInit, TemplateRef, ElementRef } from '@angular/core';\nimport { AdminService } from '../../../services/admin.service';\nimport { IProperty } from '../../../common/property';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { Constant } from './../../../common/constants';\nimport { Document } from './../../../models/document.model';\ndeclare let swal: any;\n\n\n@Component({\n  selector: 'app-documents',\n  templateUrl: './documents.component.html',\n  styleUrls: ['./documents.component.css'],\n  providers: [Constant, Document]\n})\nexport class DocumentsComponent implements OnInit {\n\n\n  public parameter: IProperty = {};\n  public modalRef: BsModalRef;\n  icon: any;\n\n  constructor(\n    public constant: Constant,\n    private modalService: BsModalService,\n    public admin: AdminService,\n    public model: Document\n  ) {\n  }\n\n  ngOnInit() {\n    this.getDocumentOptions();\n  }\n\n  closeModal() {\n    // this.amenityModel = new Amenities;\n    this.modalRef.hide();\n  }\n\n  // public openPossessionStatusModal(template: TemplateRef<any>, id, name_en, name_es, status) {\n  //   this.project.possession.id = id;\n  //   this.project.possession.name_en = name_en;\n  //   this.project.possession.name_es = name_es == null ? name_en : name_es;\n  //   this.project.possession.status = status;\n  //   this.modalRef = this.modalService.show(template);\n  // }\n\n\n  addDocumentOptions(id, name_en, name_es, status, type) {\n\n    if (type !== 'add') {this.modalRef.hide(); }\n\n    // this.parameter.loading = true;\n    this.parameter.url = 'addDocumentOptions';\n\n    const input = new FormData();\n    input.append('name_en', name_en);\n    input.append('name_es', name_es);\n    input.append('status', status);\n\n    if (id) {input.append('id', id); }\n\n    this.admin.postDataApi(this.parameter.url, input)\n      .subscribe(\n        success => {\n          this.model = new Document();\n          // console.log('addDocumentOptions', success);\n          const text = id ?\n          this.constant.successMsg.DOCUMENT_NAME_UPDATED_SUCCESSFULLY :\n          this.constant.successMsg.DOCUMENT_NAME_ADDED_SUCCESSFULLY;\n          swal('Success', text, 'success');\n          this.parameter.items.push(success.data);\n        }\n      );\n  }\n\n\n  getDocumentOptions() {\n    this.parameter.url = 'getDocumentOptions';\n    this.admin.postDataApi(this.parameter.url, {})\n      .subscribe(\n        success => {\n          // console.log('getDocumentOptions', success);\n          this.parameter.items = success.data;\n          this.parameter.total = success.data.length;\n        }\n      );\n  }\n\n\n\n  addPossessionStatusPopup(id, name_en, name_es, status, type) {\n    const text = status === 1 ? this.constant.title.UNBLOCK_PROJECT_POSSESSION : this.constant.title.BLOCK_PROJECT_POSSESSION;\n    swal({\n      // title: this.constant.title.ARE_YOU_SURE,\n      // text: status === 1 ? this.constant.title.UNBLOCK_PROJECT_POSSESSION : this.constant.title.BLOCK_PROJECT_POSSESSION,\n      html: this.constant.title.ARE_YOU_SURE + '<br>' + text,\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: this.constant.confirmButtonColor,\n      cancelButtonColor: this.constant.cancelButtonColor,\n      confirmButtonText: 'Yes'\n    }).then((result) => {\n      if (result.value) {\n        this.addDocumentOptions(id, name_en, name_es, status, type);\n      }\n    });\n  }\n\n\n  checkIfSpanishNameEntered(id, name_en, name_es, status, type) {\n    // console.log('id, name_en, name_es, status, type', id, name_en, name_es, status, type);\n    const self = this;\n    if (name_es === undefined) {\n      swal({\n        text: this.constant.errorMsg.SAVE_ENGLISH_DOCUMENT_NAME,\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: this.constant.confirmButtonColor,\n        cancelButtonColor: this.constant.cancelButtonColor,\n        confirmButtonText: 'Yes'\n      }).then((result) => {\n        if (result.value) {\n          this.addDocumentOptions(id, name_en, name_en, status, type);\n        }\n      });\n    }else {\n      self.addDocumentOptions(id, name_en, name_es, status, type);\n    }\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/cbl1002/Documents/realestate-admin/src/app/layout/settings/documents/documents.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/cbl1002/Documents/realestate-admin/src/app/layout/settings/edit-profile/edit-profile.component.css\n// module id = ../../../../../src/app/layout/settings/edit-profile/edit-profile.component.css\n// module chunks = 2","module.exports = \"<!--content start-->\\n<div class=\\\"container-fluid\\\">\\n    <div class=\\\"breadcrumb-group\\\">\\n      <h5>Settings</h5>\\n      <nav class=\\\"breadcrumb\\\">\\n        <a class=\\\"breadcrumb-item\\\">Home</a>\\n          <!-- <a class=\\\"breadcrumb-item\\\" routerLink=\\\"/dashboard\\\">Home</a> -->\\n          <a class=\\\"breadcrumb-item\\\">Settings</a>\\n          <span class=\\\"breadcrumb-item active\\\">Edit Profile</span>\\n      </nav>\\n    </div>\\n\\n    <!-- <ngx-loading [show]=\\\"parameter.loading\\\"></ngx-loading> -->\\n    \\n    <!-- <div class=\\\"white-bg\\\">\\n      <div class=\\\"page-title\\\">\\n          <h3>Edit Profile</h3>\\n      </div>\\n\\n    </div> -->\\n\\n\\n\\n    <form class=\\\"form-horizontal\\\" novalidate #addForm=\\\"ngForm\\\" (ngSubmit)=\\\"updateProfile(addForm)\\\">\\n        \\n        <div class=\\\"form-group row\\\">\\n            <label class=\\\"col-sm-2 col-form-label\\\">Image:</label>\\n            <div class=\\\"col-sm-10\\\">\\n                <input required accept=\\\"image/*\\\" class=\\\"image\\\" (change)=\\\"changeListner($event)\\\" type=\\\"file\\\">\\n            </div>\\n          </div>\\n            <div class=\\\"form-group row\\\">\\n              <label class=\\\"col-sm-2 col-form-label\\\">Name:</label>\\n              <div class=\\\"col-sm-10\\\">\\n  \\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Name\\\" id=\\\"name\\\" required minlength=\\\"1\\\" [(ngModel)]=\\\"model.name\\\" name=\\\"name\\\" #name=\\\"ngModel\\\">\\n  \\n                  <div *ngIf=\\\"name.errors && (name.dirty || name.touched)\\\" class=\\\"show-error\\\">\\n                      <div [hidden]=\\\"!name.errors.required\\\">\\n                          Name is required!\\n                      </div>\\n                      <div [hidden]=\\\"!name.errors.min\\\">\\n                          Name must be at least 1.\\n                      </div>\\n                  </div>\\n  \\n              </div>\\n            </div>\\n              \\n            <div class=\\\"form-group row\\\">\\n              <label class=\\\"col-sm-2 col-form-label\\\">Contact Number:</label>\\n              <div class=\\\"col-sm-10\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\"\\n                id=\\\"phone\\\" required minlength=\\\"1\\\" [(ngModel)]=\\\"model.phone\\\" \\n                name=\\\"phone\\\" #phone=\\\"ngModel\\\"\\nng2TelInput\\n[ng2TelInputOptions]=\\\"initialCountry\\\"\\n(countryChange)=\\\"onCountryChange($event)\\\" />\\n\\n\\n                <div *ngIf=\\\"phone.errors && (phone.dirty || phone.touched)\\\" class=\\\"show-error\\\">\\n                    <div [hidden]=\\\"!phone.errors.required\\\">\\n                      Contact Phone Number is required!\\n                    </div>\\n                    <div [hidden]=\\\"!phone.errors.min\\\">\\n                      Contact Phone Number must be at least 1.\\n                    </div>\\n                </div>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group btn-cont text-right\\\">\\n              <button [disabled]=\\\"parameter.loading\\\" class=\\\"btn btn-primary apply-btn\\\" type=\\\"submit\\\">Update Settings</button>\\n            </div>\\n      </form>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/cbl1002/Documents/realestate-admin/src/app/layout/settings/edit-profile/edit-profile.component.html\n// module id = ../../../../../src/app/layout/settings/edit-profile/edit-profile.component.html\n// module chunks = 2","import { Component, OnInit, ElementRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AdminService } from '../../../services/admin.service';\n// import { SweetAlertService } from 'ngx-sweetalert2';\nimport { IProperty } from '../../../common/property';\nimport { NgForm } from '@angular/forms';\ndeclare let swal: any;\n\n@Component({\n  selector: 'app-edit-profile',\n  templateUrl: './edit-profile.component.html',\n  styleUrls: ['./edit-profile.component.css']\n})\nexport class EditProfileComponent implements OnInit {\n\n  public parameter: IProperty = {};\n  initialCountry: any;\n  model = {\n    name: '',\n    phone: '',\n    image: ''\n  };\n\n  constructor(private element: ElementRef, private router: Router, private admin: AdminService,\n    // private swal: SweetAlertService\n  ) { }\n\n  ngOnInit() {\n  }\n\n  onCountryChange(e) {\n    this.parameter.countryCode = e.iso2;\n    this.parameter.dialCode = e.dialCode;\n    this.initialCountry = {initialCountry: e.iso2};\n  }\n\n  changeListner(event) {\n    const reader = new FileReader();\n\n    const image = this.element.nativeElement.querySelector('.image');\n\n    this.parameter.image = event.target.files[0];\n    this.parameter.icon = this.parameter.image;\n\n    reader.onload = function(e) {\n      const src = e.target['result'];\n        image.src = src;\n    };\n\n    reader.readAsDataURL(event.target.files[0]);\n  }\n\n  updateProfile(formData: NgForm) {\n    // this.parameter.loading = true;\n    this.parameter.url = 'updateProfile';\n\n    const input = new FormData();\n    input.append('name', formData.value.name);\n    input.append('phone', formData.value.phone);\n    // input.append(\"country_code\", this.parameter.countryCode);\n    input.append('image', this.parameter.image);\n\n    this.admin.postDataApi(this.parameter.url, input)\n      .subscribe(\n        success => {\n          console.log('succccc', success);\n          // this.parameter.loading = false;\n          this.admin.login.next(success.data);\n          swal('Success', success.message, 'success');\n\n          // this.swal.success({\n          //   title: 'Success',\n          //   text: 'Details updated successfully!'\n          // });\n        }\n        // error => {\n        //   this.parameter.loading = false;\n        //   if (error.statusCode === 401) {\n        //     this.router.navigate(['']);\n        //   }else {\n        //     swal('Error', error.message, 'error');\n        //     // this.swal.warning({ text: error.message });\n        //   }\n        // }\n      );\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/cbl1002/Documents/realestate-admin/src/app/layout/settings/edit-profile/edit-profile.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".selectedRow{\\n    background: rgb(228, 224, 224)\\n}\\n.locality-name{\\n    cursor: pointer;\\n}\\n.form-model0P{\\n    padding: 0px !important;\\n}\\n.model-body10P{\\n    padding: 10px !important;\\n}\\n.my-modal-header{\\n    display: inline;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/cbl1002/Documents/realestate-admin/src/app/layout/settings/locality/locality.component.css\n// module id = ../../../../../src/app/layout/settings/locality/locality.component.css\n// module chunks = 2","module.exports = \"<!--content start-->\\n<div class=\\\"container-fluid\\\">\\n  <div class=\\\"breadcrumb-group\\\">\\n    <h5>Settings</h5>\\n    <nav class=\\\"breadcrumb\\\">\\n        <a class=\\\"breadcrumb-item\\\">Home</a>\\n        <!-- <a class=\\\"breadcrumb-item\\\" routerLink=\\\"/dashboard\\\">Home</a> -->\\n        <a class=\\\"breadcrumb-item\\\">Settings</a>\\n        <span class=\\\"breadcrumb-item active\\\">Locality</span>\\n    </nav>\\n  </div>\\n    \\n  <div class=\\\"white-bg\\\">\\n    <div class=\\\"page-title\\\">\\n        <h3>Locality</h3>\\n    </div>\\n\\n    <!-- add city -->\\n    <div class=\\\"form-outer marginT15\\\">\\n      <div class=\\\"inline-form-group\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <label><strong>Add Locality</strong></label>\\n            <hr>\\n          </div>\\n          <div class=\\\"col-lg-3 col-md-3 col-sm-6 col-6\\\">\\n            <div class=\\\"form-group marginB0\\\">\\n              <label>Country</label>\\n              <select title=\\\"Choose Country\\\" class=\\\"form-control\\\" (change)=\\\"getStates($event.target.value, '')\\\">\\n                <option value=\\\"\\\" disabled>Select Country</option>\\n                <option *ngFor=\\\"let country of parameter.countries\\\" value=\\\"{{country.id}}\\\" [selected]=\\\"country.id == parameter.country_id\\\">{{country.name_en}}</option>\\n              </select>\\n            </div>\\n          </div>\\n          <div class=\\\"col-lg-3 col-md-3 col-sm-6 col-6\\\">\\n            <div class=\\\"form-group marginB0\\\">\\n              <label>State</label>\\n              <select title=\\\"Choose State\\\" class=\\\"form-control\\\" (change)=\\\"getCities($event.target.value, '')\\\">\\n                <option value=\\\"\\\" disabled>Select State</option>\\n                <option *ngFor=\\\"let state of parameter.states\\\" value=\\\"{{state.id}}\\\" [selected]=\\\"state.id == parameter.state_id\\\">{{state.name_en}}</option>\\n              </select>\\n            </div>\\n          </div>\\n          <div class=\\\"col-lg-3 col-md-3 col-sm-6 col-6\\\">\\n            <div class=\\\"form-group marginB0\\\">\\n              <label>City</label>\\n              <select title=\\\"Choose City\\\" class=\\\"form-control\\\" (change)=\\\"getLocalities($event.target.value)\\\">\\n                <option value=\\\"\\\" disabled>Select City</option>\\n                <option *ngFor=\\\"let city of parameter.cities\\\" value=\\\"{{city.id}}\\\" [selected]=\\\"city.id == parameter.city_id\\\">{{city.name_en}}</option>\\n              </select>\\n            </div>\\n          </div>\\n          <div class=\\\"col-lg-3 col-md-3 col-sm-6 col-6\\\">\\n\\n          </div>\\n        </div>\\n      </div>\\n  </div>\\n  <hr>\\n  \\n  <div class=\\\"form-outer marginT15 padding40\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-4\\\">\\n        <table class=\\\"table table-striped\\\">\\n          <tr>\\n            <th style=\\\"width:80%; text-align:left;\\\">\\n                <div class=\\\"table-search\\\">\\n                <input type=\\\"Search here\\\" style=\\\"height:32px;\\\" (input)=\\\"getLocalities(parameter.city_id, $event.target.value)\\\" name=\\\"\\\" placeholder=\\\"Search here\\\">\\n                </div>\\n            </th>\\n            <th style=\\\"width:20%\\\">Action</th>\\n          </tr>\\n          <tr *ngFor=\\\"let locality of all_overlays; let index = index\\\" (click)=\\\"markLocalityFeatured(index, locality.id, locality.is_featured==1?0:1)\\\" title=\\\"{{locality.is_featured==1?'Click to unfeature.':'Click to feature.'}}\\\">\\n            <td class=\\\"text-left locality-name\\\" [ngClass]=\\\"locality.id == selectedLocality ? 'selectedRow' : ''\\\" (click)=\\\"setSelection(locality.overlay, locality.id)\\\">\\n              {{locality.name_en}}\\n            </td>\\n            <!-- <td>\\n              <a (click)=\\\"upadteSelection(locality, index)\\\" title=\\\"Unblock State\\\" class=\\\"icon-block block-icon\\\"><img src=\\\"./../../../../assets/img/top-arrow.png\\\" alt=\\\"img\\\"></a>\\n            </td> -->\\n            <td [ngClass]=\\\"locality.id == selectedLocality ? 'selectedRow' : ''\\\">\\n              <a *ngIf=\\\"locality.status == 0\\\" (click)=\\\"blockUnblockLocality(locality, index, 1)\\\" title=\\\"Unblock Locality\\\" class=\\\"icon-block block-icon unblock-bg\\\"><img src=\\\"./../../../../assets/img/block.png\\\" alt=\\\"img\\\"></a>\\n              <a *ngIf=\\\"locality.status == 1\\\" (click)=\\\"blockUnblockLocality(locality, index, 0)\\\" title=\\\"Block Locality\\\" class=\\\"icon-block block-icon\\\"><img src=\\\"./../../../../assets/img/unblock.png\\\" alt=\\\"img\\\"></a>\\n            </td>\\n          </tr>\\n        </table>\\n\\n        <div class=\\\"error-border\\\" [ngSwitch]=\\\"true\\\">\\n          <p class=\\\"show-error\\\" *ngSwitchCase=\\\"parameter.states?.length == 0\\\">{{constant.errorMsg.NO_STATE_FOUND}}</p>\\n          <p class=\\\"show-error\\\" *ngSwitchCase=\\\"parameter.states?.length != 0 && parameter.cities?.length == 0\\\">{{constant.errorMsg.NO_CITY_FOUND}}</p>\\n          <p class=\\\"show-error\\\" *ngSwitchCase=\\\"parameter.states?.length != 0 && parameter.cities?.length != 0 && all_overlays?.length == 0\\\">{{constant.errorMsg.NO_LOCALITY_FOUND}}</p>\\n        </div>\\n\\n        <!-- <div class=\\\"error-border\\\" *ngIf=\\\"parameter.states?.length == 0; else localityNotFound\\\">\\n          <p class=\\\"show-error\\\">{{constant.errorMsg.NO_STATE_FOUND}}</p>\\n        </div>\\n        <ng-template #localityNotFound>\\n          <div class=\\\"error-border\\\" *ngIf=\\\"parameter.cities?.length == 0\\\">\\n            <p class=\\\"show-error\\\">{{constant.errorMsg.NO_LOCALITY_FOUND}}</p>\\n          </div>\\n          <ng-container *ngIf=\\\"bar === 99; else elseif2\\\">bar === 99</ng-container>\\n        </ng-template> -->\\n        <!-- <div class=\\\"error-border\\\" *ngIf=\\\"all_overlays?.length == 0\\\">\\n          <p class=\\\"show-error\\\">{{constant.errorMsg.NO_LOCALITY_FOUND}}</p>\\n        </div> -->\\n\\n\\n      </div>\\n\\n      <!-- google map -->\\n      <div class=\\\"col-md-8\\\">\\n        <div id=\\\"mapDiv\\\" style=\\\"height: 500px; width: 100%;\\\" #mapDiv></div>\\n      </div>\\n\\n    </div>\\n  </div>\\n\\n  </div>\\n</div>\\n<!--content end-->\\n\\n\\n<!-- Trigger the modal with a button -->\\n<button type=\\\"button\\\" style=\\\"display: none;\\\" class=\\\"btn btn-info\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\" #localityOpen>Open Modal</button>\\n\\n<!-- Modal -->\\n<div id=\\\"myModal\\\" class=\\\"modal fade\\\" role=\\\"dialog\\\">\\n  <div class=\\\"modal-dialog\\\">\\n\\n    <!-- Modal content-->\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header my-modal-header\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n        <h4 class=\\\"modal-title\\\">Add Locality Details</h4>\\n      </div>\\n      <form class=\\\"form-horizontal form-model0P\\\" role=\\\"form\\\" novalidate #addForm=\\\"ngForm\\\" (ngSubmit)=\\\"checkIfLocalitySpanishNameEntered(addForm.value.name_en, addForm.value.name_es, addForm.value.price_per_sqft)\\\">\\n        <div class=\\\"modal-body model-body10P\\\">\\n          <div class=\\\"form-group\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Locality name (English)\\\" id=\\\"name_en\\\" required [(ngModel)]=\\\"model.localityModel.name_en\\\" name=\\\"name_en\\\" #name_en=\\\"ngModel\\\">\\n            <!-- <div *ngIf=\\\"name_en.errors && (name_en.dirty || name_en.touched)\\\" class=\\\"show-error\\\">\\n                <div [hidden]=\\\"!name_en.errors.required\\\">\\n                  {{constant.errorMsg.COUNTRY_NAME_REQUIRED}}\\n                </div>\\n            </div> -->\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <input type=\\\"text\\\" name=\\\"name_es\\\" class=\\\"form-control\\\" placeholder=\\\"Locality name (Spanish)\\\" [(ngModel)]=\\\"model.localityModel.name_es\\\">\\n          </div>\\n\\n          <div class=\\\"form-group\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" min=\\\"1\\\" placeholder=\\\"Price per sqft\\\" id=\\\"price_per_sqft\\\" required [(ngModel)]=\\\"model.localityModel.price_per_sqft\\\" name=\\\"price_per_sqft\\\" #price_per_sqft=\\\"ngModel\\\">\\n            <!-- <div *ngIf=\\\"price_per_sqft.errors && (price_per_sqft.dirty || price_per_sqft.touched)\\\" class=\\\"show-error\\\">\\n                <div [hidden]=\\\"!price_per_sqft.errors.required\\\">\\n                  {{constant.errorMsg.PRICE_PER_SQFT_REQUIRED}}\\n                </div>\\n                <div [hidden]=\\\"!price_per_sqft.errors.min\\\">\\n                  {{constant.errorMsg.PRICE_PER_SQFT_MIN}}\\n                </div>\\n            </div> -->\\n          </div>\\n\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n          <button type=\\\"submit\\\" [disabled]=\\\"addForm.invalid\\\" class=\\\"btn btn-info\\\">Submit</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-default\\\" #localityClose data-dismiss=\\\"modal\\\">Close</button>\\n        </div>\\n      </form>\\n\\n    </div>\\n\\n  </div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/cbl1002/Documents/realestate-admin/src/app/layout/settings/locality/locality.component.html\n// module id = ../../../../../src/app/layout/settings/locality/locality.component.html\n// module chunks = 2","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { AdminService } from '../../../services/admin.service';\nimport { Router } from '@angular/router';\nimport { IProperty } from '../../../common/property';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { MapsAPILoader } from '@agm/core';\nimport { Constant } from './../../../common/constants';\nimport { Locality } from './../../../models/locality.model';\ndeclare let swal: any;\ndeclare const google;\n\n@Component({\n  selector: 'app-locality',\n  templateUrl: './locality.component.html',\n  styleUrls: ['./locality.component.css'],\n  providers: [Constant, Locality]\n})\n\nexport class LocalityComponent implements OnInit {\n\n  @ViewChild('localityOpen') localityOpen: ElementRef;\n  @ViewChild('localityClose') localityClose: ElementRef;\n\n  public parameter: IProperty = {};\n  public modalRef: BsModalRef;\n  agm: any;\n  len: any;\n\n  map: any;\n  all_overlays = [];\n  selectedLocality: any;\n  selectedShape: any;\n  shapeName: any;\n\n  showModal = true;\n\n  @ViewChild('mapDiv') mapDiv: ElementRef;\n\n  constructor(\n    private loader: MapsAPILoader,\n    public admin: AdminService,\n    private router: Router,\n    private constant: Constant,\n    public model: Locality\n  ) {}\n\n  ngOnInit() {\n    this.parameter.localities = [];\n    this.getCountries('');\n  }\n\n  getCountries(keyword) {\n\n    // this.parameter.loading = true;\n    this.parameter.url = 'getCountries';\n    const input = new FormData();\n\n    if (keyword) {\n      input.append('keyword', keyword);\n    }\n\n    this.admin.postDataApi(this.parameter.url, input)\n      .subscribe(\n        success => {\n          // console.log('countries', success);\n          // this.parameter.loading = false;\n          this.parameter.countries = success.data;\n          if (this.parameter.countries.length !== 0) {\n            this.parameter.country_id = this.parameter.countries[0].id;\n            this.getStates(this.parameter.countries[0].id, '');\n          }\n        }\n        // error => {\n        //   this.parameter.loading = false;\n        //   if (error.statusCode === 401) {\n        //     swal('Error', error.message, 'error');\n        //     this.router.navigate(['']);\n        //   }else {\n        //     swal('Error', error.message, 'error');\n        //   }\n        // }\n      );\n  }\n\n  getStates(country_id, keyword) {\n    // this.parameter.loading = true;\n    this.parameter.url = 'country/getStates';\n    this.parameter.country_id = country_id;\n\n    const input = new FormData();\n    input.append('country_id', country_id);\n\n    if (keyword) {\n      input.append('keyword', keyword);\n    }\n\n    this.admin.postDataApi(this.parameter.url, input)\n      .subscribe(\n        success => {\n          // console.log('states', success);\n          // this.parameter.loading = false;\n          this.parameter.states = success.data;\n          if (this.parameter.states.length) {\n            this.parameter.state_id = this.parameter.states[0].id;\n            this.getCities(this.parameter.states[0].id, '');\n          }else {\n            this.parameter.city_id = '0';\n            this.parameter.localityCount = 0;\n            this.parameter.cities = [];\n            this.parameter.localities = [];\n            this.all_overlays = [];\n            this.init();\n          }\n        }\n        // error => {\n        //   console.log(error);\n        //   this.parameter.loading = false;\n        //   if (error.statusCode === 401) {\n        //     this.router.navigate(['']);\n        //   }else {\n        //     swal('Error', error.message, 'error');\n        //   }\n        // }\n      );\n  }\n\n  getCities(state_id, keyword) {\n    // console.log('mm', state_id, keyword);\n    // this.parameter.loading = true;\n    this.parameter.url = 'getCities';\n    this.parameter.state_id = state_id;\n\n    const input = new FormData();\n    input.append('state_id', state_id);\n\n    if (keyword) {\n      input.append('keyword', keyword);\n    }\n\n    this.admin.postDataApi(this.parameter.url, input)\n      .subscribe(\n        success => {\n          // console.log('cities', success);\n          // this.parameter.loading = false;\n          this.parameter.cities = success.data;\n          if (this.parameter.cities.length) {\n            this.parameter.city_id = this.parameter.cities[0].id;\n            // console.log('cityid', this.parameter.city_id);\n            this.getLocalities(this.parameter.city_id, '');\n          }else {\n            this.parameter.localityCount = 0;\n            this.parameter.cities = [];\n            this.parameter.localities = [];\n            this.all_overlays = [];\n            this.init();\n          }\n        }\n        // error => {\n        //   console.log(error);\n        //   this.parameter.loading = false;\n        //   if (error.statusCode === 401) {\n        //     this.router.navigate(['']);\n        //   }else {\n        //     swal('Error', error.message, 'error');\n        //   }\n        // }\n      );\n  }\n\n\n  getLocalities(city_id, keyword= '') {\n    // console.log('mm', city_id, keyword);\n    // this.parameter.loading = true;\n    this.parameter.url = 'getLocalities';\n    this.parameter.city_id = city_id;\n\n    const input = new FormData();\n    input.append('city_id', city_id);\n\n    if (keyword) {\n      input.append('keyword', keyword);\n    }\n\n    this.admin.postDataApi(this.parameter.url, input)\n      .subscribe(\n        success => {\n          // console.log('Localities', success);\n          // this.parameter.loading = false;\n          this.parameter.localities = success.data;\n          this.all_overlays = this.parameter.localities;\n          this.parameter.localityCount = success.data.length;\n          if (this.parameter.localities.length) {\n            this.selectedLocality = this.parameter.localities[0].id;\n          }else {\n            this.all_overlays = [];\n          }\n          this.init();\n        }\n        // error => {\n        //   console.log(error);\n        //   this.parameter.loading = false;\n        //   if (error.statusCode === 401) {\n        //     this.router.navigate(['']);\n        //   }else {\n        //     swal('Error', error.message, 'error');\n        //   }\n        // }\n      );\n  }\n\n\n\n\n  init() {\n\n      // Wait for the google maps script to be loaded before using the \"google\" keyword\n      this.loader.load().then(() => {\n      if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n          const map = new google.maps.Map(this.mapDiv.nativeElement, {\n              center: {\n                  lat: position.coords.latitude,\n                  lng: position.coords.longitude\n              },\n              zoom: 18\n          });\n          this.map = map;\n\n          let all_overlays_index = 0;\n          this.all_overlays.forEach(locality => {\n\n            const poly_coordinates = JSON.parse(locality.poly_coordinates);\n            // console.log(poly_coordinates);\n            const polygon = poly_coordinates.map(ll => {\n              // console.log(ll);\n              const latlng = ll.split(',');\n              const coord = new google.maps.LatLng(parseFloat(latlng[0]), parseFloat(latlng[1]));\n              // console.log(coord);\n              return coord;\n              }\n            );\n\n\n            // this.setSelection(polygon);\n            const singlePolygon = new google.maps.Polygon({\n              paths: polygon,\n              editable: false,\n              strokeColor: '#FF0000',\n              strokeOpacity: 0.8,\n              strokeWeight: 2,\n              fillColor: '#FF0000',\n              fillOpacity: 0.35\n            });\n            locality.overlay = singlePolygon;\n\n            // showing selected first locality\n            if (all_overlays_index === 0) {this.setSelection(singlePolygon, locality.id); }\n            all_overlays_index++;\n\n            // this.all_overlays.push(singlePolygon);\n            google.maps.event.addListener(singlePolygon, 'click', () => {\n              // console.log('click', singlePolygon, locality.id);\n              this.setSelection(singlePolygon, locality.id);\n            });\n\n            // google.maps.event.addListener(singlePolygon, 'mouseup', function(muEvent) {\n            //         console.log('33')\n            //   this.setSelection(singlePolygon);\n            // });\n\n            singlePolygon.setMap(map);\n\n          });\n\n\n          google.maps.event.addListener(map, 'click', event => {\n              // console.log(event);\n              this.placeMarker(event.latLng);\n              // console.log(event.latLng.toUrlValue(5));\n          });\n\n          const drawingManager = new google.maps.drawing.DrawingManager({\n\n              drawingControl: true,\n              drawingControlOptions: {\n                  position: google.maps.ControlPosition.TOP_CENTER,\n                  drawingModes: [\n                      // google.maps.drawing.OverlayType.MARKER,\n                      // google.maps.drawing.OverlayType.CIRCLE,\n                      google.maps.drawing.OverlayType.POLYGON,\n                      google.maps.drawing.OverlayType.RECTANGLE\n                  ]\n              },\n              polygonOptions: {\n                  clickable: true,\n                  draggable: true,\n                  editable: true,\n                  fillColor: '#00b96e',\n                  fillOpacity: 0.5,\n\n              },\n              rectangleOptions: {\n                  clickable: true,\n                  draggable: true,\n                  editable: true,\n                  fillColor: '#ffff00',\n                  fillOpacity: 0.5,\n              }\n          });\n\n\n          drawingManager.setMap(map);\n\n          google.maps.event.addListener(drawingManager, 'polygoncomplete', event => {\n\n              event.getPath().getLength();\n              google.maps.event.addListener(event.getPath(), 'insert_at', () => {\n                  const len = event.getPath().getLength();\n                  for (let i = 0; i < len; i++) {\n                      console.log(event.getPath().getAt(i).toUrlValue(5));\n                  }\n              });\n              google.maps.event.addListener(event.getPath(), 'set_at', () => {\n                  const len = event.getPath().getLength();\n                  for (let i = 0; i < len; i++) {\n                      console.log(event.getPath().getAt(i).toUrlValue(5));\n                  }\n              });\n          });\n\n          google.maps.event.addListener(drawingManager, 'overlaycomplete', event => {\n\n            this.parameter.overlay = this.getPolygonCoords(event.overlay);\n            this.localityOpen.nativeElement.click();\n\nconsole.log('xx', typeof this.getPolygonCoords(event.overlay));\n            // this.swal.prompt({\n            //   text:''\n            // }).then(f=>{\n\n            //   this.shapeName = f;\n\n            //   var locality = {\n            //     name_en: this.shapeName,\n            //     name_es: this.shapeName,\n            //     coordinates: this.getPolygonCoords(event.overlay),\n            //     poly_coordinates: JSON.stringify(this.getPolygonCoords(event.overlay)),\n            //     status:'1',\n            //     city_id:this.parameter.city_id,\n            //     overlay: event.overlay\n            //   };\n            //   //console.log(locality);\n            //   //this.all_overlays.push(locality);\n            //   //this.all_overlays = this.all_overlays;\n            //   //this.all_overlays.splice(0,2);\n            //   //this.len = this.all_overlays.length;\n            //   console.log(this.all_overlays);\n            //   delete locality.overlay;\n            //   //console.log(locality);\n\n            //   this.admin.postDataApi('addLocality', locality).subscribe(\n            //       r => {\n            //         console.log(r);\n            //         this.all_overlays.push(r.data);\n            //         //this.getLocalities(this.parameter.city_id,'');\n            //       });\n\n            // });\n            // this.all_overlays = this.all_overlays;\n\n\n\n              if (event.type !== google.maps.drawing.OverlayType.MARKER) {\n                  drawingManager.setDrawingMode(null);\n                  // Write code to select the newly selected object.\n\n                  const newShape = event.overlay;\n                  newShape.type = event.type;\n                  google.maps.event.addListener(newShape, 'click', () => {\n                      this.setSelection(newShape);\n                  });\n\n                  this.setSelection(newShape);\n\n              }\n          });\n\n\n          // var centerControlDiv = document.createElement('div');\n          //    var centerControl = new centerControl(centerControlDiv, map);\n          // var centerControl = this.CenterControl(centerControlDiv, map);\n\n          // centerControlDiv.index = 1;\n          // map.controls[google.maps.ControlPosition.BOTTOM_CENTER].push(centerControlDiv);\n      });\n      }\n      });\n  }\n\n\n  checkIfLocalitySpanishNameEntered(name_en, name_es, price_per_sqft) {\n    const self = this;\n    if (name_es === '') {\n      swal({\n        text: this.constant.errorMsg.SAVE_ENGLISH_COUNTRY_NAME,\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: this.constant.confirmButtonColor,\n        cancelButtonColor: this.constant.cancelButtonColor,\n        confirmButtonText: 'Yes'\n      }).then((result) => {\n        if (result.value) {\n          this.addLocality(name_en, name_en, price_per_sqft);\n        }\n      });\n    }else {\n      self.addLocality(name_en, name_es, price_per_sqft);\n    }\n  }\n\n\n  addLocality(name_en, name_es, price_per_sqft) {\n    this.localityClose.nativeElement.click();\n    const locality = {\n      name_en: name_en,\n      name_es: name_es,\n      price_per_sqft: price_per_sqft,\n      coordinates: this.parameter.overlay,\n      poly_coordinates: JSON.stringify(this.parameter.overlay),\n      status: '1',\n      city_id: this.parameter.city_id,\n      overlay: this.parameter.overlay\n    };\n// console.log('locality', locality);\n    delete locality.overlay;\n\n    this.admin.postDataApi('addLocality', locality).subscribe(\n        r => {\n          // console.log('zz', r);\n          this.all_overlays.push(r.data);\n        });\n  }\n\n\n  getPolygonCoords(newShape) {\n    // console.log('new', newShape);\n    // console.log('IN');\n      const coordinates_array = [];\n      const len = newShape.getPath().getLength();\n      for (let i = 0; i < len; i++) {\n          // console.log(newShape.getPath().getAt(i).toUrlValue(6));\n          coordinates_array.push(newShape.getPath().getAt(i).toUrlValue(6));\n      }\n      // console.log(coordinates_array);\n      return coordinates_array;\n  }\n\n  getLatLngFromString(ll) {\n      const latlng = ll.split(/, ?/);\n      return new google.maps.LatLng(parseFloat(latlng[0]), parseFloat(latlng[1]));\n  }\n\n  placeMarker(location) {\n      const marker = new google.maps.Marker({\n          position: location,\n          map: this.map\n      });\n\n  }\n\n  clearSelection() {\n      if (this.selectedShape) {\n          this.selectedShape.setEditable(false);\n          this.selectedShape = null;\n      }\n  }\n\n  setSelection(shape, locality= '') {\n// console.log('zzzzzzzzzzzz', shape);\n      this.clearSelection();\n      this.selectedLocality = locality;\n\n      this.selectedShape = shape;\n      shape.setEditable(true);\n      const coords = this.getPolygonCoords(shape);\n\n      const latlng = coords[0].split(',');\n      const coord = new google.maps.LatLng(parseFloat(latlng[0]), parseFloat(latlng[1]));\n\n\n      // console.log(coords);\n      // var center = new google.maps.LatLngBounds(shape).getCenter();\n      // let center = shape.my_getBounds().getCenter()\n\n      this.map.setCenter(coord);\n\n      // google.maps.event.addListener(selectedShape.getPath(), 'insert_at', getPolygonCoords(shape));\n      // google.maps.event.addListener(shape.getPath(), 'set_at', this.getPolygonCoords(shape));\n  }\n\n  deleteSelectedShape() {\n      if (this.selectedShape) {\n          this.selectedShape.setMap(null);\n      }\n  }\n\n  deleteAllShape() {\n      for (let i = 0; i < this.all_overlays.length; i++) {\n          this.all_overlays[i].overlay.setMap(null);\n      }\n      this.all_overlays = [];\n  }\n\n  getPolygons() {\n    // console.log(this.all_overlays);\n    this.all_overlays.forEach( (item, count) => {\n      // console.log('overlay' + count);\n      this.getPolygonCoords(item.overlay.overlay);\n    });\n  }\n\n  blockUnblockLocality(locality, index, type) {\n    this.parameter.index = index;\n    this.parameter.title = this.constant.title.ARE_YOU_SURE;\n    switch (type) {\n      case 0:\n        this.parameter.text = this.constant.title.BLOCK_LOCALITY;\n        this.parameter.successText = this.constant.successMsg.BLOCKED_SUCCESSFULLY;\n        break;\n      case 1:\n        this.parameter.text = this.constant.title.UNBLOCK_LOCALITY;\n        this.parameter.successText = this.constant.successMsg.UNBLOCKED_SUCCESSFULLY;\n        break;\n    }\n\n    swal({\n      // title: this.parameter.title,\n      // text: this.parameter.text,\n      html: this.parameter.title + '<br>' + this.parameter.text,\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: this.constant.confirmButtonColor,\n      cancelButtonColor: this.constant.cancelButtonColor,\n      confirmButtonText: 'Yes'\n    }).then((result) => {\n      if (result.value) {\n        this.removeSelection(locality, index, type);\n        swal('Success', this.parameter.successText, 'success');\n      }\n    });\n  }\n\n  removeSelection(locality, index, status) {\n      // console.log('Removing...', locality);\n      locality.status = status;\n      // this.all_overlays.splice(index,1);\n      // locality.overlay.setMap(null);\n      delete locality.overlay;\n      this.admin.postDataApi('addLocality', locality).subscribe(\n      r => {\n        // console.log(r);\n        // this.all_overlays.push(r.data);\n        // this.getLocalities(this.parameter.city_id,'');\n      });\n  }\n\n  upadteSelection(locality, index) {\n\n  }\n\n  markLocalityFeatured (index, locality_id, flag) {\n    let title = '';\n    if (flag === 1) {\n      title = 'You want to feature this locality?';\n    } else {\n      title = 'You want to unfeature this locality?';\n    }\n    swal({\n      html: 'Are you sure' + '<br>' + title,\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: this.constant.confirmButtonColor,\n      cancelButtonColor: this.constant.cancelButtonColor,\n      confirmButtonText: 'Yes'\n    }).then((result) => {\n      if (result.value) {\n        this.admin.postDataApi('markLocalityFeatured', {locality_id: locality_id, flag: flag}).subscribe(\n          r => {\n            this.parameter.localities[index] = r.data;\n            swal('Success', this.parameter.successText, 'success');\n          });\n      }\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/cbl1002/Documents/realestate-admin/src/app/layout/settings/locality/locality.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/cbl1002/Documents/realestate-admin/src/app/layout/settings/location/location.component.css\n// module id = ../../../../../src/app/layout/settings/location/location.component.css\n// module chunks = 2","module.exports = \"<!--content start-->\\n<div class=\\\"container-fluid\\\">\\n    <div class=\\\"breadcrumb-group\\\">\\n      <h5>Settings</h5>\\n      <nav class=\\\"breadcrumb\\\">\\n          <a class=\\\"breadcrumb-item\\\">Home</a>\\n          <a class=\\\"breadcrumb-item\\\">Settings</a>\\n          <span class=\\\"breadcrumb-item active\\\">Location</span>\\n      </nav>\\n    </div>\\n\\n    <!-- <ngx-loading [show]=\\\"parameter.loading\\\"></ngx-loading> -->\\n    \\n    <div class=\\\"white-bg\\\">\\n      <div class=\\\"page-title\\\">\\n          <h3>Location</h3>\\n      </div>\\n\\n      <!-- add country -->\\n      <div class=\\\"form-outer\\\">\\n          <div class=\\\"inline-form-group\\\">\\n          <div class=\\\"row\\\">\\n              <div class=\\\"col-md-12\\\">\\n                <label><strong>Country</strong></label>\\n              </div>\\n              <div class=\\\"col-xl-3 col-sm-6 col-12 table-search searh-2\\\">\\n                  <input type=\\\"text\\\" name=\\\"keyword\\\" [(ngModel)]=\\\"searchCountry\\\" (keyup.enter)=\\\"getCountries(searchCountry)\\\" placeholder=\\\"Search here\\\">\\n                  <button (click)=\\\"getCountries(searchCountry)\\\"><i class=\\\"fa fa-search\\\"></i></button>\\n              </div>\\n              <div class=\\\"col-xl-9 col-sm-6 col-12\\\">\\n                 <div class=\\\"form-group marginB0\\\">\\n                    <div class=\\\"btn-cont text-right\\\">\\n                        <a *ngIf=\\\"admin?.admin_acl['Settings']?.can_create==1\\\" class=\\\"btn btn-primary\\\" href=\\\"javascript://\\\" (click)=\\\"openCountryModal(addCountryModal, '', '', '', '1', -1)\\\">+ Add New</a>\\n                    </div>\\n                 </div>\\n              </div>\\n           </div>\\n           <hr>\\n          </div>\\n      </div>\\n\\n      <!-- list country -->\\n      <div class=\\\"tabel-section padding40 paddingT0\\\">\\n          <div class=\\\"table-responsive\\\">\\n            <table class=\\\"table table-striped\\\">\\n                <tr>\\n                  <th style=\\\"width:40%; text-align:left;\\\">Country (English)</th>\\n                  <th style=\\\"width:40%; text-align:left;\\\">Country (Spanish)</th>\\n                  <th style=\\\"width:20%\\\">Action</th>\\n                </tr>\\n                <tr *ngFor=\\\"let country of parameter.countries; let c=index\\\">\\n                  <td class=\\\"text-left\\\">\\n                    {{country.name_en}}\\n                  </td>\\n                  <td class=\\\"text-left\\\">\\n                    {{country.name_es}}\\n                  </td>\\n                  <td>\\n                    <a title=\\\"Edit Country\\\" (click)=\\\"openCountryModal(addCountryModal, country.id, country.name_en, country.name_es, country.status, c)\\\" class=\\\"icon-block edit-icon\\\"><img src=\\\"assets/img/edit.png\\\" alt=\\\"img\\\"></a>\\n                    <a *ngIf=\\\"country.status == 1\\\" (click)=\\\"blockUnblockCountry(country.id, country.name_en, country.name_es, 0, c)\\\" title=\\\"Block Country\\\" class=\\\"icon-block block-icon\\\"><img src=\\\"assets/img/unblock.png\\\" alt=\\\"img\\\"></a>\\n                    <a *ngIf=\\\"country.status == 0\\\" (click)=\\\"blockUnblockCountry(country.id, country.name_en, country.name_es, 1, c)\\\" title=\\\"Unblock Country\\\" class=\\\"icon-block block-icon unblock-bg\\\"><img src=\\\"assets/img/block.png\\\" alt=\\\"img\\\"></a>\\n                  </td>\\n                </tr>\\n            </table>\\n\\n            <div class=\\\"error-border\\\" *ngIf=\\\"parameter.countries?.length == 0\\\">\\n              <p class=\\\"show-error\\\">\\n                {{constant.errorMsg.NO_COUNTRY_FOUND}}\\n              </p>\\n            </div>\\n          </div>\\n      </div>\\n\\n      <!-- add state -->\\n        <div class=\\\"form-outer marginT15\\\">\\n          <div class=\\\"inline-form-group\\\">\\n          <div class=\\\"row\\\">\\n              <div class=\\\"col-md-12\\\">\\n                <label><strong>State</strong></label>\\n                <hr>\\n              </div>\\n              <div class=\\\"col-lg-3 col-md-3 col-sm-6 col-6\\\">\\n                 <div class=\\\"form-group marginB0\\\">\\n                    <label>Country</label>\\n                    <select class=\\\"form-control\\\" (change)=\\\"getStatesWRTCountry($event.target.value, '')\\\">\\n                      <!-- <option value=\\\"\\\" disabled>Select Country</option> -->\\n                       <option *ngFor=\\\"let country of parameter.countries1\\\" value=\\\"{{country.id}}\\\">{{country.name_en}}</option>\\n                    </select>\\n                 </div>\\n              </div>\\n              <div class=\\\"col-lg-3 col-md-3 col-sm-6 col-6 table-search\\\">\\n                <div class=\\\"form-group marginB0\\\">\\n                  <label>Search</label>\\n                  <div class=\\\"searh-2\\\">\\n                      <input type=\\\"text\\\" [(ngModel)]=\\\"searchState\\\" (keyup.enter)=\\\"getStatesWRTCountry(parameter.country_id, searchState)\\\" name=\\\"keyword\\\" placeholder=\\\"Search here\\\">\\n                      <button (click)=\\\"getStatesWRTCountry(parameter.country_id, searchState)\\\"><i class=\\\"fa fa-search\\\"></i></button>\\n                  </div>\\n                </div>\\n              </div>\\n              <div class=\\\"col-lg-3 col-md-3 col-sm-6 col-6\\\"></div>\\n              <div class=\\\"col-lg-3 col-md-3 col-sm-6 col-6\\\">\\n                 <div class=\\\"form-group marginB0\\\">\\n                    <label style=\\\"display: block;\\\">&nbsp;</label>\\n                    <div class=\\\"btn-cont pull-right\\\">\\n                        <a *ngIf=\\\"admin?.admin_acl['Settings']?.can_create==1\\\" class=\\\"btn btn-primary\\\" href=\\\"javascript://\\\" (click)=\\\"openStateModal(addStateModal, '', '', '', '', '1', -1)\\\">+ Add New</a>\\n                    </div>\\n                 </div>\\n              </div>\\n           </div>\\n          </div>\\n      </div>\\n\\n      <!-- list state -->\\n      <div class=\\\"tabel-section padding40 paddingT0\\\">\\n          <div class=\\\"table-responsive\\\">\\n            <table class=\\\"table table-striped\\\">\\n                <tr>\\n                  <th style=\\\"width:40%; text-align:left;\\\">State (English)</th>\\n                  <th style=\\\"width:40%; text-align:left;\\\">State (Spanish)</th>\\n                  <th style=\\\"width:20%\\\">Action</th>\\n                </tr>\\n                <tr *ngFor=\\\"let state of parameter.states; let s = index\\\">\\n                  <td class=\\\"text-left\\\">\\n                    {{state.name_en}}\\n                  </td>\\n                  <td class=\\\"text-left\\\">\\n                    {{state.name_es}}\\n                  </td>\\n                <td>\\n                      <a href=\\\"javascript://\\\" (click)=\\\"openStateModal(addStateModal, state.country_id, state.id, state.name_en, state.name_es, state.status, s)\\\" title=\\\"Edit State\\\" class=\\\"icon-block edit-icon\\\"><img src=\\\"assets/img/edit.png\\\" alt=\\\"img\\\"></a>\\n                      <a *ngIf=\\\"state.status == 1\\\" (click)=\\\"blockUnblockState(state.country_id, state.name_en, state.name_es, 0, state.id, s)\\\" title=\\\"Block State\\\" class=\\\"icon-block block-icon\\\"><img src=\\\"assets/img/unblock.png\\\" alt=\\\"img\\\"></a>\\n                      <a *ngIf=\\\"state.status == 0\\\" (click)=\\\"blockUnblockState(state.country_id, state.name_en, state.name_es, 1, state.id, s)\\\" title=\\\"Unblock State\\\" class=\\\"icon-block block-icon unblock-bg\\\"><img src=\\\"assets/img/block.png\\\" alt=\\\"img\\\"></a>\\n                  </td>\\n                </tr>\\n            </table>\\n\\n            <div class=\\\"error-border\\\" *ngIf=\\\"parameter.states?.length == 0\\\">\\n              <p class=\\\"show-error\\\">\\n                {{constant.errorMsg.NO_STATE_FOUND}}\\n              </p>\\n            </div>\\n          </div>\\n      </div>\\n      \\n\\n      <!-- add city -->\\n      <div class=\\\"form-outer marginT15\\\">\\n        <div class=\\\"inline-form-group\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-md-12\\\">\\n              <label><strong>City</strong></label>\\n              <hr>\\n            </div>\\n            <div class=\\\"col-lg-3 col-md-3 col-sm-6 col-6\\\">\\n               <div class=\\\"form-group marginB0\\\">\\n                  <label>Country</label>\\n                  <select class=\\\"form-control\\\" (change)=\\\"getStates($event.target.value, '')\\\">\\n                    <!-- <option value=\\\"\\\" disabled>Select Country</option> -->\\n                    <option *ngFor=\\\"let country of parameter.countries1\\\" value=\\\"{{country.id}}\\\">{{country.name_en}}</option>\\n                 </select>\\n               </div>\\n            </div>\\n            <div class=\\\"col-lg-3 col-md-3 col-sm-6 col-6\\\">\\n               <div class=\\\"form-group marginB0\\\">\\n                  <label>State</label>\\n                  <select class=\\\"form-control\\\" (change)=\\\"getCities($event.target.value, '')\\\">\\n                    <!-- <option value=\\\"\\\" disabled>Select State</option> -->\\n                    <option *ngFor=\\\"let state of parameter.states1\\\" value=\\\"{{state.id}}\\\">{{state.name_en}}</option>\\n                 </select>\\n               </div>\\n            </div>\\n            <div class=\\\"col-lg-3 col-md-3 col-sm-6 col-6 table-search\\\">\\n              <div class=\\\"form-group marginB0\\\">\\n                <label>Search</label>\\n                <div class=\\\"searh-2\\\">\\n                    <input type=\\\"text\\\" [(ngModel)]=\\\"searchCity\\\" (keyup.enter)=\\\"getCities(parameter.state_id, searchCity)\\\" name=\\\"keyword\\\" placeholder=\\\"Search here\\\">\\n                    <button (click)=\\\"getCities(parameter.state_id, searchCity)\\\"><i class=\\\"fa fa-search\\\"></i></button>\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-lg-3 col-md-3 col-sm-6 col-6\\\">\\n               <div class=\\\"form-group marginB0\\\">\\n                  <label style=\\\"display: block;\\\">&nbsp;</label>\\n                  <div class=\\\"btn-cont pull-right\\\">\\n                      <a *ngIf=\\\"admin?.admin_acl['Settings']?.can_create==1\\\" class=\\\"btn btn-primary\\\" href=\\\"javascript://\\\" (click)=\\\"openCityModal(addCityModal, '', '', '', '', '', 1, -1)\\\">+ Add New</a>\\n                  </div>\\n               </div>\\n            </div>\\n         </div>\\n        </div>\\n    </div>\\n\\n    <!-- list city -->\\n    <div class=\\\"tabel-section padding40 paddingT0\\\">\\n        <div class=\\\"table-responsive\\\">\\n          <table class=\\\"table table-striped\\\">\\n              <tr>\\n                <th style=\\\"width:40%; text-align:left;\\\">City (English)</th>\\n                <th style=\\\"width:40%; text-align:left;\\\">City (Spanish)</th>\\n                <th style=\\\"width:20%\\\">Action</th>\\n              </tr>\\n              <tr *ngFor=\\\"let city of parameter.cities; let ci=index\\\">\\n                <td class=\\\"text-left\\\">\\n                  {{city.name_en}}\\n                </td>\\n                <td class=\\\"text-left\\\">\\n                  {{city.name_es}}\\n                </td>\\n              <td>\\n                  <a href=\\\"javascript://\\\" (click)=\\\"openCityModal(addCityModal, city.country_id, city.state_id, city.id, city.name_en, city.name_es, city.status, ci)\\\" title=\\\"Edit City\\\" class=\\\"icon-block edit-icon\\\"><img src=\\\"assets/img/edit.png\\\" alt=\\\"img\\\"></a>\\n                  <a *ngIf=\\\"city.status == 1\\\" (click)=\\\"blockUnblockCity(city.state_id, city.name_en, city.name_es, 0, city.id, ci)\\\" title=\\\"Block City\\\" class=\\\"icon-block block-icon\\\"><img src=\\\"assets/img/unblock.png\\\" alt=\\\"img\\\"></a>\\n                  <a *ngIf=\\\"city.status == 0\\\" (click)=\\\"blockUnblockCity(city.state_id, city.name_en, city.name_es, 1, city.id, ci)\\\" title=\\\"Unblock City\\\" class=\\\"icon-block block-icon unblock-bg\\\"><img src=\\\"assets/img/block.png\\\" alt=\\\"img\\\"></a>\\n              </td>\\n              </tr>\\n          </table>\\n\\n          <div class=\\\"error-border\\\" *ngIf=\\\"parameter.states1?.length == 0; else cityNotFound\\\">\\n            <p class=\\\"show-error\\\">\\n              {{constant.errorMsg.NO_STATE_FOUND}}\\n            </p>\\n          </div>\\n\\n          <ng-template #cityNotFound>\\n            <div class=\\\"error-border\\\" *ngIf=\\\"parameter.cities?.length == 0\\\">\\n              <p class=\\\"show-error\\\">\\n                {{constant.errorMsg.NO_CITY_FOUND}}\\n              </p>\\n            </div>\\n          </ng-template>\\n        </div>\\n    </div>\\n    \\n    </div>\\n</div>\\n<!--content end-->\\n\\n\\n<!-- add country modal -->\\n<ng-template #addCountryModal>\\n  <div class=\\\"modal-content\\\">\\n    <div class=\\\"modal-header my-modal-header\\\">\\n      <h4 class=\\\"modal-title\\\">Add Country</h4>\\n      <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n    </div>\\n    <form class=\\\"form-horizontal my-modal-form\\\" role=\\\"form\\\" novalidate #addForm=\\\"ngForm\\\" (ngSubmit)=\\\"checkIfCountrySpanishNameEntered(addForm.value.name_en, addForm.value.name_es)\\\">\\n      <div class=\\\"modal-body my-modal-body\\\">\\n        <div class=\\\"form-group\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Country (English)\\\" id=\\\"name_en\\\" required [(ngModel)]=\\\"location.countryModel.name_en\\\" name=\\\"name_en\\\" #name_en=\\\"ngModel\\\">\\n          <!-- <div *ngIf=\\\"name_en.errors && (name_en.dirty || name_en.touched)\\\" class=\\\"show-error\\\">\\n              <div [hidden]=\\\"!name_en.errors.required\\\">\\n                {{constant.errorMsg.COUNTRY_NAME_REQUIRED}}\\n              </div>\\n          </div> -->\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Country (Spanish)\\\" [(ngModel)]=\\\"location.countryModel.name_es\\\" name=\\\"name_es\\\">\\n        </div>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"submit\\\" [disabled]=\\\"addForm.invalid\\\" class=\\\"btn btn-info\\\">Submit</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">Close</button>\\n      </div>\\n    </form>\\n  </div>\\n</ng-template>\\n\\n\\n<!-- add state modal -->\\n<ng-template #addStateModal>\\n  <div class=\\\"modal-content\\\">\\n    <div class=\\\"modal-header my-modal-header\\\">\\n      <h4 class=\\\"modal-title\\\">Add State</h4>\\n      <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n    </div>\\n    <form class=\\\"form-horizontal my-modal-form\\\" role=\\\"form\\\" novalidate #addForm=\\\"ngForm\\\" (ngSubmit)=\\\"checkIfStateSpanishNameEntered(addForm.value.country_id, addForm.value.name_en, addForm.value.name_es)\\\">\\n      <div class=\\\"modal-body my-modal-body\\\">\\n        <div class=\\\"form-group\\\" *ngIf=\\\"location.stateModel.state_id == ''\\\">\\n          <select title=\\\"Select Country\\\" id=\\\"country_id\\\" required [(ngModel)]=\\\"location.stateModel.country_id\\\" name=\\\"country_id\\\" #country_id=\\\"ngModel\\\" class=\\\"form-control\\\" required>\\n            <option value=\\\"\\\" disabled>Select Country</option>\\n            <option *ngFor=\\\"let c of parameter.countries1\\\" value=\\\"{{c.id}}\\\">{{c.name}}</option>\\n          </select>\\n          <!-- <div *ngIf=\\\"country_id.errors && (country_id.dirty || country_id.touched)\\\" class=\\\"show-error\\\">\\n            <div [hidden]=\\\"!country_id.errors.required\\\">\\n              {{constant.errorMsg.COUNTRY_NAME_REQUIRED}}\\n            </div>\\n          </div> -->\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"State (English)\\\" id=\\\"name_en\\\" required [(ngModel)]=\\\"location.stateModel.name_en\\\" name=\\\"name_en\\\" #name_en=\\\"ngModel\\\">\\n          <!-- <div *ngIf=\\\"name_en.errors && (name_en.dirty || name_en.touched)\\\" class=\\\"show-error\\\">\\n              <div [hidden]=\\\"!name_en.errors.required\\\">\\n                {{constant.errorMsg.STATE_NAME_REQUIRED}}\\n              </div>\\n          </div> -->\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"State (Spanish)\\\" [(ngModel)]=\\\"location.stateModel.name_es\\\" name=\\\"name_es\\\">\\n        </div>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"submit\\\" [disabled]=\\\"addForm.invalid\\\" class=\\\"btn btn-info\\\">Submit</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">Close</button>\\n      </div>\\n    </form>\\n  </div>\\n</ng-template>\\n\\n\\n<!-- add city modal -->\\n<ng-template #addCityModal>\\n  <div class=\\\"modal-content\\\">\\n    <div class=\\\"modal-header my-modal-header\\\">\\n      <h4 class=\\\"modal-title\\\">Add City</h4>\\n      <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n    </div>\\n    <form class=\\\"form-horizontal my-modal-form\\\" role=\\\"form\\\" novalidate #addForm=\\\"ngForm\\\" (ngSubmit)=\\\"checkIfCitySpanishNameEntered(addForm.value.state_id, addForm.value.name_en, addForm.value.name_es)\\\">\\n      <div class=\\\"modal-body my-modal-body\\\">\\n        <div class=\\\"form-group\\\" *ngIf=\\\"location.cityModel.city_id == ''\\\">\\n          <select title=\\\"Select Country\\\" id=\\\"country_id\\\" (change)=\\\"getStatesForCity($event.target.value)\\\" required [(ngModel)]=\\\"location.cityModel.country_id\\\" name=\\\"country_id\\\" #country_id=\\\"ngModel\\\" class=\\\"form-control\\\" required>\\n            <option value=\\\"\\\" disabled>Select Country</option>\\n            <option *ngFor=\\\"let c of parameter.countries1\\\" value=\\\"{{c.id}}\\\">{{c.name}}</option>\\n          </select>\\n          <!-- <div *ngIf=\\\"country_id.errors && (country_id.dirty || country_id.touched)\\\" class=\\\"show-error\\\">\\n            <div [hidden]=\\\"!country_id.errors.required\\\">\\n              {{constant.errorMsg.COUNTRY_NAME_REQUIRED}}\\n            </div>\\n          </div> -->\\n        </div>\\n        <div class=\\\"form-group\\\" *ngIf=\\\"location.cityModel.city_id == ''\\\">\\n          <select title=\\\"Select State\\\" id=\\\"state_id\\\" required [(ngModel)]=\\\"location.cityModel.state_id\\\" name=\\\"state_id\\\" #state_id=\\\"ngModel\\\" class=\\\"form-control\\\" required>\\n            <option value=\\\"\\\" disabled>Select State</option>\\n            <option *ngFor=\\\"let s of parameter.states2\\\" value=\\\"{{s.id}}\\\">{{s.name}}</option>\\n          </select>\\n          <!-- <div *ngIf=\\\"state_id.errors && (state_id.dirty || state_id.touched)\\\" class=\\\"show-error\\\">\\n            <div [hidden]=\\\"!state_id.errors.required\\\">\\n              {{constant.errorMsg.STATE_NAME_REQUIRED}}\\n            </div>\\n          </div> -->\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"City (English)\\\" id=\\\"name_en\\\" required [(ngModel)]=\\\"location.cityModel.name_en\\\" name=\\\"name_en\\\" #name_en=\\\"ngModel\\\">\\n          <!-- <div *ngIf=\\\"name_en.errors && (name_en.dirty || name_en.touched)\\\" class=\\\"show-error\\\">\\n              <div [hidden]=\\\"!name_en.errors.required\\\">\\n                {{constant.errorMsg.CITY_NAME_REQUIRED}}\\n              </div>\\n          </div> -->\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"City (Spanish)\\\" [(ngModel)]=\\\"location.cityModel.name_es\\\" name=\\\"name_es\\\">\\n        </div>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"submit\\\" [disabled]=\\\"addForm.invalid\\\" class=\\\"btn btn-info\\\">Submit</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">Close</button>\\n      </div>\\n    </form>\\n  </div>\\n</ng-template>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/cbl1002/Documents/realestate-admin/src/app/layout/settings/location/location.component.html\n// module id = ../../../../../src/app/layout/settings/location/location.component.html\n// module chunks = 2","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { AdminService } from '../../../services/admin.service';\nimport { IProperty } from '../../../common/property';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { Location } from './../../../models/location.model';\nimport { Constant } from './../../../common/constants';\ndeclare let swal: any;\n\n@Component({\n  selector: 'app-location',\n  templateUrl: './location.component.html',\n  styleUrls: ['./location.component.css'],\n  providers: [Location, Constant]\n})\n\nexport class LocationComponent implements OnInit {\n\n  public parameter: IProperty = {};\n  public modalRef: BsModalRef;\n\n  searchCountry: string;\n  searchState: string;\n  searchCity: string;\n\n  constructor(private location: Location, private constant: Constant,\n    private modalService: BsModalService, public admin: AdminService,\n  ) { }\n\n  ngOnInit() {\n    this.searchCountry = ''; this.searchState = ''; this.searchCity = '';\n    this.getCountries(this.searchCountry);\n    this.getAllCountries(this.searchCountry);\n    this.getAllCountriesForCities(this.searchCountry);\n  }\n\n  public openCountryModal(template: TemplateRef<any>, country_id, name_en, name_es, status, index) {\n    this.parameter.index = index;\n    this.location.countryModel.country_id = country_id;\n    this.location.countryModel.name_en = name_en;\n    this.location.countryModel.name_es = name_es;\n    this.location.countryModel.status = status;\n    this.modalRef = this.modalService.show(template);\n  }\n\n  public openStateModal(template: TemplateRef<any>, country_id, state_id, name_en, name_es, status, index) {\n    this.parameter.index = index;\n    this.location.stateModel.country_id = country_id;\n    this.location.stateModel.state_id = state_id;\n    this.location.stateModel.name_en = name_en;\n    this.location.stateModel.name_es = name_es;\n    this.location.stateModel.status = status;\n    this.modalRef = this.modalService.show(template);\n  }\n\n  public openCityModal(template: TemplateRef<any>, country_id, state_id, city_id, name_en, name_es, status, index) {\n    this.parameter.index = index;\n    this.location.cityModel.country_id = country_id;\n    this.location.cityModel.state_id = state_id;\n    this.location.cityModel.city_id = city_id;\n    this.location.cityModel.name_en = name_en;\n    this.location.cityModel.name_es = name_es;\n    this.location.cityModel.status = status;\n    this.modalRef = this.modalService.show(template);\n  }\n\n  public openModal(template: TemplateRef<any>) {\n    this.modalRef = this.modalService.show(template); // {3}\n  }\n\n\n  // used for dropdown for states\n  getAllCountries(keyword) {\n\n    // this.parameter.loading = true;\n    this.parameter.url = 'getCountries';\n    const input = new FormData();\n\n    if (keyword) { input.append('keyword', keyword); }\n\n    this.admin.postDataApi(this.parameter.url, input)\n      .subscribe(\n        success => {\n          // console.log('countries', success);\n          // this.parameter.loading = false;\n          this.parameter.countries1 = success.data;\n          if (this.parameter.countries1.length !== 0) {\n            this.parameter.country_id = this.parameter.countries1[0].id;\n            this.getStatesWRTCountry(this.parameter.countries1[0].id, '');\n          }\n        }\n        // error => {\n        //   this.parameter.loading = false;\n        //   if (error.statusCode === 401) {\n        //     this.router.navigate(['']);\n        //   }else {\n        //     swal('Error', error.message, 'error');\n        //   }\n        // }\n      );\n  }\n\n\n  // used for dropdown for cities\n  getAllCountriesForCities(keyword) {\n\n    // this.parameter.loading = true;\n    this.parameter.url = 'getCountries';\n    const input = new FormData();\n\n    if (keyword) { input.append('keyword', keyword); }\n\n    this.admin.postDataApi(this.parameter.url, input)\n      .subscribe(\n        success => {\n          // console.log('countries', success);\n          // this.parameter.loading = false;\n          this.parameter.countries2 = success.data;\n          if (this.parameter.countries2.length !== 0) {\n            this.parameter.country_id = this.parameter.countries2[0].id;\n            this.getStates(this.parameter.countries2[0].id, '');\n          }\n        }\n        // error => {\n        //   this.parameter.loading = false;\n        //   if (error.statusCode === 401) {\n        //     this.router.navigate(['']);\n        //   }else {\n        //     swal('Error', error.message, 'error');\n        //   }\n        // }\n      );\n  }\n\n\n  // used for country listing and country search\n  getCountries(keyword) {\n    // this.parameter.loading = true;\n    this.parameter.url = 'getCountries';\n    const input = new FormData();\n\n    if (keyword) { input.append('keyword', keyword); }\n\n    this.admin.postDataApi(this.parameter.url, input)\n      .subscribe(\n        success => {\n          // console.log('countries', success);\n          // this.parameter.loading = false;\n          this.parameter.countries = success.data;\n        }\n        // error => {\n        //   this.parameter.loading = false;\n        //   if (error.statusCode === 401) {\n        //     this.router.navigate(['']);\n        //   }else {\n        //     swal('Error', error.message, 'error');\n        //   }\n        // }\n      );\n  }\n\n  // used on click of country -- city\n  getStates(country_id, keyword) {\n    // this.parameter.loading = true;\n    this.parameter.url = 'country/getStates';\n    this.parameter.country_id = country_id;\n\n    const input = new FormData();\n    input.append('country_id', country_id);\n\n    if (keyword) { input.append('keyword', keyword); }\n\n    this.admin.postDataApi(this.parameter.url, input)\n      .subscribe(\n        success => {\n          // console.log('states', success);\n          // this.parameter.loading = false;\n          this.parameter.states1 = success.data;\n          if (this.parameter.states1.length !== 0) {\n            this.parameter.state_id = this.parameter.states1[0].id;\n            this.getCities(this.parameter.states1[0].id, '');\n          }else { this.parameter.cities = []; }\n        }\n        // error => {\n        //   this.parameter.loading = false;\n        //   if (error.statusCode === 401) {\n        //     this.router.navigate(['']);\n        //   }else {\n        //     swal('Error', error.message, 'error');\n        //   }\n        // }\n      );\n  }\n\n  // used for search and listing\n  getStatesWRTCountry(country_id, keyword) {\n    // this.parameter.loading = true;\n    this.parameter.url = 'country/getStates';\n    this.parameter.country_id = country_id;\n    this.searchState = keyword;\n    const input = new FormData();\n    input.append('country_id', country_id);\n\n    if (keyword) {input.append('keyword', keyword); }\n\n    this.admin.postDataApi(this.parameter.url, input)\n      .subscribe(\n        success => {\n          // console.log('states', success);\n          // this.parameter.loading = false;\n          this.parameter.states = success.data;\n        }\n        // error => {\n        //   this.parameter.loading = false;\n        //   if (error.statusCode === 401) {\n        //     this.router.navigate(['']);\n        //   }else {\n        //     swal('Error', error.message, 'error');\n        //   }\n        // }\n      );\n  }\n\n\n  // used for search and listing\n  getStatesForCity(country_id, keyword) {\n    // this.parameter.loading = true;\n    this.parameter.url = 'country/getStates';\n    this.parameter.country_id = country_id;\n\n    const input = new FormData();\n    input.append('country_id', country_id);\n\n    if (keyword) {input.append('keyword', keyword); }\n\n    this.admin.postDataApi(this.parameter.url, input)\n      .subscribe(\n        success => {\n          // console.log('states', success);\n          // this.parameter.loading = false;\n          this.parameter.states2 = success.data;\n        }\n        // error => {\n        //   this.parameter.loading = false;\n        //   if (error.statusCode === 401) {\n        //     this.router.navigate(['']);\n        //   }else {\n        //     swal('Error', error.message, 'error');\n        //   }\n        // }\n      );\n  }\n\n\n  getCities(state_id, keyword) {\n    // this.parameter.loading = true;\n    this.parameter.url = 'getCities';\n    this.parameter.state_id = state_id;\n    this.searchCity = keyword;\n    const input = new FormData();\n    input.append('state_id', state_id);\n\n    if (keyword) {\n      input.append('keyword', keyword);\n    }\n\n    this.admin.postDataApi(this.parameter.url, input)\n      .subscribe(\n        success => {\n          // console.log('cities', success);\n          // this.parameter.loading = false;\n          this.parameter.cities = success.data;\n        }\n        // error => {\n        //   this.parameter.loading = false;\n        //   if (error.statusCode === 401) {\n        //     this.router.navigate(['']);\n        //   }else {\n        //     swal('Error', error.message, 'error');\n        //   }\n        // }\n      );\n  }\n\n\n  checkIfCountrySpanishNameEntered(name_en, name_es= '') {\n    const self = this;\n    if (name_es === '') {\n      swal({\n        text: this.constant.errorMsg.SAVE_ENGLISH_COUNTRY_NAME,\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: this.constant.confirmButtonColor,\n        cancelButtonColor: this.constant.cancelButtonColor,\n        confirmButtonText: 'Yes'\n      }).then((result) => {\n        if (result.value) {\n          this.addCountry(name_en, name_en, self.location.countryModel.status, '');\n        }\n      });\n    }else {\n      self.addCountry(name_en, name_es, self.location.countryModel.status, '');\n    }\n  }\n\n\n  addCountry(name_en: string, name_es: string, status, country_id) {\n\n    if (country_id === '') {this.modalRef.hide(); }    // hide only when open\n\n    // this.parameter.loading = true;\n    this.parameter.url = 'addCountry';\n\n    const input = new FormData();\n    input.append('name_es', name_es);\n    input.append('name_en', name_en);\n    input.append('status', status);\n\n    if (this.location.countryModel.country_id) {\n      input.append('country_id', this.location.countryModel.country_id);\n    }else if (country_id) {\n      input.append('country_id', country_id);\n    }\n\n    this.admin.postDataApi(this.parameter.url, input)\n      .subscribe(\n        success => {\n          // console.log('success', success);\n          const text = this.location.countryModel.country_id || country_id ?\n            this.constant.successMsg.COUNTRY_UPDATED_SUCCESSFULLY :\n            this.constant.successMsg.COUNTRY_ADDED_SUCCESSFULLY;\n          swal('Success', text, 'success');\n\n          // this.parameter.loading = false;\n          this.getAllCountries('');   // loading dropdown\n\n          if (this.parameter.index === -1) {\n            this.parameter.countries.push(success.data);\n          }else {\n            this.parameter.countries[this.parameter.index] = success.data;\n          }\n\n        }\n        // error => {\n        //   this.parameter.loading = false;\n        //   if (error.statusCode === 401) {\n        //     this.router.navigate(['']);\n        //   }else {\n        //     swal('Error', error.message, 'error');\n        //   }\n        // }\n      );\n  }\n\n\n  checkIfStateSpanishNameEntered(country_id, name_en, name_es= '') {\n    const self = this;\n    if (name_es === '') {\n      swal({\n        text: this.constant.errorMsg.SAVE_ENGLISH_STATE_NAME,\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: this.constant.confirmButtonColor,\n        cancelButtonColor: this.constant.cancelButtonColor,\n        confirmButtonText: 'Yes'\n      }).then((result) => {\n        if (result.value) {\n          this.addState(country_id, name_en, name_en, self.location.stateModel.status, '');\n        }\n      });\n    }else {\n      self.addState(country_id, name_en, name_es, self.location.stateModel.status, '');\n    }\n  }\n\n\n  addState(country_id, name_en, name_es, status, state_id) {\n\n    if (state_id === '') {this.modalRef.hide(); }\n\n    // this.parameter.loading = true;\n    this.parameter.url = 'country/addState';\n\n    const input = new FormData();\n    input.append('name_es', name_es);\n    input.append('name_en', name_en);\n    input.append('status', status);\n\n\n    if (this.location.stateModel.country_id) {\n      input.append('country_id', this.location.stateModel.country_id);  // edit\n    }else {\n      input.append('country_id', country_id);  // add\n    }\n\n    if (this.location.stateModel.state_id) {\n      input.append('state_id', this.location.stateModel.state_id);\n    }else if (state_id) {\n      input.append('state_id', state_id);\n    }\n\n    this.admin.postDataApi(this.parameter.url, input)\n      .subscribe(\n        success => {\n          // console.log('success1', success);\n          const text = this.location.stateModel.state_id || state_id ?\n          this.constant.successMsg.STATE_UPDATED_SUCCESSFULLY :\n          this.constant.successMsg.STATE_ADDED_SUCCESSFULLY;\n          swal('Success', text, 'success');\n          // this.parameter.loading = false;\n          // this.getStates(this.location.stateModel.country_id ? this.location.stateModel.country_id : country_id, '');\n          this.getStates(this.parameter.country_id, '');\n\n          if (this.parameter.index === -1) {\n            this.parameter.states.push(success.data);\n          }else {\n            this.parameter.states[this.parameter.index] = success.data;\n          }\n\n          // formdata.reset();\n        }\n        // error => {\n        //   this.parameter.loading = false;\n        //   if (error.statusCode === 401) {\n        //     this.router.navigate(['']);\n        //   }else {\n        //     swal('Error', error.message, 'error');\n        //   }\n        // }\n      );\n  }\n\n\n  checkIfCitySpanishNameEntered(state_id, name_en, name_es= '') {\n    const self = this;\n    if (name_es === '') {\n      swal({\n        text: this.constant.errorMsg.SAVE_ENGLISH_CITY_NAME,\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: this.constant.confirmButtonColor,\n        cancelButtonColor: this.constant.cancelButtonColor,\n        confirmButtonText: 'Yes'\n      }).then((result) => {\n        if (result.value) {\n          this.addCity(state_id, name_en, name_en, self.location.cityModel.status, '');\n        }\n      });\n    }else {\n      self.addCity(state_id, name_en, name_es, self.location.cityModel.status, '');\n    }\n  }\n\n\n  addCity(state_id, name_en, name_es, status, city_id) {\n    if (city_id === '') {this.modalRef.hide(); }\n    // this.parameter.loading = true;\n    this.parameter.url = 'addCity';\n\n    const input = new FormData();\n    input.append('name_es', name_es);\n    input.append('name_en', name_en);\n    input.append('status', status);\n\n    if (this.location.cityModel.state_id) {\n      input.append('state_id', this.location.cityModel.state_id);   // edit\n    }else {\n      input.append('state_id', state_id);   // add\n    }\n\n    if (this.location.cityModel.city_id) {\n      input.append('city_id', this.location.cityModel.city_id);   // edit\n    }else if (city_id) {\n      input.append('city_id', city_id);   // edit\n    }\n\n    this.admin.postDataApi(this.parameter.url, input)\n      .subscribe(\n        success => {\n          // console.log('success2', success);\n          const text = this.location.cityModel.city_id || city_id ?\n          this.constant.successMsg.CITY_UPDATED_SUCCESSFULLY : this.constant.successMsg.CITY_ADDED_SUCCESSFULLY;\n          swal('Success', text, 'success');\n          // this.parameter.loading = false;\n          // this.getCities(this.location.cityModel.state_id, '');\n\n\n          if (this.parameter.index === -1) {\n            this.parameter.cities.push(success.data);\n          }else {\n            this.parameter.cities[this.parameter.index] = success.data;\n          }\n\n          // formdata.reset();\n        }\n        // error => {\n        //   this.parameter.loading = false;\n        //   if (error.statusCode === 401) {\n        //     this.router.navigate(['']);\n        //   }else {\n        //     swal('Error', error.message, 'error');\n        //   }\n        // }\n      );\n  }\n\n\n  blockUnblockCountry(country_id, name_en, name_es, type, index) {\n    this.parameter.index = index;\n    this.parameter.title = this.constant.title.ARE_YOU_SURE;\n    switch (type) {\n      case 0:\n        this.parameter.text = this.constant.title.BLOCK_COUNTRY;\n        this.parameter.successText = this.constant.successMsg.BLOCKED_SUCCESSFULLY;\n        break;\n      case 1:\n        this.parameter.text = this.constant.title.UNBLOCK_COUNTRY;\n        this.parameter.successText = this.constant.successMsg.UNBLOCKED_SUCCESSFULLY;\n        break;\n    }\n\n    swal({\n      // title: this.parameter.title,\n      // text: this.parameter.text,\n      html: this.parameter.title + '<br>' + this.parameter.text,\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: this.constant.confirmButtonColor,\n      cancelButtonColor: this.constant.cancelButtonColor,\n      confirmButtonText: 'Yes'\n    }).then((result) => {\n      if (result.value) {\n        this.addCountry(name_en, name_es, type, country_id);\n      }\n    });\n  }\n\n\n  blockUnblockState(country_id, name_en, name_es, type, state_id, index) {\n    this.parameter.index = index;\n    this.parameter.title = this.constant.title.ARE_YOU_SURE;\n    switch (type) {\n      case 0:\n        this.parameter.text = this.constant.title.BLOCK_STATE;\n        this.parameter.successText = this.constant.successMsg.BLOCKED_SUCCESSFULLY;\n        break;\n      case 1:\n        this.parameter.text = this.constant.title.UNBLOCK_STATE;\n        this.parameter.successText = this.constant.successMsg.UNBLOCKED_SUCCESSFULLY;\n        break;\n    }\n\n    // const self = this;\n    swal({\n      // title: this.parameter.title,\n      // text: this.parameter.text,\n      html: this.parameter.title + '<br>' + this.parameter.text,\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: this.constant.confirmButtonColor,\n      cancelButtonColor: this.constant.cancelButtonColor,\n      confirmButtonText: 'Yes'\n    }).then((result) => {\n      if (result.value) {\n        this.addState(country_id, name_en, name_es, type, state_id);\n      }\n    });\n  }\n\n\n  blockUnblockCity(state_id, name_en, name_es, type, city_id, index) {\n    this.parameter.index = index;\n    this.parameter.title = this.constant.title.ARE_YOU_SURE;\n    switch (type) {\n      case 0:\n        this.parameter.text = this.constant.title.BLOCK_CITY;\n        this.parameter.successText = this.constant.successMsg.BLOCKED_SUCCESSFULLY;\n        break;\n      case 1:\n        this.parameter.text = this.constant.title.UNBLOCK_CITY;\n        this.parameter.successText = this.constant.successMsg.UNBLOCKED_SUCCESSFULLY;\n        break;\n    }\n\n    swal({\n      // title: this.parameter.title,\n      // text: this.parameter.text,\n      html: this.parameter.title + '<br>' + this.parameter.text,\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: this.constant.confirmButtonColor,\n      cancelButtonColor: this.constant.cancelButtonColor,\n      confirmButtonText: 'Yes'\n    }).then((result) => {\n      if (result.value) {\n        this.addCity(state_id, name_en, name_es, type, city_id);\n      }\n    });\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/cbl1002/Documents/realestate-admin/src/app/layout/settings/location/location.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".amenity-img{\\n    text-align: center\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/cbl1002/Documents/realestate-admin/src/app/layout/settings/project/project.component.css\n// module id = ../../../../../src/app/layout/settings/project/project.component.css\n// module chunks = 2","module.exports = \"\\n<div class=\\\"container-fluid\\\">\\n  <div class=\\\"breadcrumb-group\\\">\\n      <h5>Settings</h5>\\n      <nav class=\\\"breadcrumb\\\">\\n          <a class=\\\"breadcrumb-item\\\">Home</a>\\n          <!-- <a class=\\\"breadcrumb-item\\\" routerLink=\\\"/dashboard\\\">Home</a> -->\\n        <a class=\\\"breadcrumb-item\\\">Settings</a>\\n        <span class=\\\"breadcrumb-item active\\\">Project</span>\\n      </nav>\\n  </div>\\n  <!-- <ngx-loading [show]=\\\"parameter.loading\\\"></ngx-loading> -->\\n  <div class=\\\"white-bg\\\">\\n      <div class=\\\"page-title\\\">\\n        <h3>Project</h3>\\n      </div>\\n\\n      <div class=\\\"form-outer\\\">\\n          <div class=\\\"inline-form-group\\\">\\n             <div class=\\\"row\\\">\\n                <div class=\\\"col-md-4\\\">\\n                    <label><strong>Possession Status</strong></label>\\n                </div>\\n                <div class=\\\"col-md-8\\\" *ngIf=\\\"admin?.admin_acl['Settings']?.can_create==1\\\">\\n                   <form role=\\\"form\\\" novalidate #addPossessionForm=\\\"ngForm\\\" (ngSubmit)=\\\"checkIfPossessionSpanishNameEntered('', addPossessionForm.value.name_en, addPossessionForm.value.name_es, 1, 'add')\\\">\\n                      <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-6 col-md-6\\\">\\n                          <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Possession status (English)\\\" id=\\\"name_en\\\" required [(ngModel)]=\\\"project.possession.name_en\\\" name=\\\"name_en\\\" #name_en=\\\"ngModel\\\">\\n                          <!-- <div *ngIf=\\\"name_en.errors && (name_en.dirty || name_en.touched)\\\" class=\\\"show-error\\\">\\n                            <div [hidden]=\\\"!name_en.errors.required\\\">\\n                              {{constant.errorMsg.PROPERTY_CONFIG_REQUIRED}}\\n                            </div>\\n                          </div>       -->\\n                        </div>\\n                        <div class=\\\"col-lg-6 col-md-6\\\">\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Possession status (Spanish)\\\" [(ngModel)]=\\\"project.possession.name_es\\\" name=\\\"name_es\\\">\\n                        </div>\\n                      </div>\\n                    <button [disabled]=\\\"addPossessionForm.invalid\\\" type=\\\"submit\\\" class=\\\"add-btn btn\\\">\\n                       <img src=\\\"./../../../../assets/img/add.png\\\" alt=\\\"img\\\">\\n                     </button>\\n                   </form>\\n                </div>\\n             </div>\\n          </div>\\n      </div>\\n\\n      <div class=\\\"tabel-section padding40 paddingT0\\\">\\n          <div class=\\\"table-responsive\\\">\\n            <table class=\\\"table table-striped\\\">\\n                <tr>\\n                  <th style=\\\"width:40%; text-align:left;\\\">Name (English)</th>\\n                  <th style=\\\"width:40%; text-align:left;\\\">Name (Spanish)</th>\\n                  <th style=\\\"width:20%\\\">Action</th>\\n                </tr>\\n                <tr *ngFor=\\\"let item of parameter.items\\\">\\n                  <td class=\\\"text-left\\\">\\n                    {{item.name_en}}\\n                  </td>\\n                  <td class=\\\"text-left\\\">\\n                    {{item.name_es}}\\n                  </td>\\n                  <td>\\n                    <a title=\\\"Edit Configuration\\\" (click)=\\\"openPossessionStatusModal(addPossessionStatusModal, item.id, item.name_en, item.name_es, item.status)\\\" class=\\\"icon-block edit-icon\\\"><img src=\\\"./../../../../assets/img/edit.png\\\" alt=\\\"img\\\"></a>\\n                    <a *ngIf=\\\"item.status == 1\\\" (click)=\\\"addPossessionStatusPopup(item.id, item.name_en, item.name_es, 0, 'block')\\\" title=\\\"Block Configuration\\\" class=\\\"icon-block block-icon\\\"><img src=\\\"./../../../../assets/img/unblock.png\\\" alt=\\\"img\\\"></a>\\n                    <a *ngIf=\\\"item.status == 0\\\" (click)=\\\"addPossessionStatusPopup(item.id, item.name_en, item.name_es, 1, 'unblock')\\\" title=\\\"Unblock Configuration\\\" class=\\\"icon-block block-icon unblock-bg\\\"><img src=\\\"./../../../../assets/img/block.png\\\" alt=\\\"img\\\"></a>\\n                  </td>\\n                </tr>\\n\\n                <div *ngIf=\\\"parameter.total == 0\\\">\\n                  <p class=\\\"show-error\\\">\\n                    {{constant.errorMsg.NO_POSSESSION_FOUND}}\\n                  </p>\\n                </div>\\n            </table>\\n          </div>\\n      </div>\\n\\n\\n      <div class=\\\"form-outer\\\">\\n        <div class=\\\"inline-form-group\\\">\\n           <div class=\\\"row\\\">\\n              <div class=\\\"col-md-4\\\">\\n                  <label><strong>Project Type</strong></label>\\n              </div>\\n              <div class=\\\"col-md-8\\\" *ngIf=\\\"admin?.admin_acl['Settings']?.can_create==1\\\">\\n                 <form role=\\\"form\\\" novalidate #addTypeForm=\\\"ngForm\\\" (ngSubmit)=\\\"checkIfTypeSpanishNameEntered('', addTypeForm.value.name_en, addTypeForm.value.name_es, 1, 'add')\\\">\\n\\n                  <div class=\\\"row\\\">\\n                      <div class=\\\"col-md-6 col-lg-6\\\">\\n                          <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Project type name (English)\\\" id=\\\"name_en\\\" required [(ngModel)]=\\\"project.type.name_en\\\" name=\\\"name_en\\\" #name_en=\\\"ngModel\\\">\\n                          <!-- <div *ngIf=\\\"name_en.errors && (name_en.dirty || name_en.touched)\\\" class=\\\"show-error\\\">\\n                            <div [hidden]=\\\"!name_en.errors.required\\\">\\n                              {{constant.errorMsg.PROPERTY_TYPE_REQUIRED}}\\n                            </div>\\n                        </div> -->\\n                      </div>\\n                    \\n                    <div class=\\\"col-lg-6 col-md-6\\\">\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Project type name (Spanish)\\\" [(ngModel)]=\\\"project.type.name_es\\\" name=\\\"name_es\\\">\\n                    </div>\\n  \\n                  </div>\\n                  <button [disabled]=\\\"addTypeForm.invalid\\\" type=\\\"submit\\\" class=\\\"add-btn btn\\\">\\n                     <img src=\\\"./../../../../assets/img/add.png\\\" alt=\\\"img\\\">\\n                   </button>\\n                 </form>\\n              </div>\\n           </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"tabel-section padding40 paddingT0\\\">\\n        <div class=\\\"table-responsive\\\">\\n          <table class=\\\"table table-striped\\\">\\n              <tr>\\n                <th style=\\\"width:40%; text-align:left;\\\">Name (English)</th>\\n                <th style=\\\"width:40%; text-align:left;\\\">Name (Spanish)</th>\\n                <th style=\\\"width:20%\\\">Action</th>\\n              </tr>\\n              <tr *ngFor=\\\"let item of parameter.projectTypes\\\">\\n                <td class=\\\"text-left\\\">\\n                  {{item.name_en}}\\n                </td>\\n                <td class=\\\"text-left\\\">\\n                  {{item.name_es}}\\n                </td>\\n                <td>\\n                  <a title=\\\"Edit Property Type\\\" (click)=\\\"openBuildingTypeModal(addBuildingTypeModal, item.id, item.name_en, item.name_es, item.status)\\\" class=\\\"icon-block edit-icon\\\"><img src=\\\"./../../../../assets/img/edit.png\\\" alt=\\\"img\\\"></a>\\n                  <a *ngIf=\\\"item.status == 1\\\" (click)=\\\"addBuildingTypePopup(item.id, item.name_en, item.name_es, 0, 'block')\\\" title=\\\"Block Property Type\\\" class=\\\"icon-block block-icon\\\"><img src=\\\"./../../../../assets/img/unblock.png\\\" alt=\\\"img\\\"></a>\\n                  <a *ngIf=\\\"item.status == 0\\\" (click)=\\\"addBuildingTypePopup(item.id, item.name_en, item.name_es, 1, 'unblock')\\\" title=\\\"Unblock Property Type\\\" class=\\\"icon-block block-icon unblock-bg\\\"><img src=\\\"./../../../../assets/img/block.png\\\" alt=\\\"img\\\"></a>\\n                </td>\\n              </tr>\\n\\n              <div *ngIf=\\\"parameter.projectTypesCount == 0\\\">\\n                <p class=\\\"show-error\\\">\\n                  {{constant.errorMsg.NO_PROJECT_TYPE_FOUND}}\\n                </p>\\n              </div>\\n          </table>\\n        </div>\\n    </div>\\n\\n\\n\\n      <div class=\\\"form-outer\\\">\\n        <div class=\\\"inline-form-group\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-4\\\">\\n                  <label>Amenities</label>\\n              </div>\\n              <div class=\\\"col-md-8\\\" *ngIf=\\\"admin?.admin_acl['Settings']?.can_create==1\\\">\\n                 <form role=\\\"form\\\" novalidate #addAmenityForm=\\\"ngForm\\\" (ngSubmit)=\\\"checkIfAmenitySpanishNameEntered('', '', addAmenityForm.value.name_en, addAmenityForm.value.name_es, 1, 'add')\\\">\\n                  <div class=\\\"browse-files\\\">\\n                    <input accept=\\\"image/*\\\" (change)=\\\"changeListner($event)\\\" type=\\\"file\\\" class=\\\"image form-control\\\" placeholder=\\\"Amenity\\\" id=\\\"icon\\\" required [(ngModel)]=\\\"amenityModel.icon\\\" name=\\\"icon\\\" #icon=\\\"ngModel\\\">\\n                    <span>Browse</span>\\n                  </div>\\n                  <!-- <div *ngIf=\\\"icon.errors && (icon.dirty || icon.touched)\\\" class=\\\"show-error\\\">\\n                    <div [hidden]=\\\"!icon.errors.required\\\">\\n                      {{constant.errorMsg.FILE_REQUIRED}}\\n                    </div>\\n                  </div> -->\\n                  \\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col-lg-6 col-md-6\\\">\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Project amenity name (English)\\\" id=\\\"name_en\\\" required [(ngModel)]=\\\"amenityModel.name_en\\\" name=\\\"name_en\\\" #name_en=\\\"ngModel\\\">\\n                        <!-- <div *ngIf=\\\"name_en.errors && (name_en.dirty || name_en.touched)\\\" class=\\\"show-error\\\">\\n                          <div [hidden]=\\\"!name_en.errors.required\\\">\\n                            {{constant.errorMsg.PROPERTY_TYPE_REQUIRED}}\\n                          </div>\\n                      </div>     -->\\n                    </div>\\n                    <div class=\\\"col-lg-6 col-md-6\\\">\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Project amenity name (Spanish)\\\" [(ngModel)]=\\\"amenityModel.name_es\\\" name=\\\"name_es\\\">\\n                    </div>\\n                  </div>\\n                  <button [disabled]=\\\"addAmenityForm.invalid\\\" type=\\\"submit\\\" class=\\\"add-btn btn\\\">\\n                     <img src=\\\"./../../../../assets/img/add.png\\\" alt=\\\"img\\\">\\n                   </button>\\n                 </form>\\n              </div>\\n              <!-- <div class=\\\"col-md-8\\\">\\n                  <div class=\\\"browse-files\\\">\\n                    <input type=\\\"file\\\" name=\\\"\\\">\\n                    <span>Browse</span>\\n                  </div>\\n                  <input type=\\\"text\\\" name=\\\"\\\">\\n                  <button class=\\\"add-btn\\\" (click)=\\\"openAmenitiesModal(addAmenitiesModal, '', '', '', '', 1)\\\">\\n                    <img src=\\\"./../../../../assets/img/add.png\\\" alt=\\\"img\\\">\\n                  </button>\\n              </div> -->\\n            </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"tabel-section padding40\\\">\\n        <div class=\\\"table-responsive\\\">\\n            <table class=\\\"table table-striped\\\">\\n              <tr>\\n                  <th style=\\\"width:20%\\\">Image</th>\\n                  <th style=\\\"width:30%; text-align:left;\\\">Name (English)</th>\\n                  <th style=\\\"width:30%; text-align:left;\\\">Name (Spanish)</th>\\n                  <th style=\\\"width:20%\\\">Action</th>\\n              </tr>\\n              <tr *ngFor=\\\"let item of parameter.amenities\\\">\\n                  <td>\\n                    <!-- <i class=\\\"fa fa-building\\\"></i> -->\\n                    <img alt=\\\"image\\\" height=\\\"30\\\" width=\\\"30\\\" src=\\\"{{item.icon}}\\\">\\n                  </td>\\n                  <td class=\\\"text-left\\\">\\n                    {{item.name_en}}\\n                  </td>\\n                  <td class=\\\"text-left\\\">\\n                    {{item.name_es}}\\n                  </td>\\n                  <td>\\n                    <a title=\\\"Edit Amenity\\\" (click)=\\\"openAmenityModal(addAmenityModal, item.id, item.icon, item.name_en, item.name_es, item.status)\\\" class=\\\"icon-block edit-icon\\\"><img src=\\\"./../../../../assets/img/edit.png\\\" alt=\\\"img\\\"></a>\\n                    <a *ngIf=\\\"item.status == 1\\\" (click)=\\\"addAmenityPopup(item.id, item.icon, item.name_en, item.name_es, 0, 'block')\\\" title=\\\"Block Amenity\\\" class=\\\"icon-block block-icon\\\"><img src=\\\"./../../../../assets/img/unblock.png\\\" alt=\\\"img\\\"></a>\\n                    <a *ngIf=\\\"item.status == 0\\\" (click)=\\\"addAmenityPopup(item.id, item.icon, item.name_en, item.name_es, 1, 'unblock')\\\" title=\\\"Unblock Amenity\\\" class=\\\"icon-block block-icon unblock-bg\\\"><img src=\\\"./../../../../assets/img/block.png\\\" alt=\\\"img\\\"></a>\\n                  </td>\\n              </tr>\\n\\n              <div *ngIf=\\\"parameter.amenitiesCount == 0\\\">\\n                  <p class=\\\"show-error\\\">\\n                    {{constant.errorMsg.NO_PROJECT_AMENITY_FOUND}}\\n                  </p>\\n                </div>\\n            </table>\\n        </div>\\n      </div>\\n      <!-- <div class=\\\"btn-cont text-right padding40 paddingT0\\\">\\n        <button class=\\\"btn btn-primary\\\">Save</button>\\n      </div> -->\\n  </div>\\n</div>\\n\\n\\n<!-- add possession status modal -->\\n<ng-template #addPossessionStatusModal>\\n  <div class=\\\"modal-content\\\">\\n    <div class=\\\"modal-header my-modal-header\\\">\\n      <h4 class=\\\"modal-title\\\">Edit Property Configuration</h4>\\n      <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n    </div>\\n    <form class=\\\"form-horizontal my-modal-form\\\" role=\\\"form\\\" novalidate #addForm=\\\"ngForm\\\" (ngSubmit)=\\\"checkIfPossessionSpanishNameEntered(project.possession.id, addForm.value.name_en, addForm.value.name_es, project.possession.status, 'edit')\\\">\\n      <div class=\\\"modal-body my-modal-body\\\">\\n        <div class=\\\"form-group\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Project possession status (English)\\\" id=\\\"name_en\\\" required [(ngModel)]=\\\"project.possession.name_en\\\" name=\\\"name_en\\\" #name_en=\\\"ngModel\\\">\\n          <!-- <div *ngIf=\\\"name_en.errors && (name_en.dirty || name_en.touched)\\\" class=\\\"show-error\\\">\\n              <div [hidden]=\\\"!name_en.errors.required\\\">\\n                {{constant.errorMsg.PROPERTY_TYPE_REQUIRED}}\\n              </div>\\n          </div> -->\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Project possession status (Spanish)\\\" [(ngModel)]=\\\"project.possession.name_es\\\" name=\\\"name_es\\\">\\n        </div>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"submit\\\" [disabled]=\\\"addForm.invalid\\\" class=\\\"btn btn-info\\\">Submit</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">Close</button>\\n      </div>\\n    </form>\\n  </div>\\n</ng-template>\\n\\n\\n<!-- add PropertyTypeModal modal -->\\n<ng-template #addBuildingTypeModal>\\n  <div class=\\\"modal-content\\\">\\n    <div class=\\\"modal-header my-modal-header\\\">\\n      <h4 class=\\\"modal-title\\\">Edit Property Type</h4>\\n      <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n    </div>\\n    <form class=\\\"form-horizontal my-modal-form\\\" role=\\\"form\\\" novalidate #addForm=\\\"ngForm\\\" (ngSubmit)=\\\"checkIfTypeSpanishNameEntered(project.type.id, addForm.value.name_en, addForm.value.name_es, project.type.status, 'edit')\\\">\\n      <div class=\\\"modal-body my-modal-body\\\">\\n        <div class=\\\"form-group\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Project type (English)\\\" id=\\\"name_en\\\" required [(ngModel)]=\\\"project.type.name_en\\\" name=\\\"name_en\\\" #name_en=\\\"ngModel\\\">\\n          <!-- <div *ngIf=\\\"name_en.errors && (name_en.dirty || name_en.touched)\\\" class=\\\"show-error\\\">\\n              <div [hidden]=\\\"!name_en.errors.required\\\">\\n                {{constant.errorMsg.PROPERTY_TYPE_REQUIRED}}\\n              </div>\\n          </div> -->\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Project type (Spanish)\\\" [(ngModel)]=\\\"project.type.name_es\\\" name=\\\"name_es\\\">\\n        </div>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"submit\\\" [disabled]=\\\"addForm.invalid\\\" class=\\\"btn btn-info\\\">Submit</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">Close</button>\\n      </div>\\n    </form>\\n  </div>\\n</ng-template>\\n\\n\\n<!-- addAmenitiesModal -->\\n<ng-template #addAmenityModal>\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header my-modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Edit Amenity</h4>\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <form class=\\\"form-horizontal my-modal-form\\\" role=\\\"form\\\" novalidate #addForm=\\\"ngForm\\\" (ngSubmit)=\\\"checkIfAmenitySpanishNameEntered(amenityModel.id, '', addForm.value.name_en, addForm.value.name_es, amenityModel.status, 'edit')\\\">\\n        <div class=\\\"modal-body my-modal-body\\\">\\n          <div class=\\\"form-group amenity-img\\\">\\n            <img [src]=\\\"amenityModel.icon\\\" class=\\\"image\\\" width=\\\"100\\\" height=\\\"100\\\">\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <input accept=\\\"image/*\\\" (change)=\\\"changeListner($event)\\\" type=\\\"file\\\" class=\\\"form-control\\\">\\n          </div>\\n          \\n          <div class=\\\"form-group\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Amenity (English)\\\" id=\\\"name_en\\\" required [(ngModel)]=\\\"amenityModel.name_en\\\" name=\\\"name_en\\\" #name_en=\\\"ngModel\\\">\\n            <!-- <div *ngIf=\\\"name_en.errors && (name_en.dirty || name_en.touched)\\\" class=\\\"show-error\\\">\\n                <div [hidden]=\\\"!name_en.errors.required\\\">\\n                  {{constant.errorMsg.PROPERTY_TYPE_REQUIRED}}\\n                </div>\\n            </div> -->\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Amenity (Spanish)\\\" [(ngModel)]=\\\"amenityModel.name_es\\\" name=\\\"name_es\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n          <button type=\\\"submit\\\" [disabled]=\\\"addForm.invalid\\\" class=\\\"btn btn-info\\\">Submit</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-default\\\" aria-label=\\\"Close\\\" (click)=\\\"closeModal()\\\">Close</button>\\n        </div>\\n      </form>\\n  </div>\\n</ng-template>\\n  \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/cbl1002/Documents/realestate-admin/src/app/layout/settings/project/project.component.html\n// module id = ../../../../../src/app/layout/settings/project/project.component.html\n// module chunks = 2","import { Component, OnInit, TemplateRef, ViewChild, ElementRef } from '@angular/core';\nimport { AdminService } from '../../../services/admin.service';\nimport { Router } from '@angular/router';\n// import { SweetAlertService } from 'ngx-sweetalert2';\nimport { IProperty } from '../../../common/property';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { Constant } from './../../../common/constants';\nimport { Project, Amenities } from './../../../models/project.model';\ndeclare let swal: any;\n\n@Component({\n  selector: 'app-project',\n  templateUrl: './project.component.html',\n  styleUrls: ['./project.component.css'],\n  providers: [Constant, Project, Amenities]\n})\n\nexport class ProjectComponent implements OnInit {\n\n  public parameter: IProperty = {};\n  public modalRef: BsModalRef;\n  icon: any;\n\n  constructor(private element: ElementRef, private constant: Constant, public project: Project,\n    private modalService: BsModalService, public admin: AdminService, private router: Router,\n    public amenityModel: Amenities\n  ) {\n    this.parameter.countryCount = 0;\n    this.parameter.stateCount = 0;\n    this.parameter.cityCount = 0;\n  }\n\n  ngOnInit() {\n    this.getPossessionStatuses();\n    this.getBuildingTypes();\n    this.getAmenities();\n  }\n\n  closeModal() {\n    this.amenityModel = new Amenities;\n    this.modalRef.hide();\n  }\n\n  public openPossessionStatusModal(template: TemplateRef<any>, id, name_en, name_es, status) {\n    this.project.possession.id = id;\n    this.project.possession.name_en = name_en;\n    this.project.possession.name_es = name_es == null ? name_en : name_es;\n    this.project.possession.status = status;\n    this.modalRef = this.modalService.show(template);\n  }\n\n  public openBuildingTypeModal(template: TemplateRef<any>, id, name_en, name_es, status) {\n    this.project.type.id = id;\n    this.project.type.name_en = name_en;\n    this.project.type.name_es = name_es;\n    this.project.type.status = status;\n    this.modalRef = this.modalService.show(template);\n  }\n\n  public openAmenityModal(template: TemplateRef<any>, id, icon, name_en, name_es, status) {\n    // this.project.amenities.id = id;\n    // this.project.amenities.icon = icon;\n    // this.project.amenities.name_en = name_en;\n    // this.project.amenities.name_es = name_es;\n    // this.project.amenities.status = status;\n    this.amenityModel.id = id;\n    this.amenityModel.icon = icon;\n    this.amenityModel.name_en = name_en;\n    this.amenityModel.name_es = name_es;\n    this.amenityModel.status = status;\n    this.modalRef = this.modalService.show(template);\n  }\n\n\n  addPossessionStatus(id, name_en, name_es, status, type) {\n\n    if (type !== 'add') {this.modalRef.hide(); }\n\n    // this.parameter.loading = true;\n    this.parameter.url = 'addPossessionStatus';\n\n    const input = new FormData();\n    input.append('name_en', name_en);\n    input.append('name_es', name_es);\n    input.append('status', status);\n\n    if (id) {input.append('id', id); }\n\n    this.admin.postDataApi(this.parameter.url, input)\n      .subscribe(\n        success => {\n          // console.log('addPossessionStatus', success);\n          // this.parameter.loading = false;\n          const text = id ?\n          this.constant.successMsg.PROJECT_POSSESSION_UPDATED_SUCCESSFULLY :\n          this.constant.successMsg.PROJECT_POSSESSION_ADDED_SUCCESSFULLY;\n          swal('Success', text, 'success');\n          this.project.possession.name_en = '';\n          this.project.possession.name_es = '';\n          this.getPossessionStatuses();\n        }\n        // error => {\n        //   this.parameter.loading = false;\n        //   swal('Error', error.message, 'error');\n        //   this.router.navigate(['']);\n        // }\n      );\n  }\n\n  addBuildingType(id, name_en, name_es, status, type) {\n    if (type !== 'add') {this.modalRef.hide(); }\n\n    // this.parameter.loading = true;\n    this.parameter.url = 'addBuildingType';\n\n    const input = new FormData();\n    input.append('name_en', name_en);\n    input.append('name_es', name_es);\n    input.append('status', status);\n\n    if (id) {input.append('id', id); }\n\n    this.admin.postDataApi(this.parameter.url, input)\n      .subscribe(\n        success => {\n          // console.log('addBuildingType', success);\n          // this.parameter.loading = false;\n          const text = id ?\n            this.constant.successMsg.PROJECT_TYPE_UPDATED_SUCCESSFULLY :\n            this.constant.successMsg.PROJECT_TYPE_ADDED_SUCCESSFULLY;\n            this.project.type.name_en = '';\n            this.project.type.name_es = '';\n          swal('Success', text, 'success');\n          this.getBuildingTypes();\n        }\n        // error => {\n        //   this.parameter.loading = false;\n        //   swal('Error', error.message, 'error');\n        //   this.router.navigate(['']);\n        // }\n      );\n  }\n\n\n  addAmenity(id, icon, name_en, name_es, status, type) {\n\n    if (type !== 'add') {this.modalRef.hide(); }\n\n    // const iconNew = this.icon ? this.icon : this.project.amenities.icon;\n    const iconNew = this.icon ? this.icon : this.amenityModel.icon;\n\n    // this.parameter.loading = true;\n    this.parameter.url = 'addAmenity';\n\n    const input = new FormData();\n\n    input.append('name_en', name_en);\n    input.append('name_es', name_es);\n    input.append('status', status);\n\n    if (this.icon) {input.append('icon', iconNew); }\n\n    if (id) {input.append('id', id); }\n\n    this.admin.postDataApi(this.parameter.url, input)\n      .subscribe(\n        success => {\n          // console.log('addAmenity', success);\n          // this.parameter.loading = false;\n          const text = id ? this.constant.successMsg.AMENITY_UPDATED_SUCCESSFULLY : this.constant.successMsg.AMENITY_ADDED_SUCCESSFULLY;\n          swal('Success', text, 'success');\n          // this.project.amenities.name_en = '';\n          // this.project.amenities.name_es = '';\n          // this.project.amenities.icon = '';\n          this.amenityModel = new Amenities;\n          this.getAmenities();\n        }\n        // error => {\n        //   this.parameter.loading = false;\n        //   swal('Error', error.message, 'error');\n        //   this.router.navigate(['']);\n        // }\n      );\n  }\n\n\n  getPossessionStatuses() {\n    // this.parameter.loading = true;\n    this.parameter.url = 'getPossessionStatuses';\n    const input = new FormData();\n    this.admin.postDataApi(this.parameter.url, input)\n      .subscribe(\n        success => {\n          // console.log('getPossessionStatuses', success);\n          // this.parameter.loading = false;\n          this.parameter.items = success.data;\n          this.parameter.total = success.data.length;\n        }\n        // error => {\n        //   console.log(error);\n        //   this.parameter.loading = false;\n        //   if (error.statusCode === 401) {\n        //     this.router.navigate(['']);\n        //   }else {\n        //     swal('Error', error.message, 'error');\n        //   }\n        // }\n      );\n  }\n\n\n  getBuildingTypes() {\n    // this.parameter.loading = true;\n    this.parameter.url = 'getBuildingTypes';\n    const input = new FormData();\n    this.admin.postDataApi(this.parameter.url, input)\n      .subscribe(\n        success => {\n          // console.log('getBuildingTypes', success);\n          // this.parameter.loading = false;\n          this.parameter.projectTypes = success.data;\n          this.parameter.projectTypesCount = success.data.length;\n        }\n        // error => {\n        //   console.log(error);\n        //   this.parameter.loading = false;\n        //   if (error.statusCode === 401) {\n        //     this.router.navigate(['']);\n        //   }else {\n        //     swal('Error', error.message, 'error');\n        //   }\n        // }\n      );\n  }\n\n  getAmenities() {\n    // this.parameter.loading = true;\n    this.parameter.url = 'getAmenities';\n    const input = new FormData();\n    this.admin.postDataApi(this.parameter.url, input)\n      .subscribe(\n        success => {\n          // console.log('getAmenities', success);\n          // this.parameter.loading = false;\n          this.parameter.amenities = success.data;\n          this.parameter.amenitiesCount = success.data.length;\n        }\n        // error => {\n        //   console.log(error);\n        //   this.parameter.loading = false;\n        //   if (error.statusCode === 401) {\n        //     this.router.navigate(['']);\n        //   }else {\n        //     swal('Error', error.message, 'error');\n        //   }\n        // }\n      );\n  }\n\n  addPossessionStatusPopup(id, name_en, name_es, status, type) {\n    const text = status === 1 ? this.constant.title.UNBLOCK_PROJECT_POSSESSION : this.constant.title.BLOCK_PROJECT_POSSESSION;\n    swal({\n      // title: this.constant.title.ARE_YOU_SURE,\n      // text: status === 1 ? this.constant.title.UNBLOCK_PROJECT_POSSESSION : this.constant.title.BLOCK_PROJECT_POSSESSION,\n      html: this.constant.title.ARE_YOU_SURE + '<br>' + text,\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: this.constant.confirmButtonColor,\n      cancelButtonColor: this.constant.cancelButtonColor,\n      confirmButtonText: 'Yes'\n    }).then((result) => {\n      if (result.value) {\n        this.addPossessionStatus(id, name_en, name_es, status, type);\n      }\n    });\n  }\n\n  addBuildingTypePopup(id, name_en, name_es, status, type) {\n    const text = status === 1 ? this.constant.title.UNBLOCK_PROJECT_TYPE : this.constant.title.BLOCK_PROJECT_TYPE;\n    swal({\n      // title: this.constant.title.ARE_YOU_SURE,\n      // text: status === 1 ? this.constant.title.UNBLOCK_PROJECT_TYPE : this.constant.title.BLOCK_PROJECT_TYPE,\n      html: this.constant.title.ARE_YOU_SURE + '<br>' + text,\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: this.constant.confirmButtonColor,\n      cancelButtonColor: this.constant.cancelButtonColor,\n      confirmButtonText: 'Yes'\n    }).then((result) => {\n      if (result.value) {\n        this.addBuildingType(id, name_en, name_es, status, type);\n      }\n    });\n  }\n\n  addAmenityPopup(id, icon, name_en, name_es, status, type) {\n    const text = status === 1 ? this.constant.title.UNBLOCK_AMENITY : this.constant.title.BLOCK_AMENITY;\n    swal({\n      // title: this.constant.title.ARE_YOU_SURE,\n      // text: status === 1 ? this.constant.title.UNBLOCK_AMENITY : this.constant.title.BLOCK_AMENITY,\n      html: this.constant.title.ARE_YOU_SURE + '<br>' + text,\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: this.constant.confirmButtonColor,\n      cancelButtonColor: this.constant.cancelButtonColor,\n      confirmButtonText: 'Yes'\n    }).then((result) => {\n      if (result.value) {\n        this.addAmenity(id, icon, name_en, name_es, status, type);\n      }\n    });\n  }\n\n  checkIfPossessionSpanishNameEntered(id, name_en, name_es, status, type) {\n    const self = this;\n    if (name_es === '') {\n      swal({\n        text: this.constant.errorMsg.SAVE_ENGLISH_PROJECT_POSSESION,\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: this.constant.confirmButtonColor,\n        cancelButtonColor: this.constant.cancelButtonColor,\n        confirmButtonText: 'Yes'\n      }).then((result) => {\n        if (result.value) {\n          this.addPossessionStatus(id, name_en, name_en, status, type);\n        }\n      });\n    }else {\n      self.addPossessionStatus(id, name_en, name_es, status, type);\n    }\n  }\n\n\n  checkIfTypeSpanishNameEntered(id, name_en, name_es, status, type) {\n    const self = this;\n    if (name_es === '') {\n      swal({\n        text: this.constant.errorMsg.SAVE_ENGLISH_PROJECT_TYPE,\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: this.constant.confirmButtonColor,\n        cancelButtonColor: this.constant.cancelButtonColor,\n        confirmButtonText: 'Yes'\n      }).then((result) => {\n        if (result.value) {\n          this.addBuildingType(id, name_en, name_en, status, type);\n        }\n      });\n    }else {\n      self.addBuildingType(id, name_en, name_es, status, type);\n    }\n  }\n\n\n  checkIfAmenitySpanishNameEntered(id, icon, name_en, name_es, status, type) {\n    const self = this;\n    if (name_es === '') {\n      swal({\n        text: this.constant.errorMsg.SAVE_ENGLISH_AMENITY,\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: this.constant.confirmButtonColor,\n        cancelButtonColor: this.constant.cancelButtonColor,\n        confirmButtonText: 'Yes'\n      }).then((result) => {\n        if (result.value) {\n          this.addAmenity(id, icon, name_en, name_en, status, type);\n        }\n      });\n    }else {\n      self.addAmenity(id, icon, name_en, name_es, status, type);\n    }\n  }\n\n\n\n  changeListner(event) {\n    const reader = new FileReader();\n    const image = this.element.nativeElement.querySelector('.image');\n    const fileToUpload = event.target.files[0];\n    this.icon = fileToUpload;\n\n    reader.onload = function(e) {\n      const src = e.target['result'];\n        image.src = src;\n    };\n\n    reader.readAsDataURL(event.target.files[0]);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/cbl1002/Documents/realestate-admin/src/app/layout/settings/project/project.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".amenity-img{\\n    text-align: center\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/cbl1002/Documents/realestate-admin/src/app/layout/settings/property/property.component.css\n// module id = ../../../../../src/app/layout/settings/property/property.component.css\n// module chunks = 2","module.exports = \"\\n<div class=\\\"container-fluid\\\">\\n  <div class=\\\"breadcrumb-group\\\">\\n      <h5>Settings</h5>\\n      <nav class=\\\"breadcrumb\\\">\\n          <a class=\\\"breadcrumb-item\\\">Home</a>\\n          <!-- <a class=\\\"breadcrumb-item\\\" routerLink=\\\"/dashboard\\\">Home</a> -->\\n        <a class=\\\"breadcrumb-item\\\">Settings</a>\\n        <span class=\\\"breadcrumb-item active\\\">Property</span>\\n      </nav>\\n  </div>\\n  <!-- <ngx-loading [show]=\\\"parameter.loading\\\"></ngx-loading> -->\\n  <div class=\\\"white-bg\\\">\\n      <div class=\\\"page-title\\\">\\n        <h3>Property</h3>\\n      </div>\\n\\n\\n      <div class=\\\"form-outer\\\">\\n          <div class=\\\"inline-form-group\\\">\\n             <div class=\\\"row\\\">\\n                <div class=\\\"col-md-4\\\">\\n                    <label><strong>Property Configuration</strong></label>\\n                </div>\\n                <div class=\\\"col-md-8\\\" *ngIf=\\\"admin?.admin_acl['Settings']?.can_create==1\\\" >\\n                   <form role=\\\"form\\\" novalidate #addConfigForm=\\\"ngForm\\\" (ngSubmit)=\\\"checkIfConfigSpanishNameEntered('', addConfigForm.value.name_en, addConfigForm.value.name_es, 1, 'add')\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-6 col-md-6\\\">\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Configuration name (English)\\\" id=\\\"name_en\\\" required [(ngModel)]=\\\"property.configuration.name_en\\\" name=\\\"name_en\\\" #name_en=\\\"ngModel\\\">\\n                            <!-- <div *ngIf=\\\"name_en.errors && (name_en.dirty || name_en.touched)\\\" class=\\\"show-error\\\">\\n                              <div [hidden]=\\\"!name_en.errors.required\\\">\\n                                {{constant.errorMsg.PROPERTY_CONFIG_REQUIRED}}\\n                              </div>\\n                          </div>       -->\\n                        </div>\\n                        <div class=\\\"col-lg-6 col-md-6\\\">\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Configuration name (Spanish)\\\" [(ngModel)]=\\\"property.configuration.name_es\\\" name=\\\"name_es\\\">\\n                        </div>\\n                      </div>\\n                    <button [disabled]=\\\"addConfigForm.invalid\\\" type=\\\"submit\\\" class=\\\"add-btn btn\\\">\\n                       <img src=\\\"./../../../../assets/img/add.png\\\" alt=\\\"img\\\">\\n                     </button>\\n                   </form>\\n                </div>\\n             </div>\\n          </div>\\n      </div>\\n\\n      <div class=\\\"tabel-section padding40 paddingT0\\\">\\n          <div class=\\\"table-responsive\\\">\\n            <table class=\\\"table table-striped\\\">\\n                <tr>\\n                  <th style=\\\"width:40%; text-align:left;\\\">Name (English)</th>\\n                  <th style=\\\"width:40%; text-align:left;\\\">Name (Spanish)</th>\\n                  <th style=\\\"width:20%\\\">Action</th>\\n                </tr>\\n                <tr *ngFor=\\\"let item of parameter.items\\\">\\n                  <td class=\\\"text-left\\\">\\n                    {{item.name_en}}\\n                  </td>\\n                  <td class=\\\"text-left\\\">\\n                    {{item.name_es}}\\n                  </td>\\n                  <td>\\n                    <a title=\\\"Edit Configuration\\\" (click)=\\\"openPropertyConfigModal(addPropertyConfigModal, item.id, item.name_en, item.name_es, item.status)\\\" class=\\\"icon-block edit-icon\\\"><img src=\\\"./../../../../assets/img/edit.png\\\" alt=\\\"img\\\"></a>\\n                    <a *ngIf=\\\"item.status == 1\\\" (click)=\\\"addPropertyConfigurationPopup(item.id, item.name_en, item.name_es, 0, 'block')\\\" title=\\\"Block Configuration\\\" class=\\\"icon-block block-icon\\\"><img src=\\\"./../../../../assets/img/unblock.png\\\" alt=\\\"img\\\"></a>\\n                    <a *ngIf=\\\"item.status == 0\\\" (click)=\\\"addPropertyConfigurationPopup(item.id, item.name_en, item.name_es, 1, 'unblock')\\\" title=\\\"Unblock Configuration\\\" class=\\\"icon-block block-icon unblock-bg\\\"><img src=\\\"./../../../../assets/img/block.png\\\" alt=\\\"img\\\"></a>\\n                  </td>\\n                </tr>\\n\\n                <div *ngIf=\\\"parameter.total == 0\\\">\\n                  <p class=\\\"show-error\\\">\\n                    {{constant.errorMsg.NO_CONFIGURATION_FOUND}}\\n                  </p>\\n                </div>\\n            </table>\\n          </div>\\n      </div>\\n\\n\\n      <div class=\\\"form-outer\\\">\\n        <div class=\\\"inline-form-group\\\">\\n           <div class=\\\"row\\\">\\n              <div class=\\\"col-md-4\\\">\\n                  <label><strong>Property Type</strong></label>\\n              </div>\\n              <div class=\\\"col-md-8\\\" *ngIf=\\\"admin?.admin_acl['Settings']?.can_create==1\\\">\\n                 <form role=\\\"form\\\" novalidate #addTypeForm=\\\"ngForm\\\" (ngSubmit)=\\\"checkIfTypeSpanishNameEntered('', addTypeForm.value.name_en, addTypeForm.value.name_es, 1, 'add')\\\">\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col-lg-6 col-md-6\\\">\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Property type name (English)\\\" id=\\\"name_en\\\" required [(ngModel)]=\\\"property.type.name_en\\\" name=\\\"name_en\\\" #name_en=\\\"ngModel\\\">\\n                        <!-- <div *ngIf=\\\"name_en.errors && (name_en.dirty || name_en.touched)\\\" class=\\\"show-error\\\">\\n                          <div [hidden]=\\\"!name_en.errors.required\\\">\\n                            {{constant.errorMsg.PROPERTY_TYPE_REQUIRED}}\\n                          </div>\\n                      </div>     -->\\n                    </div>\\n                    <div class=\\\"col-lg-6 col-md-6\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Property type name (Spanish)\\\" [(ngModel)]=\\\"property.type.name_es\\\" name=\\\"name_es\\\">\\n                    </div>\\n                  </div>\\n                  <button [disabled]=\\\"addTypeForm.invalid\\\" type=\\\"submit\\\" class=\\\"add-btn btn\\\">\\n                     <img src=\\\"./../../../../assets/img/add.png\\\" alt=\\\"img\\\">\\n                   </button>\\n                 </form>\\n              </div>\\n           </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"tabel-section padding40 paddingT0\\\">\\n        <div class=\\\"table-responsive\\\">\\n          <table class=\\\"table table-striped\\\">\\n              <tr>\\n                <th style=\\\"width:40%; text-align:left;\\\">Name (English)</th>\\n                <th style=\\\"width:40%; text-align:left;\\\">Name (Spanish)</th>\\n                <th style=\\\"width:20%\\\">Action</th>\\n              </tr>\\n              <tr *ngFor=\\\"let item of parameter.propertyTypes\\\">\\n                <td class=\\\"text-left\\\">\\n                  {{item.name_en}}\\n                </td>\\n                <td class=\\\"text-left\\\">\\n                  {{item.name_es}}\\n                </td>\\n                <td>\\n                  <a title=\\\"Edit Property Type\\\" (click)=\\\"openPropertyTypeModal(addPropertyTypeModal, item.id, item.name_en, item.name_es, item.status)\\\" class=\\\"icon-block edit-icon\\\"><img src=\\\"./../../../../assets/img/edit.png\\\" alt=\\\"img\\\"></a>\\n                  <a *ngIf=\\\"item.status == 1\\\" (click)=\\\"addPropertyTypePopup(item.id, item.name_en, item.name_es, 0, 'block')\\\" title=\\\"Block Property Type\\\" class=\\\"icon-block block-icon\\\"><img src=\\\"./../../../../assets/img/unblock.png\\\" alt=\\\"img\\\"></a>\\n                  <a *ngIf=\\\"item.status == 0\\\" (click)=\\\"addPropertyTypePopup(item.id, item.name_en, item.name_es, 1, 'unblock')\\\" title=\\\"Unblock Property Type\\\" class=\\\"icon-block block-icon unblock-bg\\\"><img src=\\\"./../../../../assets/img/block.png\\\" alt=\\\"img\\\"></a>\\n                </td>\\n              </tr>\\n\\n              <div *ngIf=\\\"parameter.total == 0\\\">\\n                <p class=\\\"show-error\\\">\\n                  {{constant.errorMsg.NO_PROPERTY_TYPE_FOUND}}\\n                </p>\\n              </div>\\n          </table>\\n        </div>\\n    </div>\\n\\n\\n      <div class=\\\"form-outer\\\">\\n        <div class=\\\"inline-form-group\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-4\\\">\\n                  <label>Amenities</label>\\n              </div>\\n              <div class=\\\"col-md-8\\\" *ngIf=\\\"admin?.admin_acl['Settings']?.can_create==1\\\">\\n                 <form role=\\\"form\\\" novalidate #addAmenityForm=\\\"ngForm\\\" (ngSubmit)=\\\"checkIfAmenitySpanishNameEntered('', '', addAmenityForm.value.name_en, addAmenityForm.value.name_es, 1, 'add')\\\">\\n                  <div class=\\\"browse-files\\\">\\n                    <input accept=\\\"image/*\\\" (change)=\\\"changeListner($event)\\\" type=\\\"file\\\" class=\\\"image form-control\\\" placeholder=\\\"Amenity\\\" id=\\\"icon\\\" required [(ngModel)]=\\\"property.amenities.icon\\\" name=\\\"icon\\\" #icon=\\\"ngModel\\\">\\n                    <span>Browse</span>\\n                    <!-- <div *ngIf=\\\"icon.errors && (icon.dirty || icon.touched)\\\" class=\\\"show-error\\\">\\n                      <div [hidden]=\\\"!icon.errors.required\\\">\\n                        {{constant.errorMsg.FILE_REQUIRED}}\\n                      </div>\\n                  </div> -->\\n                  </div>\\n                  <!-- <input type=\\\"file\\\" class=\\\"form-control\\\" placeholder=\\\"Amenity\\\" id=\\\"icon\\\" required [(ngModel)]=\\\"property.amenities.icon\\\" name=\\\"icon\\\" #icon=\\\"ngModel\\\">\\n                    <div *ngIf=\\\"icon.errors && (icon.dirty || icon.touched)\\\" class=\\\"show-error\\\">\\n                      <div [hidden]=\\\"!icon.errors.required\\\">\\n                        {{constant.errorMsg.PROPERTY_TYPE_REQUIRED}}\\n                      </div>\\n                  </div> -->\\n                  \\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col-lg-6 col-md-6\\\">\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Amenity name (English)\\\" id=\\\"name_en\\\" required [(ngModel)]=\\\"property.amenities.name_en\\\" name=\\\"name_en\\\" #name_en=\\\"ngModel\\\">\\n                        <!-- <div *ngIf=\\\"name_en.errors && (name_en.dirty || name_en.touched)\\\" class=\\\"show-error\\\">\\n                          <div [hidden]=\\\"!name_en.errors.required\\\">\\n                            {{constant.errorMsg.PROPERTY_TYPE_REQUIRED}}\\n                          </div>\\n                      </div>     -->\\n                    </div>\\n                    <div class=\\\"col-lg-6 col-md-6\\\">\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Amenity name (Spanish)\\\" [(ngModel)]=\\\"property.amenities.name_es\\\" name=\\\"name_es\\\">\\n                    </div>\\n                  </div>\\n                  <button [disabled]=\\\"addAmenityForm.invalid\\\" type=\\\"submit\\\" class=\\\"add-btn btn\\\">\\n                     <img src=\\\"./../../../../assets/img/add.png\\\" alt=\\\"img\\\">\\n                   </button>\\n                 </form>\\n              </div>\\n              <!-- <div class=\\\"col-md-8\\\">\\n                  <div class=\\\"browse-files\\\">\\n                    <input type=\\\"file\\\" name=\\\"\\\">\\n                    <span>Browse</span>\\n                  </div>\\n                  <input type=\\\"text\\\" name=\\\"\\\">\\n                  <button class=\\\"add-btn\\\" (click)=\\\"openAmenitiesModal(addAmenitiesModal, '', '', '', '', 1)\\\">\\n                    <img src=\\\"./../../../../assets/img/add.png\\\" alt=\\\"img\\\">\\n                  </button>\\n              </div> -->\\n            </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"tabel-section padding40\\\">\\n        <div class=\\\"table-responsive\\\">\\n            <table class=\\\"table table-striped\\\">\\n              <tr>\\n                  <th style=\\\"width:20%\\\">Image</th>\\n                  <th style=\\\"width:30%; text-align:left;\\\">Name (English)</th>\\n                  <th style=\\\"width:30%; text-align:left;\\\">Name (Spanish)</th>\\n                  <th style=\\\"width:20%\\\">Action</th>\\n              </tr>\\n              <tr *ngFor=\\\"let item of parameter.amenities\\\">\\n                  <td>\\n                    <!-- <i class=\\\"fa fa-building\\\"></i> -->\\n                    <img alt=\\\"image\\\" height=\\\"30\\\" width=\\\"30\\\" src=\\\"{{item.icon}}\\\">\\n                  </td>\\n                  <td class=\\\"text-left\\\">\\n                    {{item.name_en}}\\n                  </td>\\n                  <td class=\\\"text-left\\\">\\n                    {{item.name_es}}\\n                  </td>\\n                  <td>\\n                    <a title=\\\"Edit Amenity\\\" (click)=\\\"openAmenityModal(addAmenityModal, item.id, item.icon, item.name_en, item.name_es, item.status)\\\" class=\\\"icon-block edit-icon\\\"><img src=\\\"./../../../../assets/img/edit.png\\\" alt=\\\"img\\\"></a>\\n                    <a *ngIf=\\\"item.status == 1\\\" (click)=\\\"addAmenityPopup(item.id, item.icon, item.name_en, item.name_es, 0, 'block')\\\" title=\\\"Block Amenity\\\" class=\\\"icon-block block-icon\\\"><img src=\\\"./../../../../assets/img/unblock.png\\\" alt=\\\"img\\\"></a>\\n                    <a *ngIf=\\\"item.status == 0\\\" (click)=\\\"addAmenityPopup(item.id, item.icon, item.name_en, item.name_es, 1, 'unblock')\\\" title=\\\"Unblock Amenity\\\" class=\\\"icon-block block-icon unblock-bg\\\"><img src=\\\"./../../../../assets/img/block.png\\\" alt=\\\"img\\\"></a>\\n                  </td>\\n              </tr>\\n            </table>\\n        </div>\\n      </div>\\n      <!-- <div class=\\\"btn-cont text-right padding40 paddingT0\\\">\\n        <button class=\\\"btn btn-primary\\\">Save</button>\\n      </div> -->\\n  </div>\\n</div>\\n\\n\\n<!-- add configuration modal -->\\n<ng-template #addPropertyConfigModal>\\n  <div class=\\\"modal-content\\\">\\n    <div class=\\\"modal-header my-modal-header\\\">\\n      <h4 class=\\\"modal-title\\\">Edit Property Configuration</h4>\\n      <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n    </div>\\n    <form class=\\\"form-horizontal my-modal-form\\\" role=\\\"form\\\" novalidate #addForm=\\\"ngForm\\\" (ngSubmit)=\\\"checkIfConfigSpanishNameEntered(property.configuration.id, addForm.value.name_en, addForm.value.name_es, property.configuration.status, 'edit')\\\">\\n      <div class=\\\"modal-body my-modal-body\\\">\\n        <div class=\\\"form-group\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Property Configuration (English)\\\" id=\\\"name_en\\\" required [(ngModel)]=\\\"property.configuration.name_en\\\" name=\\\"name_en\\\" #name_en=\\\"ngModel\\\">\\n          <!-- <div *ngIf=\\\"name_en.errors && (name_en.dirty || name_en.touched)\\\" class=\\\"show-error\\\">\\n              <div [hidden]=\\\"!name_en.errors.required\\\">\\n                {{constant.errorMsg.PROPERTY_TYPE_REQUIRED}}\\n              </div>\\n          </div> -->\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Property Configuration (Spanish)\\\" [(ngModel)]=\\\"property.configuration.name_es\\\" name=\\\"name_es\\\">\\n        </div>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"submit\\\" [disabled]=\\\"addForm.invalid\\\" class=\\\"btn btn-info\\\">Submit</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">Close</button>\\n      </div>\\n    </form>\\n  </div>\\n</ng-template>\\n\\n\\n<!-- add PropertyTypeModal modal -->\\n<ng-template #addPropertyTypeModal>\\n  <div class=\\\"modal-content\\\">\\n    <div class=\\\"modal-header my-modal-header\\\">\\n      <h4 class=\\\"modal-title\\\">Edit Property Type</h4>\\n      <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n    </div>\\n    <form class=\\\"form-horizontal my-modal-form\\\" role=\\\"form\\\" novalidate #addForm=\\\"ngForm\\\" (ngSubmit)=\\\"checkIfTypeSpanishNameEntered(property.type.id, addForm.value.name_en, addForm.value.name_es, property.type.status, 'edit')\\\">\\n      <div class=\\\"modal-body my-modal-body\\\">\\n        <div class=\\\"form-group\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Property type (English)\\\" id=\\\"name_en\\\" required [(ngModel)]=\\\"property.type.name_en\\\" name=\\\"name_en\\\" #name_en=\\\"ngModel\\\">\\n          <!-- <div *ngIf=\\\"name_en.errors && (name_en.dirty || name_en.touched)\\\" class=\\\"show-error\\\">\\n              <div [hidden]=\\\"!name_en.errors.required\\\">\\n                {{constant.errorMsg.PROPERTY_TYPE_REQUIRED}}\\n              </div>\\n          </div> -->\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Property type (Spanish)\\\" [(ngModel)]=\\\"property.type.name_es\\\" name=\\\"name_es\\\">\\n        </div>\\n      </div>\\n      <div class=\\\"modal-footer\\\">\\n        <button type=\\\"submit\\\" [disabled]=\\\"addForm.invalid\\\" class=\\\"btn btn-info\\\">Submit</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">Close</button>\\n      </div>\\n    </form>\\n  </div>\\n</ng-template>\\n\\n\\n<!-- addAmenitiesModal -->\\n<ng-template #addAmenityModal>\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header my-modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Edit Amenity</h4>\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <form class=\\\"form-horizontal my-modal-form\\\" role=\\\"form\\\" novalidate #addForm=\\\"ngForm\\\" (ngSubmit)=\\\"checkIfAmenitySpanishNameEntered(property.amenities.id, '', addForm.value.name_en, addForm.value.name_es, property.amenities.status, 'edit')\\\">\\n        <div class=\\\"modal-body my-modal-body\\\">\\n          <div class=\\\"form-group amenity-img\\\">\\n            <img src=\\\"{{property.amenities.icon}}\\\" width=\\\"100\\\" height=\\\"100\\\" class=\\\"image1\\\">\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <input accept=\\\"image/*\\\" (change)=\\\"changeListner1($event)\\\" type=\\\"file\\\" class=\\\"form-control\\\">\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Amenity (English)\\\" id=\\\"name_en\\\" required [(ngModel)]=\\\"property.amenities.name_en\\\" name=\\\"name_en\\\" #name_en=\\\"ngModel\\\">\\n            <!-- <div *ngIf=\\\"name_en.errors && (name_en.dirty || name_en.touched)\\\" class=\\\"show-error\\\">\\n                <div [hidden]=\\\"!name_en.errors.required\\\">\\n                  {{constant.errorMsg.PROPERTY_TYPE_REQUIRED}}\\n                </div>\\n            </div> -->\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Amenity (Spanish)\\\" [(ngModel)]=\\\"property.amenities.name_es\\\" name=\\\"name_es\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"modal-footer\\\">\\n          <button type=\\\"submit\\\" [disabled]=\\\"addForm.invalid\\\" class=\\\"btn btn-info\\\">Submit</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-default\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">Close</button>\\n        </div>\\n      </form>\\n  </div>\\n</ng-template>\\n  \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/cbl1002/Documents/realestate-admin/src/app/layout/settings/property/property.component.html\n// module id = ../../../../../src/app/layout/settings/property/property.component.html\n// module chunks = 2","import { Component, OnInit, TemplateRef, ElementRef } from '@angular/core';\nimport { AdminService } from '../../../services/admin.service';\nimport { Router } from '@angular/router';\nimport { IProperty } from '../../../common/property';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { Constant } from './../../../common/constants';\nimport { Property } from './../../../models/property.model';\ndeclare let swal: any;\n\n@Component({\n  selector: 'app-property',\n  templateUrl: './property.component.html',\n  styleUrls: ['./property.component.css'],\n  providers: [Constant, Property]\n})\n\nexport class PropertyComponent implements OnInit {\n\n  public parameter: IProperty = {};\n  public modalRef: BsModalRef;\n  icon: any;\n\n  constructor(private element: ElementRef, private constant: Constant, public property: Property,\n    private modalService: BsModalService, public admin: AdminService, private router: Router\n  ) {\n    this.parameter.countryCount = 0;\n    this.parameter.stateCount = 0;\n    this.parameter.cityCount = 0;\n  }\n\n  ngOnInit() {\n    this.getConfigurations();\n    this.getPropertyTypes();\n    this.getAmenities();\n  }\n\n  public openPropertyConfigModal(template: TemplateRef<any>, id, name_en, name_es, status) {\n    this.property.configuration.id = id;\n    this.property.configuration.name_en = name_en;\n    this.property.configuration.name_es = name_es == null ? name_en : name_es;\n    this.property.configuration.status = status;\n    this.modalRef = this.modalService.show(template);\n  }\n\n  public openPropertyTypeModal(template: TemplateRef<any>, id, name_en, name_es, status) {\n    this.property.type.id = id;\n    this.property.type.name_en = name_en;\n    this.property.type.name_es = name_es;\n    this.property.type.status = status;\n    this.modalRef = this.modalService.show(template);\n  }\n\n  public openAmenityModal(template: TemplateRef<any>, id, icon, name_en, name_es, status) {\n    this.property.amenities.id = id;\n    this.property.amenities.icon = icon;\n    this.property.amenities.name_en = name_en;\n    this.property.amenities.name_es = name_es;\n    this.property.amenities.status = status;\n    this.modalRef = this.modalService.show(template);\n  }\n\n\n  addPropertyConfiguration(id, name_en, name_es, status, type) {\n\n    // if (type !== 'add') {this.modalRef.hide(); }\n    if (type === 'edit') {this.modalRef.hide(); }\n\n    // this.parameter.loading = true;\n    this.parameter.url = 'addConfiguration';\n\n    const input = new FormData();\n    input.append('name_en', name_en);\n    input.append('name_es', name_es);\n    input.append('status', status);\n\n    if (id) {input.append('id', id); }\n\n    this.admin.postDataApi(this.parameter.url, input)\n      .subscribe(\n        success => {\n          // console.log('addConfigurations', success);\n          // this.parameter.loading = false;\n          const text = id ?\n            this.constant.successMsg.PROPERTY_CONFIG_UPDATED_SUCCESSFULLY :\n            this.constant.successMsg.PROPERTY_CONFIG_ADDED_SUCCESSFULLY;\n          swal('Success', text, 'success');\n          this.getConfigurations();\n          this.property.configuration.id = '';\n          this.property.configuration.name_en = '';\n          this.property.configuration.name_es = '';\n        }\n        // error => {\n        //   this.parameter.loading = false;\n        //   swal('Error', error.message, 'error');\n        //   this.router.navigate(['']);\n        // }\n      );\n  }\n\n  addPropertyType(id, name_en, name_es, status, type) {\n    // if (type !== 'add') {this.modalRef.hide(); }\n    if (type === 'edit') {this.modalRef.hide(); }\n\n    // this.parameter.loading = true;\n    this.parameter.url = 'addPropertyType';\n\n    const input = new FormData();\n    input.append('name_en', name_en);\n    input.append('name_es', name_es);\n    input.append('status', status);\n\n    if (id) {input.append('id', id); }\n\n    this.admin.postDataApi(this.parameter.url, input)\n      .subscribe(\n        success => {\n          // console.log('addPropertyType', success);\n          // this.parameter.loading = false;\n          const text = id ?\n            this.constant.successMsg.PROPERTY_TYPE_UPDATED_SUCCESSFULLY :\n            this.constant.successMsg.PROPERTY_TYPE_ADDED_SUCCESSFULLY;\n          swal('Success', text, 'success');\n          this.getPropertyTypes();\n          this.property.type.id = '';\n          this.property.type.name_en = '';\n          this.property.type.name_es = '';\n        }\n        // error => {\n        //   this.parameter.loading = false;\n        //   swal('Error', error.message, 'error');\n        //   this.router.navigate(['']);\n        // }\n      );\n  }\n\n\n  addAmenity(id, icon, name_en, name_es, status, type) {\n// console.log('--', id, icon, name_en, name_es, status, type);\n    // if (type !== 'add') {this.modalRef.hide(); }\n    if (type === 'edit') {this.modalRef.hide(); }\n\n    const iconNew = this.icon ? this.icon : this.property.amenities.icon;\n\n    // this.parameter.loading = true;\n    this.parameter.url = 'addPropertyAmenity';\n\n    const input = new FormData();\n\n    input.append('name_en', name_en);\n    input.append('name_es', name_es);\n    input.append('status', status);\n\n    if (this.icon) {input.append('icon', iconNew); }\n\n    if (id) {input.append('id', id); }\n\n    this.admin.postDataApi(this.parameter.url, input)\n      .subscribe(\n        success => {\n          // console.log('addPropertyAmenity', success);\n          // this.parameter.loading = false;\n          const text = id ?\n          this.constant.successMsg.AMENITY_UPDATED_SUCCESSFULLY :\n          this.constant.successMsg.AMENITY_ADDED_SUCCESSFULLY;\n          swal('Success', text, 'success');\n          this.getAmenities();\n          this.property.amenities.id = '';\n          this.property.amenities.name_en = '';\n          this.property.amenities.name_es = '';\n          this.property.amenities.icon = '';\n        }\n        // error => {\n        //   this.parameter.loading = false;\n        //   swal('Error', error.message, 'error');\n        //   this.router.navigate(['']);\n        // }\n      );\n  }\n\n\n  getConfigurations() {\n    // this.parameter.loading = true;\n    this.parameter.url = 'getConfigurations';\n    const input = new FormData();\n    this.admin.postDataApi(this.parameter.url, input)\n      .subscribe(\n        success => {\n          // console.log('getConfigurations', success);\n          // this.parameter.loading = false;\n          this.parameter.items = success.data;\n          this.parameter.total = success.data.length;\n        }\n        // error => {\n        //   console.log(error);\n        //   this.parameter.loading = false;\n        //   if (error.statusCode === 401) {\n        //     this.router.navigate(['']);\n        //   }else {\n        //     swal('Error', error.message, 'error');\n        //   }\n        // }\n      );\n  }\n\n\n  getPropertyTypes() {\n    // this.parameter.loading = true;\n    this.parameter.url = 'getPropertyTypes';\n    const input = new FormData();\n    this.admin.postDataApi(this.parameter.url, input)\n      .subscribe(\n        success => {\n          // console.log('getPropertyTypes', success);\n          // this.parameter.loading = false;\n          this.parameter.propertyTypes = success.data;\n          this.parameter.propertyTypesCount = success.data.length;\n        }\n        // error => {\n        //   console.log(error);\n        //   this.parameter.loading = false;\n        //   if (error.statusCode === 401) {\n        //     this.router.navigate(['']);\n        //   }else {\n        //     swal('Error', error.message, 'error');\n        //   }\n        // }\n      );\n  }\n\n  getAmenities() {\n    // this.parameter.loading = true;\n    this.parameter.url = 'getPropertyAmenities';\n    const input = new FormData();\n    this.admin.postDataApi(this.parameter.url, input)\n      .subscribe(\n        success => {\n          // console.log('getPropertyAmenities', success);\n          // this.parameter.loading = false;\n          this.parameter.amenities = success.data;\n          this.parameter.amenitiesCount = success.data.length;\n        }\n        // error => {\n        //   console.log(error);\n        //   this.parameter.loading = false;\n        //   if (error.statusCode === 401) {\n        //     this.router.navigate(['']);\n        //   }else {\n        //     swal('Error', error.message, 'error');\n        //   }\n        // }\n      );\n  }\n\n  addPropertyConfigurationPopup(id, name_en, name_es, status, type) {\n    const self = this;\n    const text = status === 1 ? this.constant.title.UNBLOCK_PROPERTY_CONFIG : this.constant.title.BLOCK_PROPERTY_CONFIG;\n    swal({\n      // title: this.constant.title.ARE_YOU_SURE,\n      // text: status === 1 ? this.constant.title.UNBLOCK_PROPERTY_CONFIG : this.constant.title.BLOCK_PROPERTY_CONFIG,\n      html: this.constant.title.ARE_YOU_SURE + '<br>' + text,\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: this.constant.confirmButtonColor,\n      cancelButtonColor: this.constant.cancelButtonColor,\n      confirmButtonText: 'Yes'\n    }).then((result) => {\n      if (result.value) {\n        this.addPropertyConfiguration(id, name_en, name_es, status, type);\n      }\n    });\n  }\n\n  addPropertyTypePopup(id, name_en, name_es, status, type) {\n    const self = this;\n    const text = status === 1 ? this.constant.title.UNBLOCK_PROPERTY_TYPE : this.constant.title.BLOCK_PROPERTY_TYPE;\n    swal({\n      // title: this.constant.title.ARE_YOU_SURE,\n      // text: status === 1 ? this.constant.title.UNBLOCK_PROPERTY_TYPE : this.constant.title.BLOCK_PROPERTY_TYPE,\n      html: this.constant.title.ARE_YOU_SURE + '<br>' + text,\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: this.constant.confirmButtonColor,\n      cancelButtonColor: this.constant.cancelButtonColor,\n      confirmButtonText: 'Yes'\n    }).then((result) => {\n      if (result.value) {\n        this.addPropertyType(id, name_en, name_es, status, type);\n      }\n    });\n  }\n\n  addAmenityPopup(id, icon, name_en, name_es, status, type) {\n    const self = this;\n    const text = status === 1 ? this.constant.title.UNBLOCK_AMENITY : this.constant.title.BLOCK_AMENITY;\n    swal({\n      // title: this.constant.title.ARE_YOU_SURE,\n      // text: status === 1 ? this.constant.title.UNBLOCK_AMENITY : this.constant.title.BLOCK_AMENITY,\n      html: this.constant.title.ARE_YOU_SURE + '<br>' + text,\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: this.constant.confirmButtonColor,\n      cancelButtonColor: this.constant.cancelButtonColor,\n      confirmButtonText: 'Yes'\n    }).then((result) => {\n      if (result.value) {\n        this.addAmenity(id, icon, name_en, name_es, status, type);\n      }\n    });\n  }\n\n  checkIfConfigSpanishNameEntered(id, name_en, name_es, status, type) {\n    const self = this;\n    if (name_es === '') {\n      swal({\n        text: this.constant.errorMsg.SAVE_ENGLISH_PROPERTY_CONFIG,\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: this.constant.confirmButtonColor,\n        cancelButtonColor: this.constant.cancelButtonColor,\n        confirmButtonText: 'Yes'\n      }).then((result) => {\n        if (result.value) {\n          this.addPropertyConfiguration(id, name_en, name_en, status, type);\n        }\n      });\n    }else {\n      self.addPropertyConfiguration(id, name_en, name_es, status, type);\n    }\n  }\n\n\n  checkIfTypeSpanishNameEntered(id, name_en, name_es, status, type) {\n    const self = this;\n    if (name_es === '') {\n      swal({\n        text: this.constant.errorMsg.SAVE_ENGLISH_PROPERTY_TYPE,\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: this.constant.confirmButtonColor,\n        cancelButtonColor: this.constant.cancelButtonColor,\n        confirmButtonText: 'Yes'\n      }).then((result) => {\n        if (result.value) {\n          this.addPropertyType(id, name_en, name_en, status, type);\n        }\n      });\n    }else {\n      self.addPropertyType(id, name_en, name_es, status, type);\n    }\n  }\n\n\n  checkIfAmenitySpanishNameEntered(id, icon, name_en, name_es, status, type) {\n    const self = this;\n    if (name_es === '') {\n      swal({\n        text: this.constant.errorMsg.SAVE_ENGLISH_AMENITY,\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: this.constant.confirmButtonColor,\n        cancelButtonColor: this.constant.cancelButtonColor,\n        confirmButtonText: 'Yes'\n      }).then((result) => {\n        if (result.value) {\n          this.addAmenity(id, icon, name_en, name_en, status, type);\n        }\n      });\n    }else {\n      self.addAmenity(id, icon, name_en, name_es, status, type);\n    }\n  }\n\n\n\n  changeListner(event) {\n    const reader = new FileReader();\n    const image = this.element.nativeElement.querySelector('.image');\n    const fileToUpload = event.target.files[0];\n    this.icon = fileToUpload;\n\n    reader.onload = function(e) {\n        const src = e.target['result'];\n        image.src = src;\n    };\n\n    reader.readAsDataURL(event.target.files[0]);\n  }\n\n\n  changeListner1(event) {\n    const reader = new FileReader();\n\n    const image = this.element.nativeElement.querySelector('.image1');\n\n    const fileToUpload = event.target.files[0];\n    this.icon = fileToUpload;\n\n    reader.onload = function(e) {\n        const src = e.target['result'];\n        image.src = src;\n    };\n\n    reader.readAsDataURL(event.target.files[0]);\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/cbl1002/Documents/realestate-admin/src/app/layout/settings/property/property.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/cbl1002/Documents/realestate-admin/src/app/layout/settings/settings.component.css\n// module id = ../../../../../src/app/layout/settings/settings.component.css\n// module chunks = 2","module.exports = \"\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/cbl1002/Documents/realestate-admin/src/app/layout/settings/settings.component.html\n// module id = ../../../../../src/app/layout/settings/settings.component.html\n// module chunks = 2","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.css']\n})\nexport class SettingsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/cbl1002/Documents/realestate-admin/src/app/layout/settings/settings.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { LoadingModule, ANIMATION_TYPES } from 'ngx-loading';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { AgmCoreModule } from '@agm/core';\nimport { Ng2TelInputModule } from 'ng2-tel-input';\nimport { Routes, RouterModule } from '@angular/router';\n\nimport { LocationComponent } from './location/location.component';\nimport { SettingsComponent } from './settings.component';\nimport { LocalityComponent } from './locality/locality.component';\nimport { PropertyComponent } from './property/property.component';\nimport { ProjectComponent } from './project/project.component';\nimport { EditProfileComponent } from './edit-profile/edit-profile.component';\nimport { DocumentsComponent } from './documents/documents.component';\nimport { AclUserGuard } from '../../guards/acl-user.guard';\nimport { AuthGuard } from '../../guards/auth.guard';\n\nconst routes: Routes = [\n  { path: 'edit-profile', component: EditProfileComponent,\n    canActivate: [AclUserGuard], data: {roles: ['Settings', 'can_read', '']}},\n  { path: 'setting-location', component: LocationComponent,\n    canActivate: [AclUserGuard], data: {roles: ['Settings', 'can_read', '']}},\n  { path: 'setting-locality', component: LocalityComponent,\n    canActivate: [AclUserGuard], data: {roles: ['Settings', 'can_read', '']}},\n  { path: 'setting-property', component: PropertyComponent,\n    canActivate: [AclUserGuard], data: {roles: ['Settings', 'can_read', '']}},\n  { path: 'setting-project', component: ProjectComponent,\n    canActivate: [AclUserGuard], data: {roles: ['Settings', 'can_read', '']}},\n  { path: 'documents-listing', component: DocumentsComponent,\n    canActivate: [AclUserGuard], data: {roles: ['Settings', 'can_read', '']}}\n];\n\n// const routes: Routes = [\n//   { path: 'edit-profile', component: EditProfileComponent,\n//     canActivate: [AuthGuard], data: {roles: ['Settings', 'can_read', '']}},\n//   { path: 'setting-location', component: LocationComponent,\n//     canActivate: [AuthGuard], data: {roles: ['Settings', 'can_read', '']}},\n//   { path: 'setting-locality', component: LocalityComponent,\n//     canActivate: [AuthGuard], data: {roles: ['Settings', 'can_read', '']}},\n//   { path: 'setting-property', component: PropertyComponent,\n//     canActivate: [AuthGuard], data: {roles: ['Settings', 'can_read', '']}},\n//   { path: 'setting-project', component: ProjectComponent,\n//     canActivate: [AuthGuard], data: {roles: ['Settings', 'can_read', '']}},\n//   { path: 'documents-listing', component: DocumentsComponent,\n//     canActivate: [AuthGuard], data: {roles: ['Settings', 'can_read', '']}}\n// ];\n\n@NgModule({\n\n  declarations: [\n    EditProfileComponent,\n    LocationComponent,\n    LocalityComponent,\n    PropertyComponent,\n    ProjectComponent,\n    SettingsComponent,\n    DocumentsComponent\n  ],\n  imports: [\n    RouterModule.forChild(routes),\n    CommonModule,\n    TranslateModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ModalModule.forRoot(),      // modal\n    LoadingModule.forRoot({\n        animationType: ANIMATION_TYPES.rectangleBounce,\n        // backdropBackgroundColour: 'rgba(0,0,0,0.5)',\n        // backdropBorderRadius: '4px',\n        primaryColour: '#00B96F'\n    }),\n    AgmCoreModule.forRoot({\n      // apiKey: 'AIzaSyCud9LaXE2hvv41JyXztnjugMxKO8QWLHQ',\n        apiKey: 'AIzaSyCYv_zELZGVo2Ehzgp8eh8UeSIidhMCmH8',\n        libraries: ['drawing']\n      }),\n    Ng2TelInputModule\n  ],\n  exports: [RouterModule]\n})\n\nexport class SettingsModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/cbl1002/Documents/realestate-admin/src/app/layout/settings/settings.module.ts","export class Document {\n    id: number;\n    status: number;\n    name_en: string;\n    name_es: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/cbl1002/Documents/realestate-admin/src/app/models/document.model.ts","export class Locality {\n    public localityModel = {\n        id: '',\n        name_es: '',\n        name_en: '',\n        status: 0,\n        city_id: '',\n        poly_coordinates: [],\n        price_per_sqft: ''\n    };\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/cbl1002/Documents/realestate-admin/src/app/models/locality.model.ts","export class Location {\n    public countryModel = {\n        country_id: '',\n        name_es: '',\n        name_en: '',\n        status: 0\n    };\n\n    public stateModel = {\n        country_id: '',\n        state_id: '',\n        name_es: '',\n        name_en: '',\n        status: 0\n    };\n\n    public cityModel = {\n        country_id: '',\n        state_id: '',\n        city_id: '',\n        name_es: '',\n        name_en: '',\n        status: 0\n    };\n\n    public localityModel = {\n        city_id: '',\n        locality_id: '',\n        name_es: '',\n        name_en: '',\n        status: 0,\n        poly_coordinates: []\n    };\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/cbl1002/Documents/realestate-admin/src/app/models/location.model.ts","export class Project {\n    public possession = {\n        id: '',\n        name_es: '',\n        name_en: '',\n        status: 0\n    };\n\n    public type = {\n        id: '',\n        name_es: '',\n        name_en: '',\n        status: 0\n    };\n\n    public amenities = {\n        id: '',\n        icon: '',\n        name_es: '',\n        name_en: '',\n        status: 0\n    };\n}\n\nexport class Amenities {\n    id: string;\n    icon: string;\n    name_es: string;\n    name_en: string;\n    status: string;\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/cbl1002/Documents/realestate-admin/src/app/models/project.model.ts","export class Property {\n    public configuration = {\n        id: '',\n        name_es: '',\n        name_en: '',\n        status: 0\n    };\n\n    public type = {\n        id: '',\n        name_es: '',\n        name_en: '',\n        status: 0\n    };\n\n    public amenities = {\n        id: '',\n        icon: '',\n        name_es: '',\n        name_en: '',\n        status: 0\n    };\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/cbl1002/Documents/realestate-admin/src/app/models/property.model.ts"],"sourceRoot":"webpack:///"}