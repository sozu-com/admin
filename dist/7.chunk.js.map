{"version":3,"sources":["/home/cbl1002/Documents/realestate-admin/src/app/layout/notary/notary-leads/notary-leads-details/notary-leads-details.component.css","/home/cbl1002/Documents/realestate-admin/src/app/layout/notary/notary-leads/notary-leads-details/notary-leads-details.component.html","/home/cbl1002/Documents/realestate-admin/src/app/layout/notary/notary-leads/notary-leads-details/notary-leads-details.component.ts","/home/cbl1002/Documents/realestate-admin/src/app/layout/notary/notary-leads/notary-leads.component.css","/home/cbl1002/Documents/realestate-admin/src/app/layout/notary/notary-leads/notary-leads.component.html","/home/cbl1002/Documents/realestate-admin/src/app/layout/notary/notary-leads/notary-leads.component.ts","/home/cbl1002/Documents/realestate-admin/src/app/layout/notary/notary.component.css","/home/cbl1002/Documents/realestate-admin/src/app/layout/notary/notary.component.html","/home/cbl1002/Documents/realestate-admin/src/app/layout/notary/notary.component.ts","/home/cbl1002/Documents/realestate-admin/src/app/layout/notary/notary.module.ts"],"names":[],"mappings":"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","file":"7.chunk.js","sourcesContent":["exports = module.exports = require(\"../../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/cbl1002/Documents/realestate-admin/src/app/layout/notary/notary-leads/notary-leads-details/notary-leads-details.component.css\n// module id = ../../../../../src/app/layout/notary/notary-leads/notary-leads-details/notary-leads-details.component.css\n// module chunks = 7","module.exports = \"<ngx-loading [show]=\\\"parameter.loading\\\"></ngx-loading>\\n<div class=\\\"container-fluid\\\">\\n        <div class=\\\"white-bg padding15\\\">\\n            <div class=\\\"row\\\">\\n                <div class=\\\"col-lg-3 col-md-12 col-sm-6 col-12\\\">\\n                    <div class=\\\"df-profile\\\">\\n                    <a routerLink=\\\"../\\\"><i class=\\\"fa fa-angle-left\\\" aria-hidden=\\\"true\\\"></i></a>\\n                    <img [src]=\\\"parameter.lead?.user?.image\\\" onerror='src=\\\"assets/img/default_img.png\\\"' alt=\\\"img\\\">\\n                    <div class=\\\"df-info\\\" *ngIf=\\\"parameter.lead?.user\\\">\\n                        <p class=\\\"p14\\\">{{parameter.lead.user.name}}</p>\\n                        <p class=\\\"p12\\\">Status: Open</p>\\n                    </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-lg-5 col-md-12 col-sm-6 col-12\\\">\\n                    <div class=\\\"profile-list\\\">\\n                    <ul>\\n                        <li>\\n                            <div class=\\\"df-info\\\">\\n                                <p class=\\\"p14 marginB0\\\" *ngIf=\\\"parameter.lead?.admin\\\">{{parameter.lead.admin.name}}</p>\\n                                <p class=\\\"p12\\\">CSR Buyer</p>\\n                            </div>\\n                        </li>\\n                        <!-- <li>\\n                            <div class=\\\"df-info\\\" *ngIf=\\\"parameter.lead?.broker\\\">\\n                                <p class=\\\"p14 marginB0\\\">{{parameter.lead.broker.name}}</p>\\n                                <p class=\\\"p12\\\">Inhouse Broker</p>\\n                            </div>\\n                        </li> -->\\n                        <li>\\n                            <div class=\\\"df-info\\\" *ngIf=\\\"parameter.lead?.closer\\\">\\n                                <p class=\\\"p14 marginB0\\\">{{parameter.lead.closer.name}}</p>\\n                                <p class=\\\"p12\\\">CSR Closer</p>\\n                            </div>\\n                        </li>\\n                    </ul>\\n                    </div>\\n                </div>\\n                <div class=\\\"col-lg-4 col-md-12 col-sm-12 col-12\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-sm-12 btn-cont text-right\\\">\\n                            <a *ngIf=\\\"parameter?.lead?.lead_status_noatary!=1 &&\\n                            (admin?.admin_acl['Notary Lead Management']?.can_update==1 || admin?.permissions?.can_noatary==1)\\\" (click)=\\\"markLeadClose()\\\" class=\\\"btn btn-fourth\\\" href=\\\"javascript://\\\">\\n                                Close Lead\\n                            </a>\\n                            <a *ngIf=\\\"parameter?.lead?.lead_status_noatary==1\\\" style=\\\"cursor: auto;\\\" class=\\\"btn btn-fourth\\\" href=\\\"javascript://\\\">\\n                                Lead Closed\\n                            </a>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        \\n        <div class=\\\"spacer30\\\"></div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-6 col-md-12 col-sm-12 col-12\\\">\\n                <div class=\\\"white-bg padding30\\\">\\n                    <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-6\\\">\\n                        <h6>Details</h6>\\n                    </div>\\n                    <!-- <div class=\\\"col-md-6\\\">\\n                        <div class=\\\"edit text-right\\\"><a href=\\\"javascript://\\\">Edit</a></div>\\n                    </div> -->\\n                    </div>\\n                    <div class=\\\"details-table\\\">\\n                    <table class=\\\"table\\\">\\n                        <tr>\\n                            <td style=\\\"padding-left:0\\\"><label>Full Name</label></td>\\n                            <td colspan=\\\"2\\\" *ngIf=\\\"parameter?.lead?.name\\\">{{parameter.lead.name}}</td>\\n                        </tr>\\n                        <tr>\\n                            <td style=\\\"padding-left:0\\\"><label>Contact Number</label></td>\\n                            <td colspan=\\\"2\\\" *ngIf=\\\"parameter?.lead?.phone\\\">{{parameter.lead.dial_code ? parameter.lead.dial_code : constant.dial_code}}-{{parameter.lead.phone}}</td>\\n                        </tr>\\n                        <tr>\\n                            <td style=\\\"padding-left:0\\\"><label>Email address</label></td>\\n                            <td colspan=\\\"2\\\" *ngIf=\\\"parameter?.lead?.email\\\">{{parameter.lead.email}}</td>\\n                        </tr>\\n                        <tr>\\n                            <td style=\\\"padding-left:0\\\"><label>Interested In</label></td>\\n                            <td *ngIf=\\\"parameter?.lead?.configuration\\\">\\n                                <span *ngFor=\\\"let conf of parameter.lead.configuration; let ii=index\\\">\\n                                {{conf.name}}<span *ngIf=\\\"ii<parameter?.lead?.configuration?.length-1\\\">,</span>\\n                                </span>\\n                                <span *ngIf=\\\"parameter.lead.configuration?.length == 0\\\">NA</span>\\n                            </td>\\n                        </tr>\\n                        <tr>\\n                            <td style=\\\"padding-left:0\\\"><label><strong>Property Selected</strong></label></td>\\n                            <td *ngIf=\\\"parameter?.lead?.selected_properties?.length!=0\\\">\\n                                <p class=\\\"p14 marginB0\\\">\\n                                    {{parameter.lead?.selected_properties[0]?.property?.configuration.name}}\\n                                </p>\\n                                <p class=\\\"p12 marginB0\\\"><strong>{{parameter.lead?.selected_properties[0]?.property?.building?.name}}</strong></p>\\n                                <p class=\\\"p11\\\"><i>{{parameter.lead?.selected_properties[0]?.property?.building?.developer?.name}}</i></p>\\n                            </td>\\n                            <td *ngIf=\\\"parameter?.lead?.selected_properties?.length!=0\\\">\\n                                <a class=\\\"view-all-2\\\" href=\\\"javascript://\\\" (click)=\\\"viewPropertyDetails(parameter?.lead?.selected_properties[0])\\\"> View Property</a>\\n                            </td>\\n                            <td *ngIf=\\\"parameter?.lead?.selected_properties?.length==0\\\">NA</td>\\n                        </tr>\\n                        \\n                        <!-- My Availabilities -->\\n                        <tr *ngIf=\\\"parameter?.lead?.sale_rent==1\\\">\\n                            <td  style=\\\"padding-left:0\\\"><label><strong>Availabilities</strong></label></td>\\n                            <td colspan=\\\"2\\\" *ngIf=\\\"parameter?.lead?.selected_properties[0]?.selected_noatary!=0 && parameter?.lead?.selected_properties[0]?.selected_noatary[0]?.noatary_availability?.length!=0; else noAvailability1\\\">\\n                                <p *ngFor=\\\"let na of parameter?.lead?.selected_properties[0]?.selected_noatary[0]?.noatary_availability; let m=index\\\" class=\\\"date\\\">\\n                                    <span *ngIf=\\\"m<2\\\">{{na.date_time | moment}}</span>\\n                                    <!-- <span *ngIf=\\\"m>1 && show==true\\\">{{na.date_time | moment}}</span> -->\\n                                </p>\\n                                <!-- <span class=\\\"read-more\\\" *ngIf=\\\"show==false && parameter?.lead?.selected_properties[0]?.selected_noatary[0]?.noatary_availability.length>2\\\" (click)=\\\"show=true\\\">Read more</span> -->\\n                                <span class=\\\"read-more\\\" *ngIf=\\\"parameter?.lead?.selected_properties[0]?.selected_noatary[0]?.noatary_availability.length>2\\\" data-toggle=\\\"modal\\\" data-target=\\\"#get-availability1\\\">Read more</span>\\n                            </td>\\n                            <ng-template #noAvailability1>\\n                                <td colspan=\\\"2\\\"><p>No availability given by notary yet.</p></td>\\n                            </ng-template>\\n                        </tr>\\n\\n                        <!-- Meeting Schedule -->\\n                        <tr *ngIf=\\\"parameter?.lead?.sale_rent==1\\\">\\n                            <td  style=\\\"padding-left:0\\\"><label><strong>Meeting Schedule</strong></label></td>\\n                            <td colspan=\\\"2\\\" class=\\\"cursor-pointer\\\">\\n                                <p class=\\\"date\\\" *ngIf=\\\"scheduleMeeting.appointment_date; else noAvailability4\\\">\\n                                    <span>{{scheduleMeeting.appointment_date | moment}}</span>\\n                                </p>\\n                                <ng-template #noAvailability4>\\n                                    <p>Meeting not scheduled by closure.</p>\\n                                </ng-template>\\n                            </td>\\n                        </tr>          \\n        \\n                    </table>\\n                    </div>\\n                </div>\\n        \\n                <!-- notes start -->\\n                <app-notes [sent_as]=\\\"parameter.sent_as\\\" [lead_id]=\\\"parameter.lead_id\\\"></app-notes>\\n                <!-- notes end -->\\n        \\n                <div *ngIf=\\\"parameter?.lead?.sale_rent==1\\\" class=\\\"bank-assigned-now white-bg\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-6 col-sm-6 col-12 b-left\\\">\\n                        <p class=\\\"p13\\\" *ngIf=\\\"selectedProperties?.noataries && selectedProperties.noataries.length==0\\\">No Notary assigned yet </p>\\n        \\n                        <div class=\\\"d-flex\\\" *ngIf=\\\"selectedProperties?.noataries && selectedProperties.noataries.length!=0\\\">\\n                            <img [src]=\\\"selectedProperties?.noataries && selectedProperties.noataries[0].image\\\" onerror='src=\\\"assets/img/house.png\\\"' alt=\\\"img\\\">\\n                            <div class=\\\"bank-info\\\">\\n                                <p title=\\\"Notary\\\" class=\\\"p14\\\">{{selectedProperties.noataries[0].name}}</p>\\n                                <p class=\\\"p11\\\">{{selectedProperties.noataries[0].dial_code ? selectedProperties.noataries[0].dial_code : constant.dial_code}}-{{selectedProperties.noataries[0].phone}}</p>\\n                            </div>\\n                            </div>\\n                        </div>\\n                        <div class=\\\"col-md-6 col-sm-6 col-12 b-right\\\">\\n                        <p class=\\\"p13\\\" *ngIf=\\\"selectedProperties?.banks && selectedProperties.banks.length==0\\\">No Bank assigned yet </p>\\n        \\n                        <div class=\\\"d-flex\\\" *ngIf=\\\"selectedProperties?.banks && selectedProperties.banks.length!=0\\\">\\n                            <img [src]=\\\"selectedProperties?.banks && selectedProperties.banks[0].image\\\" onerror='src=\\\"assets/img/bank-building.png\\\"' alt=\\\"img\\\">\\n                            <div class=\\\"bank-info\\\">\\n                                <p title=\\\"Bank\\\" class=\\\"p14\\\">{{selectedProperties.banks[0].name}}</p>\\n                                <p class=\\\"p11\\\">{{selectedProperties?.banks[0]?.branch ? selectedProperties?.banks[0]?.branch : 'NA'}}</p>\\n                            </div>\\n                        </div>\\n                        </div>\\n                    </div>\\n                </div>\\n        \\n            </div>\\n        \\n        \\n            <div class=\\\"col-lg-6 col-md-12 col-sm-12 col-12\\\">\\n            \\n            <!-- chat start -->\\n            <div *ngIf=\\\"parameter.lead?.user\\\">\\n                <app-chat [lead_id]=\\\"parameter.lead_id\\\" [sent_as]=\\\"parameter.sent_as\\\" [user_id]=\\\"parameter.user_id\\\" [admin_id]=\\\"parameter.admin_id\\\"></app-chat>\\n            </div>\\n            <!-- chat end -->\\n        \\n            <div class=\\\"clearfix\\\"></div>\\n            <div class=\\\"upload-document-block white-bg\\\">\\n                <div class=\\\"page-title-2 border-0\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-9\\\">\\n                        <h4>Documents</h4>\\n                        </div>\\n                        <div class=\\\"col-3\\\">\\n                            <a *ngIf=\\\"(admin?.admin_acl['Notary Lead Management']?.can_update==1 || admin?.permissions?.can_noatary==1); else noDocumentPermission\\\" class=\\\"view pull-right\\\" href=\\\"javascript://\\\" (click)=\\\"updateDocumentChecklist()\\\">Save</a>\\n                            <ng-template #noDocumentPermission>\\n                                <a class=\\\"view pull-right\\\" href=\\\"javascript://\\\">Save</a>\\n                            </ng-template>\\n                        </div>\\n                    </div>\\n                    <table class=\\\"table\\\">\\n                        <tr *ngFor=\\\"let document of selectedProperties.allDocuments; let i=index\\\">\\n                        <td>\\n                            <label class=\\\"cust-check-bx\\\">{{document.name}}\\n                            <input type=\\\"checkbox\\\" (click)=\\\"setValue(i)\\\" [checked]=\\\"document.is_selected == 1 ? 'checked' : ''\\\" name=\\\"document\\\">\\n                            <span class=\\\"checkmark\\\"></span>\\n                            </label>\\n                        </td>\\n                        </tr>\\n                    </table>\\n                </div>\\n            </div>\\n                <div class=\\\"all-document-block white-bg\\\">\\n                <div class=\\\"page-title-2 border-0\\\">\\n                <div class=\\\"row\\\">\\n                <div class=\\\"col-9\\\">\\n                    <h4>All Documents</h4>\\n                    <p class=\\\"p11 marginB0\\\">From both seller and buyer</p>\\n        \\n                    </div>\\n                    <div class=\\\"col-3 text-right\\\">\\n                        <a *ngIf=\\\"selectedProperties?.uploaded_documents?.length==0\\\" (click)=\\\"noDocumentUploaded()\\\" class=\\\"view\\\" href=\\\"javascript://\\\" >View</a>\\n                        <a *ngIf=\\\"selectedProperties?.uploaded_documents?.length!=0\\\" class=\\\"view\\\" data-toggle=\\\"modal\\\" data-target=\\\"#uploaded-documents\\\" href=\\\"javascript://\\\" >View</a>\\n                    </div>\\n                </div>\\n                </div>\\n                </div>\\n            </div>\\n        </div>\\n        </div>\\n        \\n        \\n        <div class=\\\"modal\\\" id=\\\"uploaded-documents\\\">\\n            <div class=\\\"modal-dialog \\\">\\n            <div class=\\\"modal-content notary-avail\\\">\\n                <!-- <div class=\\\"modal-header modal-header-new\\\"> -->\\n                    <div class=\\\"modal-header modal-header-new\\\">\\n                    <h4 class=\\\"modal-title\\\">Uploaded Documents</h4>\\n                    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\">&times;</button>\\n                </div>\\n                <div class=\\\"modal-body\\\">\\n                    <table class=\\\"table\\\">\\n                        <tr *ngFor=\\\"let upDocument of selectedProperties.uploaded_documents\\\">\\n                        <td>\\n                            <div class=\\\"n-avail-profile\\\">\\n                                <div class=\\\"n-avail-info\\\">\\n                                    <p class=\\\"p14 marginB0\\\" *ngIf=\\\"upDocument.attachment_name\\\">{{upDocument.attachment_name}}</p>\\n                                    <!-- <p class=\\\"p12\\\" *ngIf=\\\"!upDocument.attachment_name\\\">{{upDocument.attachment.substring(upDocument.attachment.lastIndexOf('/'), upDocument.attachment.length)}}</p> -->\\n                                    <p class=\\\"p14 marginB0\\\" *ngIf=\\\"!upDocument.attachment_name\\\">No name</p>\\n                                </div>\\n                            </div>\\n                        </td>\\n                        <td class=\\\"text-right\\\">\\n                                \\n                                <!-- <a target=\\\"_blank\\\" href=\\\"https://docs.google.com/viewer?url={{upDocument.attachment}}\\\">View</a> -->\\n                                <a class=\\\"green-color\\\" target=\\\"_blank\\\" href=\\\"{{upDocument.attachment}}\\\">Download</a>\\n                            \\n                        </td>\\n                        </tr>\\n                    </table>\\n                </div>\\n            </div>\\n            </div>\\n        </div>\\n        \\n        <div class=\\\"modal\\\" id=\\\"bank-listing\\\">\\n            <div class=\\\"modal-dialog \\\">\\n            <div class=\\\"modal-content notary-avail\\\">\\n                <div class=\\\"modal-header popup-header\\\">\\n                    <h4 class=\\\"modal-title\\\">Banks available</h4>\\n                    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" #hideBanks>&times;</button>\\n                </div>\\n                <div class=\\\"modal-body\\\">\\n                    <table class=\\\"table\\\">\\n                        <tr *ngFor=\\\"let bank of parameter.banks\\\">\\n                        <td>\\n                            <div class=\\\"n-avail-profile\\\">\\n                                <img [src]=\\\"bank.image\\\" onerror='src=\\\"assets/img/bank.png\\\"' alt=\\\"img\\\">\\n                                <div class=\\\"n-avail-info\\\">\\n                                    <p class=\\\"p12\\\">{{bank.name}}</p>\\n                                    <p class=\\\"p10\\\">Branch : {{bank.branch ? bank.branch : 'NA'}}</p>\\n                                </div>\\n                            </div>\\n                        </td>\\n                        <td>\\n                            <label class=\\\"cust-check-bx float-right\\\">\\n                            <input type=\\\"radio\\\" name=\\\"bank_id\\\" (click)=\\\"assignBank(bank)\\\">\\n                            <span class=\\\"checkmark\\\"></span>\\n                            </label>\\n                        </td>\\n                        </tr>\\n                    </table>\\n                </div>\\n            </div>\\n            </div>\\n        </div>\\n        \\n        <div class=\\\"modal\\\" id=\\\"notary-avail\\\">\\n            <div class=\\\"modal-dialog \\\">\\n                <div class=\\\"modal-content notary-avail\\\">\\n                    <div class=\\\"modal-header popup-header\\\">\\n                    <h4 class=\\\"modal-title\\\">Notaries available</h4>\\n                    <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" #hideNotaries>&times;</button>\\n                    </div>\\n                    <div class=\\\"modal-body\\\">\\n                        <table class=\\\"table\\\">\\n                            <tr *ngFor=\\\"let item of parameter.items\\\">\\n                                <td>\\n                                    <div class=\\\"n-avail-profile\\\">\\n                                    <img [src]=\\\"item.image\\\" onerror='src=\\\"assets/img/house.png\\\"' alt=\\\"img\\\">\\n                                    <div class=\\\"n-avail-info\\\">\\n                                        <p class=\\\"p12\\\">{{item.name}}</p>\\n                                        <p class=\\\"p10\\\">Phone : {{item.dial_code ? item.dial_code : constant.dial_code}}-{{item.phone}}</p>\\n                                    </div>\\n                                    </div>\\n                                </td>\\n                                <td>\\n                                    <label class=\\\"cust-check-bx float-right\\\">\\n                                        <input type=\\\"radio\\\" name=\\\"notary_id\\\" (click)=\\\"assignNoatary(item)\\\">\\n                                        <span class=\\\"checkmark\\\"></span>\\n                                    </label>\\n                                </td>\\n                            </tr>\\n                        </table>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n\\n\\n\\n<div class=\\\"modal animated\\\" id=\\\"get-availability1\\\">\\n    <div class=\\\"modal-dialog fadeIndown\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header modal-header-new\\\">\\n                <h4 class=\\\"modal-title\\\">Notary Availabilities</h4>\\n                <button type=\\\"button\\\" style=\\\"display: none;\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" #modalClose>&times;</button>\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"closeModal()\\\">&times;</button>\\n            </div>\\n    \\n            <div class=\\\"modal-body modal-body-new\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-6\\\" *ngFor=\\\"let d of parameter?.lead?.selected_properties[0]?.selected_noatary[0]?.noatary_availability; let j=index\\\">\\n                        <label class=\\\"notary-ava\\\">{{d.date_time | moment}}</label>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n            \"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/cbl1002/Documents/realestate-admin/src/app/layout/notary/notary-leads/notary-leads-details/notary-leads-details.component.html\n// module id = ../../../../../src/app/layout/notary/notary-leads/notary-leads-details/notary-leads-details.component.html\n// module chunks = 7","import { Component, OnInit, OnDestroy, ViewChild, ElementRef } from '@angular/core';\nimport { Router, ActivatedRoute} from '@angular/router';\nimport { AdminService } from '../../../../services/admin.service';\nimport { CommonService } from '../../../../services/common.service';\nimport { IProperty } from '../../../../common/property';\nimport * as io from 'socket.io-client';\nimport { Constant } from './../../../../common/constants';\nimport { SelectedProperties, BankAssigned, NotaryAssigned, ScheduleMeeting } from './../../../../models/leads.model';\nimport { Chat } from '../../../../models/chat.model';\ndeclare let swal: any;\n\n@Component({\n  selector: 'app-notary-leads-details',\n  templateUrl: './notary-leads-details.component.html',\n  styleUrls: ['./notary-leads-details.component.css'],\n  providers: [SelectedProperties, BankAssigned, NotaryAssigned, Chat, ScheduleMeeting]\n})\nexport class NotaryLeadsDetailsComponent implements OnInit {\n  show = false;\n  public parameter: IProperty = {};\n  public scrollbarOptions = { axis: 'y', theme: 'dark' };\n  // meetingDate: any = {\n  //   appointment_date: '',\n  //   id: ''\n  // };\n  @ViewChild('modalClose') modalClose: ElementRef;\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    public admin: AdminService,\n    private cs: CommonService,\n    public constant: Constant,\n    public selectedProperties: SelectedProperties,\n    public model: Chat,\n    public scheduleMeeting: ScheduleMeeting\n  ) {\n    this.admin.loginData$.subscribe(success => {\n      this.parameter.admin_id = success['id'];\n    });\n  }\n\n  closeModal() {\n    this.modalClose.nativeElement.click();\n  }\n\n  ngOnInit() {\n    this.parameter.sent_as = this.constant.userType.notary;\n    this.route.params.subscribe( params => {\n      this.parameter.lead_id = params.id;\n      this.parameter.loading = true;\n      this.admin.postDataApi('leads/details', {lead_id: this.parameter.lead_id, sent_as: this.parameter.sent_as}).subscribe(r => {\n        this.parameter.loading = false;\n        // console.log('lead details', r);\n        this.getDocumentOptions();\n        this.parameter.lead = r.data.lead;\n        this.selectedProperties = r.data.lead.selected_properties[0];\n\n        if (this.parameter.lead.appointments.length !== 0) {\n          this.scheduleMeeting = this.parameter.lead.appointments[0];\n        }\n        // if (this.parameter.lead.appointments && this.parameter.lead.appointments.length !== 0) {\n        //   for (let index = 0; index < this.parameter.lead.appointments.length; index++) {\n        //     const element = this.parameter.lead.appointments[index];\n        //     if (element.sent_as === this.constant.userType.csr_closer) {\n        //       this.meetingDate = {\n        //         appointment_date: element.appointment_date,\n        //         id: element.id\n        //       };\n        //     }\n        //   }\n        // }\n        // notary will chat with closer\n        this.parameter.user_id = this.parameter.lead.closer.id;\n      }, error => {\n        this.parameter.loading = false;\n      });\n    });\n  }\n\n  setValue(i) {\n    this.selectedProperties.allDocuments[i].is_selected =\n    this.selectedProperties.allDocuments[i].is_selected && this.selectedProperties.allDocuments[i].is_selected === 1 ? 0 : 1;\n  }\n\n  getDocumentOptions() {\n    this.admin.postDataApi('getDocumentOptions', {}).subscribe(r => {\n      this.selectedProperties.allDocuments = r.data;\n      this.selectedProperties.allDocuments.forEach(element => {\n        this.selectedProperties.selected_documents.forEach(pt => {\n          if (pt.id === element.id) {\n            element.is_selected = 1;\n          }\n        });\n      });\n    }\n  );\n  }\n\n\n  updateDocumentChecklist() {\n    const ids = this.selectedProperties.allDocuments.filter(d => d.is_selected === 1);\n    const documents_ids = ids.map(d => d.id);\n    const input = {\n      lead_id: this.parameter.lead_id,\n      property_id: this.selectedProperties.property_id,\n      documents: documents_ids\n    };\n    this.parameter.loading = true;\n    this.admin.postDataApi('leads/updateDocumentChecklist', input).subscribe(r => {\n      this.parameter.loading = false;\n      swal('Success', 'Successfully saved', 'success');\n    }, error => {\n      this.parameter.loading = false;\n    }\n  );\n  }\n\n  noDocumentUploaded() {\n    swal('Error', 'No document uploaded yet.', 'error');\n  }\n\n  viewPropertyDetails(property) {\n    this.cs.setPropertyDetails(property);\n    this.router.navigate(['/dashboard/properties/details/' + property.property_id]);\n  }\n\n  markLeadClose() {\n    swal({\n      html: this.constant.title.ARE_YOU_SURE + '<br>' + 'You want to close this lead?',\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: this.constant.confirmButtonColor,\n      cancelButtonColor: this.constant.cancelButtonColor,\n      confirmButtonText: 'Yes'\n    }).then((result) => {\n      if (result.value) {\n        this.admin.postDataApi('leads/noatary-mark-lead-closed', {lead_id: this.parameter.lead_id}).subscribe(r => {\n          console.log('r', r);\n          this.parameter.lead.lead_status_noatary = 1;\n          swal('Success', 'Lead closed successfully.', 'success');\n        });\n      }\n    });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/cbl1002/Documents/realestate-admin/src/app/layout/notary/notary-leads/notary-leads-details/notary-leads-details.component.ts","exports = module.exports = require(\"../../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/cbl1002/Documents/realestate-admin/src/app/layout/notary/notary-leads/notary-leads.component.css\n// module id = ../../../../../src/app/layout/notary/notary-leads/notary-leads.component.css\n// module chunks = 7","module.exports = \"<ngx-loading [show]=\\\"parameter.loading\\\"></ngx-loading>\\n<div class=\\\"container-fluid\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-4\\\">\\n             <div class=\\\"form-group\\\">\\n              <p class=\\\"p16\\\">Manage Notary's Leads</p>\\n              <div class=\\\"d-flex\\\">\\n              <button (click)=\\\"removeCsrUser()\\\" class=\\\"all-btn\\\">All</button>\\n    \\n              <div class=\\\"autocomplete\\\">\\n                <input style=\\\"max-width:200px\\\" list=\\\"amenities\\\" [(ngModel)]=\\\"parameter.keyword\\\" (input)=\\\"getCsrListing()\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"keyword\\\" (focusout)=\\\"closeCsrListing()\\\">\\n                <!-- <input type=\\\"text\\\"  (keyup.enter)=\\\"addAmenity(amen)\\\" name=\\\"amen\\\" [(ngModel)]=\\\"amen\\\"> -->\\n                <div id=\\\"myInputautocomplete-list\\\" class=\\\"autocomplete-items\\\">\\n                    <div *ngFor=\\\"let item of users\\\" (click)=\\\"selectCsrUser(item)\\\">{{item.email}}</div>\\n                </div>\\n               </div>\\n              \\n              </div>\\n              </div>\\n            </div>\\n           <div class=\\\"col-md-2\\\">\\n          <div class=\\\"form-group\\\">\\n          <label>Country</label>\\n           <select class=\\\"form-control\\\" (change)=\\\"onCountryChange($event.target.value)\\\">\\n              <option value=\\\"0\\\">All</option>\\n              <option *ngFor=\\\"let item of location.countries\\\" [value]=\\\"item.id\\\">{{item.name}}</option>\\n           </select>\\n          </div>\\n          </div>\\n          <div class=\\\"col-md-2\\\">\\n          <div class=\\\"form-group\\\">\\n          <label>State</label>\\n           <select class=\\\"form-control\\\" (change)=\\\"onStateChange($event.target.value)\\\">\\n              <option value=\\\"0\\\">All</option>\\n              <option *ngFor=\\\"let item of location.states\\\" [value]=\\\"item.id\\\">{{item.name}}</option>\\n           </select>\\n          </div>\\n          </div>\\n          <div class=\\\"col-md-2\\\">\\n            <div class=\\\"form-group\\\">\\n            <label>City</label>\\n              <select class=\\\"form-control\\\" (change)=\\\"onCityChange($event.target.value)\\\">\\n                <option value=\\\"0\\\">All</option>\\n                <option *ngFor=\\\"let item of location.cities\\\" [value]=\\\"item.id\\\">{{item.name}}</option>\\n              </select>\\n            </div>\\n          </div>\\n    \\n          <div class=\\\"col-md-2\\\">\\n          <div class=\\\"form-group\\\">\\n          <label>Locality</label>\\n          <select class=\\\"form-control\\\" (change)=\\\"onLocalityChange($event.target.value)\\\">\\n              <option value=\\\"0\\\">All</option>\\n              <option *ngFor=\\\"let item of location.localities\\\" [value]=\\\"item.id\\\">{{item.name}}</option>\\n            </select>\\n          </div>\\n          </div>\\n          </div>\\n    \\n        <!-- <div *ngIf=\\\"users?.length > 0 && initSelection\\\"class=\\\"row\\\">\\n            <table class=\\\"table table-striped\\\">\\n                <tbody><tr *ngFor=\\\"let item of users\\\" (click)=\\\"selectCsrUser(item)\\\">\\n                    <td> <img class=\\\"rounded-circle\\\" [src]=\\\"item.image\\\" onerror='this.src=\\\"http://via.placeholder.com/50x50\\\"' alt=\\\"img\\\"></td>\\n                    <td class=\\\"text-left\\\">\\n                        <span class=\\\"name\\\">{{item.name}}</span>\\n                    </td>\\n                    <td class=\\\"text-left\\\">\\n                        {{item.phone}}\\n                    </td>\\n                    <td class=\\\"text-left\\\">\\n                        {{item.email}}\\n                    </td>\\n                    <td>\\n                        <a href=\\\"javascript://\\\" class=\\\"icon-block edit-icon\\\"><img src=\\\"assets/img/edit.png\\\" alt=\\\"img\\\"></a>\\n                        <a href=\\\"javascript://\\\" class=\\\"icon-block block-icon\\\"><img src=\\\"assets/img/block.png\\\" alt=\\\"img\\\"></a>\\n                    </td>\\n                    </tr>\\n                </tbody>\\n            </table>\\n        </div> -->\\n      <div class=\\\"listingResults\\\" >\\n      <div class=\\\"row\\\">\\n         <div class=\\\"col-12\\\">\\n            <div class=\\\"cust-tabs-2\\\">\\n              <ul class=\\\"nav nav-tabs\\\">\\n                <li class=\\\"nav-item\\\">\\n                    <a class=\\\"nav-link\\\" [ngClass]=\\\"{'active':parameter.flag==1}\\\" (click)=\\\"changeFlag(1)\\\" >This Week</a>\\n                </li>\\n                <li class=\\\"nav-item\\\">\\n                    <a class=\\\"nav-link\\\" [ngClass]=\\\"{'active':parameter.flag==2}\\\" (click)=\\\"changeFlag(2)\\\" >This Month</a>\\n                </li>\\n                <li class=\\\"nav-item\\\">\\n                    <a class=\\\"nav-link\\\" [ngClass]=\\\"{'active':parameter.flag==3}\\\" (click)=\\\"changeFlag(3)\\\" >Last Month</a>\\n                </li>\\n                <li class=\\\"nav-item\\\">\\n                    <a class=\\\"nav-link\\\" [ngClass]=\\\"{'active':parameter.flag==4}\\\" (click)=\\\"changeFlag(4)\\\" >Lifetime</a>\\n                </li>\\n                <li class=\\\"nav-item\\\">\\n                    <a class=\\\"nav-link\\\" [ngClass]=\\\"{'active':parameter.flag==5}\\\" (click)=\\\"parameter.flag=5\\\" >Custom</a>\\n                </li>\\n              </ul>\\n            </div>\\n         </div>\\n         <div class=\\\"col-12\\\">\\n            <hr style=\\\"margin-top:0;\\\">\\n            <div *ngIf=\\\"parameter.flag == 5\\\" class=\\\"pull-right btn-cont\\\">\\n                From:<input type=\\\"date\\\" [ngModel] =\\\"parameter.min | date:'yyyy-MM-dd'\\\" max=\\\"{{today| date:'yyyy-MM-dd'}}\\\" (ngModelChange)=\\\"parameter.min = $event; parameter.max=''\\\" />\\n                To:<input type=\\\"date\\\" [ngModel] =\\\"parameter.max | date:'yyyy-MM-dd'\\\" min=\\\"{{parameter.min | date:'yyyy-MM-dd'}}\\\" max=\\\"{{today| date:'yyyy-MM-dd'}}\\\" (ngModelChange)=\\\"parameter.max = $event\\\" />\\n                <button class=\\\"btn btn-primary\\\" href=\\\"javascript://\\\" (click)=\\\"getListing()\\\" [disabled]=\\\"\\n                parameter.flag == 5 && (!parameter.min || !parameter.max)\\n                \\\">Go</button>\\n            </div>\\n         </div>\\n      </div>\\n      <div *ngIf=\\\"selectedUser as item\\\" class=\\\"sigle-row-table\\\">\\n            <table class=\\\"table table-striped\\\">\\n            <tbody><tr>\\n                <td> <img class=\\\"rounded-circle\\\" [src]=\\\"item.image\\\" onerror='this.src=\\\"http://via.placeholder.com/50x50\\\"' alt=\\\"img\\\"></td>\\n                <td class=\\\"text-left\\\">\\n                    <span class=\\\"name\\\">{{item.name}}</span>\\n                </td>\\n                <td class=\\\"text-left\\\">\\n                    {{item.phone}}\\n                </td>\\n                <td class=\\\"text-left\\\">\\n                    {{item.email}}\\n                </td>\\n                <td>\\n                    <a (click)=\\\"removeCsrUser()\\\" href=\\\"javascript://\\\" class=\\\"icon-block edit-icon\\\"><img src=\\\"assets/img/remove-icon.png\\\" alt=\\\"remove\\\" title=\\\"remove\\\" /></a>\\n                    <!-- <a href=\\\"javascript://\\\" class=\\\"icon-block edit-icon\\\"><img src=\\\"assets/img/edit.png\\\" alt=\\\"img\\\"></a>\\n                    <a href=\\\"javascript://\\\" class=\\\"icon-block block-icon\\\"><img src=\\\"assets/img/block.png\\\" alt=\\\"img\\\"></a> -->\\n                </td>\\n                </tr>\\n            </tbody>\\n            </table>\\n      </div>\\n      <div class=\\\"spacer30\\\"></div>\\n      <div class=\\\"row\\\">\\n\\n            <div class=\\\"col-lg-8 col-md-12 col-sm-12 col-12\\\" >\\n            <div class=\\\"info-box all-leads marginT0\\\">\\n                <div class=\\\"one-row\\\" [ngClass]=\\\"{'active':parameter.count_flag == '1'}\\\" (click)=\\\"changeCountFlag(1)\\\">\\n                    <div class=\\\"o-block\\\">\\n                        <h5>All Leads</h5>\\n                        <small>Total</small>\\n                    </div>\\n                    <div class=\\\"o-block\\\">\\n                        <a class=\\\"view-all\\\" href=\\\"javascript://\\\">View All</a>\\n                        <h4>{{dash.all_count}}</h4>\\n                    </div>\\n                </div>\\n            \\n                </div>\\n\\n                        <div class=\\\"info-box all-leads\\\">\\n                        <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-6 col-sm-6 col-12\\\" [ngClass]=\\\"{'active':parameter.count_flag == '2'}\\\" (click)=\\\"changeCountFlag(2)\\\" >\\n                <div class=\\\"one-row \\\">\\n                    <div class=\\\"o-block\\\">\\n                        <h5>Leads</h5>\\n                        <small>Open</small>\\n                    </div>\\n                    <div class=\\\"o-block\\\">\\n                        <a class=\\\"view-all\\\" href=\\\"javascript://\\\">View All</a>\\n                        <h4>{{dash.open_count}}</h4>\\n                    </div>\\n                </div>\\n                </div>\\n    \\n                    <div class=\\\"col-md-6 col-sm-6 col-12\\\" [ngClass]=\\\"{'active':parameter.count_flag == '3'}\\\" (click)=\\\"changeCountFlag(3)\\\">\\n                <div class=\\\"one-row\\\">\\n                    <div class=\\\"o-block\\\">\\n                        <h5>Leads</h5>\\n                        <small>Closed</small>\\n                    </div>\\n                    <div class=\\\"o-block\\\">\\n                        <a class=\\\"view-all\\\" href=\\\"javascript://\\\">View All</a>\\n                        <h4>{{dash.close_count}}</h4>\\n                    </div>\\n                </div>\\n                </div>\\n                </div>\\n                </div>\\n            </div>\\n            <div class=\\\"col-lg-4 col-md-12 col-sm-12 col-12\\\">\\n                <div class=\\\"chat-msg all-leads marginT0\\\" style=\\\"padding:0px\\\">\\n                    <div class=\\\"padding20\\\" *ngIf=\\\"dash.lead_total == 0\\\">No records found</div>\\n                    <ngx-charts-pie-chart [results]=\\\"chartView\\\"></ngx-charts-pie-chart>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"spacer15\\\"></div>\\n\\n      <div class=\\\"row\\\">\\n         <div class=\\\"col-6\\\">\\n            <div class=\\\"title-group\\\">\\n               <h5>Leads \\n                <span *ngIf=\\\"parameter.count_flag == 1\\\">(Total)</span>\\n                <span *ngIf=\\\"parameter.count_flag == 2\\\">(Open)</span>\\n                <span *ngIf=\\\"parameter.count_flag == 3\\\">(Closed)</span>\\n               </h5>\\n               <p>\\n                   <!-- Showing {{parameter.page}} out of {{parameter.total_count}} -->\\n                </p>\\n            </div>\\n         </div>\\n         <div class=\\\"col-6\\\">\\n            <div class=\\\"add-new text-right\\\">\\n                <a class=\\\"btn\\\" (click)=\\\"bulkAssign()\\\" href=\\\"javascript://\\\">Bulk Re-assign</a>\\n            </div>\\n        </div>\\n      </div>\\n      <div class=\\\"white-bg\\\">\\n         <div class=\\\"tabel-section\\\">\\n            <div class=\\\"table-responsive\\\">\\n                    <table class=\\\"table table-striped border-0\\\">\\n                            <tbody><tr>\\n                            <th style=\\\"width:6%\\\">\\n                                <div class=\\\"table-search\\\">\\n                                <a (click)=\\\"selectAll()\\\"><label>All</label></a>\\n                                </div>\\n                            </th>\\n                            <th style=\\\"width:6%; border-top:0\\\">\\n                                <div class=\\\"table-search\\\">\\n                                    <label>Image</label>\\n                                </div>\\n                            </th>\\n                                <th style=\\\"width:15%; border-top:0\\\">\\n                                    <div class=\\\"table-search\\\">\\n                                    <label>Name</label>\\n                                    <div class=\\\"searh-3\\\">\\n                                        <input type=\\\"text\\\" [(ngModel)]=\\\"parameter.name\\\" (keyup.enter)=\\\"changeFilter('name',$event.target.value)\\\" name=\\\"\\\">\\n                                        <button *ngIf=\\\"parameter.name\\\" (click)=\\\"changeFilter('name', parameter.name)\\\"><i class=\\\"fa fa-search\\\"></i></button>\\n                                    </div>\\n                                    </div>\\n                                </th>\\n                                <th style=\\\"width:20%; text-align:left; border-top:0\\\">\\n                                    <div class=\\\"table-search\\\">\\n                                    <label>Contact Number</label>\\n                                    <div class=\\\"searh-3\\\">\\n                                        <input type=\\\"text\\\" [(ngModel)]=\\\"parameter.phone\\\" (keyup.enter)=\\\"changeFilter('phone',$event.target.value)\\\" name=\\\"\\\">\\n                                        <button *ngIf=\\\"parameter.phone\\\" (click)=\\\"changeFilter('phone', parameter.phone)\\\"><i class=\\\"fa fa-search\\\"></i></button>\\n                                    </div>\\n                                    </div>\\n                                </th>\\n                                <th style=\\\"width:20%; border-top:0\\\">\\n                                    <div class=\\\"table-search\\\">\\n                                    <label>Email Address</label>\\n                                    <div class=\\\"searh-3\\\">\\n                                        <input type=\\\"text\\\" [(ngModel)]=\\\"parameter.email\\\" (keyup.enter)=\\\"changeFilter('email',$event.target.value)\\\" name=\\\"\\\">\\n                                        <button *ngIf=\\\"parameter.email\\\" (click)=\\\"changeFilter('email', parameter.email)\\\"><i class=\\\"fa fa-search\\\"></i></button>\\n                                    </div>\\n                                    </div>\\n                                </th>\\n                                <th style=\\\"width:20%; border-top:0\\\">\\n                                    <div class=\\\"table-search\\\">\\n                                    <label>Assignee</label>\\n                                    </div>\\n                                </th>\\n                                <th style=\\\"width:18%; border-top:0\\\">\\n                                    &nbsp;  \\n                                </th>\\n                                <!-- <th style=\\\"width:9%; border-top:0\\\">\\n                                    &nbsp;\\n                                </th> -->\\n                            </tr>\\n                            <tr class=\\\"cursor-pointer\\\" title=\\\"Click to view details\\\" *ngFor=\\\"let item of items| paginate: { itemsPerPage: parameter.itemsPerPage, currentPage: parameter.page, totalItems: parameter.total }; let i=index\\\"\\n                            >\\n                                <td (click)=\\\"$event.stopPropagation()\\\">\\n                                    <label class=\\\"cust-check-bx\\\" >\\n                                    <input type=\\\"checkbox\\\" [(ngModel)]=\\\"item.selected\\\" name=\\\"document\\\">\\n                                    <span class=\\\"checkmark\\\"></span>\\n                                    </label>\\n                                    <!-- <i class=\\\"fa\\\" [ngClass]=\\\"item.selected?'fa-check-square-o':'fa-square-o'\\\" (click)=\\\"item.selected = !item.selected\\\" aria-hidden=\\\"true\\\"></i> -->\\n                                </td>\\n                                <td routerLink=\\\"/dashboard/notary/notary-leads/{{item.id}}\\\">\\n                                    <img class=\\\"rounded-circle\\\" [src]=\\\"item.image\\\" onerror=\\\"this.src='assets/img/default_img.png'\\\" alt=\\\"img\\\">\\n                                </td>\\n                                <td class=\\\"text-left\\\" routerLink=\\\"/dashboard/notary/notary-leads/{{item.id}}\\\">\\n                                    <span routerLink=\\\"/dashboard/leads/csr-closers/{{item.id}}\\\" class=\\\"name\\\">{{item.name}}</span>\\n                                </td>\\n                                <td class=\\\"text-left\\\" routerLink=\\\"/dashboard/notary/notary-leads/{{item.id}}\\\">\\n                                    {{item.dial_code ? item.dial_code : constant.dial_code}}-{{item.phone}}<br>\\n                                </td>\\n                                <td class=\\\"text-left\\\" routerLink=\\\"/dashboard/notary/notary-leads/{{item.id}}\\\">\\n                                    {{item.email}}\\n                                </td>\\n                                <td class=\\\"text-left\\\" title=\\\"Notary\\\" routerLink=\\\"/dashboard/notary/notary-leads/{{item.id}}\\\">\\n                                    {{item?.selected_properties[0]?.selected_noatary[0]?.noatary?.name}}\\n                                </td>\\n                                <td (click)=\\\"openModal($event, item, i)\\\">\\n                                <a style=\\\"display:none;\\\" #modalOpen class=\\\"green-color fontW500\\\" data-toggle=\\\"modal\\\" data-target=\\\"#set-availability\\\" href=\\\"javascript://\\\">Change Availability</a>\\n                                <a class=\\\"green-color fontW500\\\" href=\\\"javascript://\\\">Change Availability</a>\\n                                </td>\\n                                <!-- <td>\\n                                    <a href=\\\"javascript://\\\" routerLink=\\\"/dashboard/notary/notary-leads/{{item.id}}\\\" class=\\\"icon-block edit-icon\\\"><img src=\\\"assets/img/viewfull.png\\\" alt=\\\"img\\\"></a> \\n                                </td> -->\\n                            </tr>\\n                        </tbody></table>\\n                    <div class=\\\"padding20 center\\\" *ngIf=\\\"parameter.noResultFound\\\">\\n                        <img src=\\\"./../../../assets/img/404-error.png\\\">\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"btn-cont text-right marginT15\\\" *ngIf=\\\"parameter.total\\\">\\n        <pagination-controls class=\\\"my-pagination\\\" (pageChange)=\\\"getPage($event)\\\"></pagination-controls>\\n    </div>\\n</div>\\n    \\n\\n    <!-- add inhouse user modal -->\\n<div class=\\\"modal animated\\\" id=\\\"set-availability\\\">\\n    <div class=\\\"modal-dialog fadeIndown\\\">\\n        <div class=\\\"modal-content\\\">\\n            <div class=\\\"modal-header modal-header-new\\\">\\n                <h4 class=\\\"modal-title\\\">View Availability</h4>\\n                <button type=\\\"button\\\" style=\\\"display: none;\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" #modalClose>&times;</button>\\n                <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"closeModal()\\\">&times;</button>\\n            </div>\\n    \\n            <form class=\\\"form-horizontal form-model0P\\\" role=\\\"form\\\" ngNativeValidate #addForm=\\\"ngForm\\\" (ngSubmit)=\\\"add()\\\">\\n            <div class=\\\"modal-body modal-body-new\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-5\\\">\\n                        <div class=\\\"form-group-2\\\">\\n                            <label>Date</label>\\n                            <div class=\\\"form-group\\\">\\n                            <input type=\\\"date\\\" min=\\\"{{today|date:'yyyy-MM-dd'}}\\\" max='9999-12-31' [(ngModel)]=\\\"date\\\" class=\\\"form-control\\\" name=\\\"date\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-5\\\">\\n                        <div class=\\\"form-group-2\\\">\\n                            <label>Time</label>\\n                            <div class=\\\"form-group\\\">\\n                            <input type=\\\"time\\\" [(ngModel)]=\\\"time\\\" class=\\\"form-control\\\" name=\\\"time\\\">\\n                            </div>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"col-2\\\">\\n                        <div class=\\\"form-group-2\\\">\\n                            <button type=\\\"button\\\" class=\\\"btn btn-primary green-bg\\\" (click)=\\\"addDateTime()\\\">+</button>\\n                        </div>\\n                    </div>\\n                </div>\\n                <div class=\\\"row\\\" *ngFor=\\\"let d of data; let j=index\\\">\\n                    <div class=\\\"col-8\\\">\\n                        <label class=\\\"notary-ava\\\">{{d.date_time | moment}}</label>\\n                    </div>\\n                    <div class=\\\"col-2\\\">\\n                        <a class=\\\"green-color fontW500\\\" (click)=\\\"removeNoataryAvailability(d.id, j)\\\" href=\\\"javascript://\\\">\\n                            Remove\\n                        </a>\\n                        <!-- <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"removeNoataryAvailability(d.id, j)\\\">\\n                            Remove\\n                        </button> -->\\n                    </div>\\n                </div>\\n                <div class=\\\"row\\\" *ngFor=\\\"let a of availability.date_time_array; let i=index\\\">\\n                    <div class=\\\"col-8\\\">\\n                        <label class=\\\"notary-ava\\\">{{a.date_time|date:'h:mm a'|lowercase}}, {{a.date_time|date: 'MMM d y'}}</label>\\n                    </div>\\n                    <div class=\\\"col-2\\\">\\n                        <a class=\\\"green-color fontW500\\\" (click)=\\\"removeNoatary(i)\\\" href=\\\"javascript://\\\">\\n                            Remove\\n                        </a>\\n                        <!-- <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"removeNoatary(i)\\\">*</button> -->\\n                    </div>\\n                </div>\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-12\\\">\\n                        <div class=\\\"btn-cont text-right\\\">\\n                            <button type=\\\"submit\\\" class=\\\"btn btn-primary\\\">Save</button>\\n                        </div>\\n                    </div>\\n                </div>\\n            </div>\\n            </form>\\n    \\n        </div>\\n    </div>\\n</div>\\n\\n\\n<!-- Assignment model -->\\n<a data-toggle=\\\"modal\\\" data-target=\\\"#assign-model\\\" #openAssignModel></a>\\n<div class=\\\"modal\\\" id=\\\"assign-model\\\">\\n        <div class=\\\"modal-dialog \\\">\\n            <div class=\\\"modal-content notary-avail\\\">\\n                <div class=\\\"modal-header popup-header\\\">\\n                <h4 class=\\\"modal-title\\\">Re Assign to</h4>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" #closeAssignModel>&times;</button>\\n                </div>\\n                <div class=\\\"modal-body\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-8\\\">\\n                            <input style=\\\"max-width:200px\\\" list=\\\"amenities\\\" [(ngModel)]=\\\"assign.keyword\\\" (input)=\\\"getAssignListing()\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"keyword\\\" placeholder=\\\"Search\\\">\\n                        </div>\\n                        <div class=\\\"col-md-4\\\">\\n                            <a class=\\\"btn btn-primary pull-right\\\" (click)=\\\"assignNow()\\\">Assign</a>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"spacer40\\\"></div>\\n                    <table class=\\\"table\\\">\\n                        <tr *ngFor=\\\"let item of assign.items\\\">\\n                            <td>\\n                                <div class=\\\"n-avail-profile\\\">\\n                                <img [src]=\\\"item.image\\\" onerror='src=\\\"assets/img/house.png\\\"' alt=\\\"img\\\">\\n                                <div class=\\\"n-avail-info\\\">\\n                                    <p class=\\\"p12\\\">{{item.name}}</p>\\n                                    <p class=\\\"p10\\\">Phone : {{item.dial_code ? item.dial_code : constant.dial_code}}-{{item.phone}}</p>\\n                                </div>\\n                                </div>\\n                            </td>\\n                            <td>\\n                                <label class=\\\"cust-check-bx float-right\\\">\\n                                    <input type=\\\"radio\\\" name=\\\"notary_id\\\" (click)=\\\"assignItem = item\\\">\\n                                    <span class=\\\"checkmark\\\"></span>\\n                                </label>\\n                            </td>\\n                        </tr>\\n                    </table>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/cbl1002/Documents/realestate-admin/src/app/layout/notary/notary-leads/notary-leads.component.html\n// module id = ../../../../../src/app/layout/notary/notary-leads/notary-leads.component.html\n// module chunks = 7","import { Component, OnInit, ElementRef, ViewChild } from '@angular/core';\nimport { AdminService } from '../../../services/admin.service';\nimport { IProperty } from '../../../common/property';\nimport { Constant } from './../../../common/constants';\nimport { AddNotaryAvailabilty, NotaryLeads } from '../../../models/leads.model';\nimport { ChatTimePipe } from '../../../pipes/chat-time.pipe';\ndeclare let swal: any;\nimport {} from './../../../services/http-interceptor';\nimport { ActivatedRoute } from '@angular/router';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-notary-leads',\n  templateUrl: './notary-leads.component.html',\n  styleUrls: ['./notary-leads.component.css'],\n  providers: [AddNotaryAvailabilty, NotaryLeads]\n})\nexport class NotaryLeadsComponent implements OnInit {\n\n  @ViewChild('openAssignModel') openAssignModel: ElementRef;\n  @ViewChild('closeAssignModel') closeAssignModel: ElementRef;\n  @ViewChild('modalOpen') modalOpen: ElementRef;\n  @ViewChild('modalClose') modalClose: ElementRef;\n\n  public parameter: IProperty = {};\n  public location: IProperty = {};\n  public assign: IProperty = {};\n  assignItem: any;\n\n  items = [];\n  data = [];\n  date: any;\n  time: any;\n  today: any;\n\n  users: any = [];\n  selectedUser: any;\n  initSelection = false;\n\n  dash: any= {\n    all_count: 0,\n    open_count: 0,\n    close_count: 0\n  };\n\n\n  chartView: any= [];\n  constructor(\n    public admin: AdminService,\n    private constant: Constant,\n    public availability: AddNotaryAvailabilty,\n    public route: ActivatedRoute\n  ) { }\n\n  ngOnInit() {\n    this.today = new Date();\n    this.parameter.keyword = '';\n    this.parameter.itemsPerPage = this.constant.itemsPerPage;\n    this.parameter.page = this.constant.p;\n    this.parameter.flag = 2;\n    this.parameter.total = 0;\n    this.parameter.count_flag = 1;\n    this.route.params.subscribe( params => {\n      this.parameter.assignee_id = params.id;\n    });\n    this.getCountries();\n    this.getListing();\n    this.getCsrSellerDash();\n    Object.assign(this, this.chartView);\n  }\n\n  getCountries() {\n    this.admin.postDataApi('getCountryLocality', {}).subscribe(r => {\n      this.location.countries = r['data'];\n    });\n  }\n\n  onCountryChange(id) {\n    this.location.states = []; this.parameter.state_id = '0';\n    this.location.cities = []; this.parameter.city_id = '0';\n    this.location.localities = []; this.parameter.locality_id = '0';\n    if (!id || id === '0') {\n      this.parameter.state_id = '0';\n      return false;\n    }\n    this.parameter.country_id = id;\n    const selectedCountry = this.location.countries.filter(x => x.id.toString() === id);\n    this.location.states = selectedCountry[0].states;\n\n  }\n\n  onStateChange(id) {\n    this.location.cities = []; this.parameter.city_id = '0';\n    this.location.localities = []; this.parameter.locality_id = '0';\n    if (!id || id === '0') {\n      this.parameter.city_id = '0';\n      return false;\n    }\n    this.parameter.state_id = id;\n    const selectedState = this.location.states.filter(x => x.id.toString() === id);\n    this.location.cities = selectedState[0].cities;\n  }\n\n  onCityChange(id) {\n    this.location.localities = []; this.parameter.locality_id = '0';\n    if (!id || id === '0') {\n      this.parameter.locality_id = '0';\n      return false;\n    }\n    this.parameter.city_id = id;\n    const selectedCountry = this.location.cities.filter(x => x.id.toString() === id);\n    this.location.localities = selectedCountry[0].localities;\n  }\n\n  onLocalityChange(id) {\n    if (!id || id === '0') {\n      return false;\n    }\n    this.parameter.locality_id = id;\n    this.getCsrListing();\n  }\n\n  changeFlag(flag) {\n    this.parameter.flag = flag;\n    this.parameter.count_flag = 1;\n    this.getListing();\n    this.getCsrSellerDash();\n  }\n\n  changeFilter(key, value) {\n    this.parameter[key] = value;\n    this.getListing();\n  }\n\n  changeCountFlag(flag) {\n    this.parameter.count_flag = flag;\n    this.getListing();\n  }\n\n  getCsrListing() {\n    this.initSelection = true;\n    this.users = [];\n    const input = new FormData();\n    if (this.parameter.keyword) {\n      input.append('keyword', this.parameter.keyword);\n    }\n    if (this.parameter.country_id && this.parameter.country_id !== '-1') {\n      input.append('countries', JSON.stringify([this.parameter.country_id]));\n    }\n\n    if (this.parameter.state_id && this.parameter.state_id !== '-1') {\n      input.append('states', JSON.stringify([this.parameter.state_id]));\n    }\n\n    if (this.parameter.city_id && this.parameter.city_id !== '-1') {\n      input.append('cities', JSON.stringify([this.parameter.city_id]));\n    }\n\n    if (this.parameter.locality_id && this.parameter.locality_id !== '-1') {\n      input.append('localities', JSON.stringify([this.parameter.locality_id]));\n    }\n    this.admin.postDataApi('getNoataries', input).subscribe(\n      success => {\n        this.users = success.data;\n      });\n  }\n\n  closeCsrListing() {\n    setTimeout(() => {\n      this.users = [];\n    }, 200);\n  }\n\n  selectCsrUser(user) {\n    this.selectedUser = user;\n    this.users = [];\n    this.parameter.keyword = '';\n    this.initSelection = false;\n    this.getListing();\n    this.getCsrSellerDash();\n  }\n\n  removeCsrUser() {\n    this.selectedUser = '';\n    this.parameter.keyword = '';\n    this.parameter.itemsPerPage = this.constant.itemsPerPage;\n    this.parameter.page = this.constant.p;\n    // this.parameter.flag = 2;\n    this.parameter.total = 0;\n    this.parameter.count_flag = 1;\n    this.getListing();\n    this.getCsrSellerDash();\n  }\n\n  getCsrSellerDash() {\n    const input = new FormData();\n    if (this.selectedUser) {\n      input.append('assignee_id', this.selectedUser.id);\n    } else if (this.parameter.assignee_id) {\n      input.append('assignee_id', this.parameter.assignee_id);\n    }\n    if (this.parameter.flag) {\n      input.append('flag', this.parameter.flag.toString());\n    }\n\n    this.admin.postDataApi('leads/noatary-dash-count', input).subscribe(r => {\n      this.dash = r.data;\n      this.chartView = [\n        // {\n        //   \"name\": \"Total\",\n        //   \"value\": parseInt(this.dash.all_count,10)\n        // },\n        {\n          'name': 'Open',\n          'value': parseInt(this.dash.open_count, 10)\n        },\n        {\n          'name': 'Closed',\n          'value': parseInt(this.dash.close_count, 10)\n        }\n      ];\n    });\n  }\n\n  getListing() {\n    this.items = [];\n    this.parameter.noResultFound = false;\n    const input: any = JSON.parse(JSON.stringify(this.parameter));\n    if (this.selectedUser) {\n      input.assignee_id = this.selectedUser.id;\n    } else if (this.parameter.assignee_id) {\n      input.assignee_id = this.parameter.assignee_id;\n    }\n    this.parameter.loading = true;\n    this.admin.postDataApi('leads/noataries', input).subscribe(\n    success => {\n      this.parameter.loading = false;\n      this.items = success.data;\n      if (this.items.length <= 0) { this.parameter.noResultFound = true; }\n      this.parameter.total = success.total;\n    }, error => {\n      this.parameter.loading = false;\n    });\n  }\n\n\n  getPage(page) {\n    this.parameter.page = page;\n    this.getListing();\n  }\n\n  sort_by(sort_by_flag) {\n    if (this.parameter.sort_by_flag !== sort_by_flag) {\n      this.parameter.sort_by_flag = sort_by_flag;\n      this.parameter.sort_by_order = 0;\n    }else {\n      this.parameter.sort_by_order = this.parameter.sort_by_order ? 0 : 1;\n    }\n    this.getListing();\n  }\n\n  addDateTime () {\n    if (this.date && this.time) {\n      const newdate = this.date + ' ' + this.time + ':00';\n      // const d = new ChatTimePipe().transform(newdate, 'YYYY-MM-DD HH:MM:SS', 3);\n      // this.availability.date_time_array.push({date_time: d});\n      this.availability.date_time_array.push({date_time: newdate});\n      this.date = ''; this.time = '';\n    }\n  }\n\n  openModal ($event, item, index) {\n    console.log($event);\n    // $event.stopPropagation();\n    // this.availability.date_time_array = item.selected_properties[0].selected_noatary[0].noatary_availability;\n    this.availability.property_id = item.selected_properties[0].property_id;\n    this.availability.lead_id = item.id;\n    this.parameter.index = index;\n    this.data = item.selected_properties[0].selected_noatary[0].noatary_availability;\n    this.modalOpen.nativeElement.click();\n  }\n\n  closeModal() {\n    this.modalClose.nativeElement.click();\n    this.availability = new AddNotaryAvailabilty();\n  }\n\n  add() {\n    this.availability.date_time_array.forEach(element => {\n      const d: any = new Date(element.date_time);\n      const f = moment(d).utc().format('YYYY-MM-DD HH:mm:ss');\n      this.availability.date_time.push(f);\n    });\n    this.data.forEach(element1 => {\n      this.availability.date_time.push(element1.date_time);\n    });\n    this.parameter.loading = true;\n    this.admin.postDataApi('leads/addNoataryAvailability', this.availability)\n      .subscribe(\n        success => {\n          this.items[this.parameter.index] = success.data;\n          this.parameter.loading = false;\n          this.closeModal();\n          swal('Success', 'Availability added successfully.', 'success');\n          // this.items = success.data;\n          // this.parameter.total = success.total_count;\n        }, error => {\n          this.parameter.loading = false;\n        }\n      );\n  }\n\n  removeNoataryAvailability(id, j) {\n    this.admin.postDataApi('leads/removeNoataryAvailability', {id: id})\n      .subscribe(\n        success => {\n          this.data.splice(j, 1);\n          // this.items = success.data;\n          // this.parameter.total = success.total_count;\n        }\n      );\n  }\n\n  removeNoatary(i) {\n    this.availability.date_time_array.splice(i, 1);\n  }\n\n\n  selectAll() {\n    this.items.forEach(item => {\n      item.selected = true;\n    });\n  }\n\n  bulkAssign() {\n    // this.assign.keyword = '';\n    this.openAssignModel.nativeElement.click();\n    // this.admin.postDataApi('getCsrBuyers', {}).subscribe(\n    //   success => {\n    //     this.assign.items = success.data;\n    //   });\n  }\n\n  getAssignListing() {\n    // this.assign.items = [];\n    const input = {\n      keyword: this.assign.keyword\n    };\n    this.admin.postDataApi('getNoataries', input).subscribe(\n    success => {\n      this.assign.items = success.data;\n    });\n  }\n\n  assignNow() {\n    const leads_ids = this.items.filter(x => x.selected).map(y => y.id);\n    const input = {\n      noatary_id: this.assignItem.id,\n      leads: leads_ids\n    };\n    this.parameter.loading = true;\n    this.admin.postDataApi('leads/bulkAssignNoatary', input).subscribe(r => {\n      this.parameter.loading = false;\n      swal('Success', 'Assigned successfully', 'success');\n      this.closeAssignModel.nativeElement.click();\n      this.getListing();\n    },\n    error => {\n      this.parameter.loading = false;\n      this.closeAssignModel.nativeElement.click();\n      swal('Error', error.error.message, 'error');\n    });\n\n  }\n\n\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/cbl1002/Documents/realestate-admin/src/app/layout/notary/notary-leads/notary-leads.component.ts","exports = module.exports = require(\"../../../../node_modules/css-loader/lib/css-base.js\")(false);\n// imports\n\n\n// module\nexports.push([module.id, \".add-img{\\n    background-size: cover;background-repeat: no-repeat;\\n}\", \"\"]);\n\n// exports\n\n\n/*** EXPORTS FROM exports-loader ***/\nmodule.exports = module.exports.toString();\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/cbl1002/Documents/realestate-admin/src/app/layout/notary/notary.component.css\n// module id = ../../../../../src/app/layout/notary/notary.component.css\n// module chunks = 7","module.exports = \"<ngx-loading [show]=\\\"parameter.loading\\\"></ngx-loading>\\n<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"title-group\\\">\\n            <h5>Notaries</h5>\\n            <p>Showing {{parameter.items?.length}} out of {{parameter.total}}</p>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-6\\\">\\n        <div class=\\\"btn-cont text-right\\\">\\n            <a style=\\\"display: none;\\\" class=\\\"btn btn-primary\\\" href=\\\"javascript://\\\" data-toggle=\\\"modal\\\" data-target=\\\"#add\\\" #modalOpen>Add New</a>\\n            <a *ngIf=\\\"admin?.admin_acl['Noataries Management']?.can_create==1\\\" (click)=\\\"openModal()\\\" class=\\\"btn btn-primary\\\" href=\\\"javascript://\\\">Add New</a>\\n        </div>\\n      </div>\\n  </div>\\n\\n  <div class=\\\"white-bg\\\">\\n      <div class=\\\"tabel-section\\\">\\n        <div class=\\\"table-responsive\\\">\\n          <table class=\\\"table table-striped table-align-left\\\">\\n            <tr>\\n              <th style=\\\"width:6%\\\">&nbsp;</th>\\n              <th style=\\\"width:20%\\\">\\n                <div class=\\\"table-search\\\">\\n                    <label>Name</label>\\n                    <div class=\\\"searh-3\\\">\\n                      <input type=\\\"text\\\" [(ngModel)]=\\\"parameter.name\\\" (keyup.enter)=\\\"getNoatariesListing(parameter.p, parameter.name, parameter.phone, parameter.email)\\\" name=\\\"\\\">\\n                      <button *ngIf=\\\"parameter.name\\\" (click)=\\\"getNoatariesListing(parameter.p, parameter.name, parameter.phone, parameter.email)\\\"><i class=\\\"fa fa-search\\\"></i></button>\\n                    </div>\\n                </div>\\n              </th>\\n              <th style=\\\"width:20%; text-align:left;\\\">\\n                <div class=\\\"table-search\\\">\\n                    <label>Contact Number</label>\\n                    <div class=\\\"searh-3\\\">\\n                      <input type=\\\"text\\\" [(ngModel)]=\\\"parameter.phone\\\" (keyup.enter)=\\\"getNoatariesListing(parameter.p, parameter.name, parameter.phone, parameter.email)\\\" name=\\\"\\\">\\n                      <button *ngIf=\\\"parameter.phone\\\" (click)=\\\"getNoatariesListing(parameter.p, parameter.name, parameter.phone, parameter.email)\\\"><i class=\\\"fa fa-search\\\"></i></button>\\n                    </div>\\n                </div>\\n              </th>\\n              <th style=\\\"width:20%\\\">\\n                <div class=\\\"table-search\\\">\\n                    <label>Email Address</label>\\n                    <div class=\\\"searh-3\\\">\\n                      <input type=\\\"text\\\" [(ngModel)]=\\\"parameter.email\\\" (keyup.enter)=\\\"getNoatariesListing(parameter.p, parameter.name, parameter.phone, parameter.email)\\\" name=\\\"\\\">\\n                      <button *ngIf=\\\"parameter.email\\\" (click)=\\\"getNoatariesListing(parameter.p, parameter.name, parameter.phone, parameter.email)\\\"><i class=\\\"fa fa-search\\\"></i></button>\\n                    </div>\\n                </div>\\n              </th>\\n              <th style=\\\"width:20%; vertical-align: top;\\\">\\n                <div class=\\\"table-search\\\">\\n                    <label>Address</label>\\n                </div>\\n              </th>\\n              <th style=\\\"width:20%\\\">\\n                &nbsp;\\n              </th>\\n            </tr>\\n      \\n            <tr *ngFor=\\\"let item of parameter.items| paginate: { itemsPerPage: parameter.itemsPerPage, currentPage: parameter.page, totalItems: parameter.total }; let i=index\\\">\\n              <td> \\n                  <img [src]=\\\"item.image\\\" class=\\\"rounded-circle\\\" onerror='src=\\\"assets/img/default_img.png\\\"' alt=\\\"img\\\">\\n              </td>\\n              <td class=\\\"text-left\\\">\\n                <span class=\\\"name\\\">\\n                  <a data-toggle=\\\"popover\\\" data-placement=\\\"top\\\" title=\\\"{{item.name}}\\\">{{item.name}}</a>\\n                </span>\\n              </td>\\n              <td class=\\\"text-left\\\" *ngIf=\\\"item.phone\\\">{{item.dial_code ? item.dial_code : constant.dial_code}}-{{item.phone}}</td>\\n              <td class=\\\"text-left\\\" *ngIf=\\\"!item.phone\\\">NA</td>\\n              <td class=\\\"text-left\\\">{{item.email}}</td>\\n              <td class=\\\"text-left\\\">{{item.address?item.address:'NA'}}</td>\\n              <td>\\n                <a *ngIf=\\\"admin?.admin_acl['Notary Lead Management']?.can_read==1\\\" title=\\\"View Leads\\\" href=\\\"javascript://\\\"\\n                  routerLink=\\\"/dashboard/notary/view-notary-leads/{{item.id}}\\\" class=\\\"icon-block edit-icon\\\">\\n                  <img src=\\\"assets/img/ic_leads.png\\\" alt=\\\"img\\\">\\n                </a>\\n                <button title=\\\"Edit Details\\\" [disabled]=\\\"admin?.admin_acl['Noataries Management']?.can_update==0\\\" (click)=\\\"editUser(item, i)\\\" class=\\\"action-icon\\\"><img src=\\\"./../../../../assets/img/edit.png\\\" alt=\\\"img\\\"></button>\\n                <button [disabled]=\\\"admin?.admin_acl['Noataries Management']?.can_delete==0\\\"\\n                  (click)=\\\"blockUnblockPopup(i, item.id, item.is_blocked==1?0:1)\\\" \\n                  title=\\\"{{item.is_blocked==1?'Unblock Notary':'Block Notary'}}\\\" [ngClass]=\\\"{'unblock-bg':item.is_blocked==1}\\\"\\n                  class=\\\"action-icon\\\"><img src=\\\"assets/img/block.png\\\" alt=\\\"img\\\">\\n                </button>\\n\\n              </td>\\n            </tr>\\n\\n          </table>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"center\\\" *ngIf=\\\"parameter.total == 0\\\">\\n        <img src=\\\"./../../../assets/img/404-error.png\\\">\\n      </div>\\n  </div>\\n  \\n  <div class=\\\"btn-cont text-right marginT15\\\" *ngIf=\\\"parameter.total\\\">\\n    <pagination-controls class=\\\"my-pagination\\\" (pageChange)=\\\"getPage($event)\\\"></pagination-controls>\\n  </div>\\n  \\n</div>\\n\\n\\n<!-- add inhouse user modal -->\\n<div class=\\\"modal animated\\\" id=\\\"add\\\">\\n  <div class=\\\"modal-dialog fadeIndown\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n          <button style=\\\"display: none;\\\" type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" #modalClose>&times;</button>\\n          <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"closeModal(); addForm.reset()\\\">&times;</button>\\n      </div>\\n\\n      <form class=\\\"form-horizontal form-model0P\\\" role=\\\"form\\\" ngNativeValidate #addForm=\\\"ngForm\\\" (ngSubmit)=\\\"addNewUser(addForm)\\\">\\n        <div class=\\\"modal-body\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-6\\\">\\n              <div class=\\\"add-img\\\" style=\\\"display:flex;\\\">\\n                <img *ngIf=\\\"model.image\\\" [src]=\\\"model.image\\\" style=\\\"object-fit: cover; width: 100%;\\\">\\n                <label *ngIf=\\\"model.image\\\">\\n                  <input accept=\\\"image/*\\\" name=\\\"image\\\" class=\\\"image\\\" (change)=\\\"changeListner($event)\\\" type=\\\"file\\\">\\n                </label>\\n                <label *ngIf=\\\"!model.image\\\">+ Add Image</label>\\n                <input *ngIf=\\\"!model.image\\\" accept=\\\"image/*\\\" name=\\\"image\\\" class=\\\"image\\\" (change)=\\\"changeListner($event)\\\" type=\\\"file\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n              <div class=\\\"btn-cont text-right\\\">\\n                  <button *ngIf=\\\"!model.id\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">ADD</button>\\n                  <button *ngIf=\\\"model.id\\\" type=\\\"submit\\\" [disabled]=\\\"!addForm.valid\\\" class=\\\"btn btn-primary\\\">UPDATE</button>\\n              </div>\\n            </div>\\n            <div class=\\\"col-12\\\">\\n              <div class=\\\"spacer40\\\"></div>\\n            </div>\\n            <div class=\\\"col-12\\\">\\n              <div class=\\\"form-group-2\\\">\\n                  <label>Name</label>\\n                  <div class=\\\"form-group\\\">\\n                  <input autocomplete=\\\"off\\\" required type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"model.name\\\" name=\\\"name\\\">\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-12\\\">\\n              <div class=\\\"form-group-2\\\">\\n                  <label>Contact number</label>\\n                  <div class=\\\"form-group\\\">\\n                  <input minlength=\\\"6\\\" maxlength=\\\"16\\\" autocomplete=\\\"off\\\" type=\\\"text\\\" [pattern]=\\\"constant.phonePattern\\\" class=\\\"form-control\\\" id=\\\"phone\\\" required minlength=\\\"1\\\" [(ngModel)]=\\\"model.phone\\\" name=\\\"phone\\\"\\n                      ng2TelInput [ng2TelInputOptions]=\\\"initialCountry\\\" (countryChange)=\\\"onCountryChange($event)\\\" />\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-12\\\">\\n              <div class=\\\"form-group-2\\\">\\n                  <label>Email ID</label>\\n                  <div class=\\\"form-group\\\">\\n                  <input autocomplete=\\\"off\\\" required [pattern]=\\\"constant.emailPattern\\\" type=\\\"email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"model.email\\\" name=\\\"email\\\">\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-12\\\">\\n              <div class=\\\"form-group-2\\\">\\n                  <label>Address</label>\\n                  <div class=\\\"form-group\\\">\\n                  <input autocomplete=\\\"off\\\" required type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"model.address\\\" name=\\\"address\\\">\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\\n<!-- <router-outlet></router-outlet> -->\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// /home/cbl1002/Documents/realestate-admin/src/app/layout/notary/notary.component.html\n// module id = ../../../../../src/app/layout/notary/notary.component.html\n// module chunks = 7","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { AdminService } from '../../services/admin.service';\nimport { IProperty } from '../../common/property';\nimport { Users } from './../../models/users.model';\nimport { Constant } from './../../common/constants';\nimport { NgForm } from '@angular/forms';\ndeclare let swal: any;\n\n@Component({\n  selector: 'app-notary',\n  templateUrl: './notary.component.html',\n  styleUrls: ['./notary.component.css'],\n  providers: [Users]\n})\nexport class NotaryComponent implements OnInit {\n\n  @ViewChild('modalOpen') modalOpen: ElementRef;\n  @ViewChild('modalClose') modalClose: ElementRef;\n\n  public parameter: IProperty = {};\n  initialCountry: any;\n\n  constructor(public constant: Constant, public model: Users, public admin: AdminService) { }\n\n  ngOnInit() {\n    this.parameter.itemsPerPage = this.constant.itemsPerPage;\n    this.parameter.page = this.constant.p;\n    this.parameter.type = 1;\n    this.initialCountry = {initialCountry: this.constant.country_code};\n    this.getNoatariesListing(this.parameter.page, '', '', '');\n  }\n\n  closeModal() {\n    this.model = new Users();\n    this.modalClose.nativeElement.click();\n  }\n\n  openModal() {\n    this.model = new Users();\n    this.model.country_code = this.constant.country_code;\n    this.model.dial_code = this.constant.dial_code;\n    this.modalOpen.nativeElement.click();\n  }\n\n  getPage(page) {\n    this.parameter.page = page;\n    this.getNoatariesListing(this.parameter.page, this.parameter.name, this.parameter.phone, this.parameter.email);\n  }\n\n  getNoatariesListing(page, name, phone, email) {\n    this.parameter.loading = true;\n    this.parameter.page = page;\n    this.parameter.name = name;\n    this.parameter.phone = phone;\n    this.parameter.email = email;\n\n    this.admin.postDataApi('getNoatariesListing', this.parameter)\n      .subscribe(\n        success => {\n          this.parameter.loading = false;\n          this.parameter.items = success.data;\n          this.parameter.total = success.total;\n        }, error => {\n          this.parameter.loading = false;\n        });\n  }\n\n  changeListner(event) {\n    const reader = new FileReader();\n    reader.onload = (e: any) => {\n        // this.model.image = e.target.result;\n    };\n    const input = new FormData();\n    input.append('image', event.target.files[0]);\n    this.admin.postDataApi('saveImage', input).subscribe(res => {this.model.image = res['data'].image; });\n    reader.readAsDataURL(event.target.files[0]);\n  }\n\n  onCountryChange(e) {\n    this.model.country_code = e.iso2;\n    this.model.dial_code = '+' + e.dialCode;\n    this.initialCountry = {initialCountry: e.iso2};\n  }\n\n  addNewUser(formData: NgForm) {\n    this.parameter.loading = true;\n    this.admin.postDataApi('addNoatary', this.model)\n      .subscribe(\n        success => {\n          this.parameter.loading = false;\n          this.modalClose.nativeElement.click();\n          const text = this.model.id ? 'Updated successfully.' : 'Added successfully.';\n          swal('Success', text, 'success');\n          if (this.parameter.items.length < 10) {\n            if (this.model.id) {\n              this.parameter.items[this.parameter.index] = success.data;\n            } else {\n              this.parameter.items.push(success.data);\n              this.parameter.total++;\n            }\n            this.model = new Users();\n            formData.reset();\n          }\n        }, error => {\n          this.parameter.loading = false;\n        });\n  }\n\n  editUser(userdata, index) {\n    this.model = JSON.parse(JSON.stringify(userdata));\n    this.parameter.index = index;\n    this.modalOpen.nativeElement.click();\n  }\n\n  blockUnblockPopup(index, id, flag) {\n    this.parameter.index = index;\n    this.parameter.title = this.constant.title.ARE_YOU_SURE;\n    switch (flag) {\n      case 0:\n        this.parameter.text = this.constant.title.UNBLOCK_USER;\n        this.parameter.successText = this.constant.successMsg.UNBLOCKED_SUCCESSFULLY;\n        break;\n      case 1:\n        this.parameter.text = this.constant.title.BLOCK_USER;\n        this.parameter.successText = this.constant.successMsg.BLOCKED_SUCCESSFULLY;\n        break;\n    }\n\n    swal({\n      html: this.parameter.title + '<br>' + this.parameter.text,\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: this.constant.confirmButtonColor,\n      cancelButtonColor: this.constant.cancelButtonColor,\n      confirmButtonText: 'Yes'\n    }).then((result) => {\n      if (result.value) {\n        this.blockNoatary(index, id, flag);\n      }\n    });\n  }\n\n\n  blockNoatary(index, id, flag) {\n    this.parameter.index = index;\n    this.admin.postDataApi('blockNoatary', {id: id, flag: flag})\n      .subscribe(\n        success => {\n          swal('Success', success.message, 'success');\n          this.parameter.items[this.parameter.index] = success.data;\n        });\n  }\n}\n\n\n\n// WEBPACK FOOTER //\n// /home/cbl1002/Documents/realestate-admin/src/app/layout/notary/notary.component.ts","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { LoadingModule, ANIMATION_TYPES } from 'ngx-loading';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Ng2TelInputModule } from 'ng2-tel-input';\n\nimport { NotaryLeadsComponent } from './notary-leads/notary-leads.component';\nimport { NotaryComponent } from './notary.component';\nimport { NotaryLeadsDetailsComponent } from './notary-leads/notary-leads-details/notary-leads-details.component';\nimport { AclUserGuard } from '../../guards/acl-user.guard';\nimport { SharedModule } from '../../modules/shared.module';\nimport { AuthGuard } from '../../guards/auth.guard';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\n\nconst routes: Routes = [\n  { path: 'view-notary', component: NotaryComponent,\n    canActivate: [AclUserGuard], data: {roles: ['Noataries Management', 'can_read', 'can_noatary']}},\n\n  // all leads\n  { path: 'notary-leads', component: NotaryLeadsComponent,\n    canActivate: [AclUserGuard], data: {roles: ['Notary Lead Management', 'can_read', 'can_noatary']}},\n\n  // leads wrt particular notary\n  { path: 'view-notary-leads/:id', component: NotaryLeadsComponent,\n    canActivate: [AclUserGuard], data: {roles: ['Notary Lead Management', 'can_read', 'can_noatary']}},\n\n    // details\n  { path: 'notary-leads/:id', component: NotaryLeadsDetailsComponent,\n    canActivate: [AclUserGuard], data: {roles: ['Notary Lead Management', 'can_read', 'can_noatary']}}\n];\n\n// const routes: Routes = [\n//   { path: 'view-notary', component: NotaryComponent,\n//     canActivate: [AuthGuard], data: {roles: ['Noataries Management', 'can_read', '']}},\n//   { path: 'notary-leads', component: NotaryLeadsComponent,\n//     canActivate: [AuthGuard], data: {roles: ['Notary Lead Management', 'can_read', '']}},\n//   { path: 'notary-leads/:id', component: NotaryLeadsDetailsComponent,\n//     canActivate: [AuthGuard], data: {roles: ['Notary Lead Management', 'can_read', '']}}\n// ];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes),\n    CommonModule,\n    LoadingModule.forRoot({\n      animationType: ANIMATION_TYPES.rectangleBounce,\n      primaryColour: '#00B96F'\n    }),\n    NgxPaginationModule,\n    FormsModule,\n    ReactiveFormsModule,\n    Ng2TelInputModule,\n    NgxChartsModule,\n    SharedModule\n  ],\n  declarations: [\n    NotaryComponent,\n    NotaryLeadsComponent,\n    NotaryLeadsDetailsComponent\n  ]\n})\n\nexport class NotaryModule { }\n\n\n\n// WEBPACK FOOTER //\n// /home/cbl1002/Documents/realestate-admin/src/app/layout/notary/notary.module.ts"],"sourceRoot":"webpack:///"}