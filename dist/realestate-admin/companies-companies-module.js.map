{"version":3,"sources":["webpack:///./src/app/layout/companies/add-company/add-company.component.css","webpack:///./src/app/layout/companies/add-company/add-company.component.html","webpack:///./src/app/layout/companies/add-company/add-company.component.ts","webpack:///./src/app/layout/companies/companies.component.css","webpack:///./src/app/layout/companies/companies.component.html","webpack:///./src/app/layout/companies/companies.component.ts","webpack:///./src/app/layout/companies/companies.module.ts"],"names":[],"mappings":"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","file":"companies-companies-module.js","sourcesContent":["module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9jb21wYW5pZXMvYWRkLWNvbXBhbnkvYWRkLWNvbXBhbnkuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"\\n<div class=\\\"container-fluid\\\">\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n      <div class=\\\"title-group\\\">\\n          <h5>{{model.id ? ('viewCompanies.editCompany' | translate) : ('viewCompanies.addCompany' | translate)}}</h5>\\n          <div class=\\\"spacer30\\\"></div>\\n      </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"white-bg padding40\\\">\\n    <div class=\\\"row\\\">\\n    <form role=\\\"form\\\" ngNativeValidate #addForm=\\\"ngForm\\\" (ngSubmit)=\\\"add(addForm)\\\">\\n      <div class=\\\"col-xl-12 col-lg-12 col-md-12 col-12\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-2\\\">\\n                <div class=\\\"add-img\\\" style=\\\"display:flex;\\\">\\n                    <img *ngIf=\\\"image\\\" [src]=\\\"image\\\" [defaultImage]=\\\"image| img:'thumb'\\\" [lazyLoad]=\\\"image\\\" style=\\\"object-fit: cover; width: 100%;\\\">\\n                    <label *ngIf=\\\"model?.image\\\">\\n                      <input accept=\\\"image/*\\\" name=\\\"image\\\" class=\\\"image\\\" (change)=\\\"changeListner($event, 'img_loader', 'image')\\\" type=\\\"file\\\">\\n                    </label>\\n                    <label *ngIf=\\\"!image\\\">{{'addForm.image' | translate}}</label>\\n                    <input *ngIf=\\\"!image\\\" accept=\\\"image/*\\\" name=\\\"image\\\" class=\\\"image\\\" (change)=\\\"changeListner($event, 'img_loader', 'image')\\\" type=\\\"file\\\">\\n                    <div *ngIf=\\\"model.img_loader\\\" class=\\\"loaderr\\\"></div>\\n                </div>\\n            </div>\\n            <div class=\\\"col-2\\\">\\n                <div class=\\\"add-img\\\" style=\\\"display:flex;\\\">\\n                    <img *ngIf=\\\"logo\\\" [src]=\\\"logo\\\" [defaultImage]=\\\"logo| img:'thumb'\\\" [lazyLoad]=\\\"logo\\\" style=\\\"object-fit: cover; width: 100%;\\\">\\n                    <label *ngIf=\\\"model?.logo\\\">\\n                      <input accept=\\\"image/*\\\" name=\\\"image\\\" class=\\\"image\\\" (change)=\\\"changeListner($event, 'logo_loader', 'logo')\\\" type=\\\"file\\\">\\n                    </label>\\n                    <label *ngIf=\\\"!logo\\\">{{'addForm.logo' | translate}}</label>\\n                    <input *ngIf=\\\"!logo\\\" accept=\\\"image/*\\\" name=\\\"image\\\" class=\\\"image\\\" (change)=\\\"changeListner($event, 'logo_loader', 'logo')\\\" type=\\\"file\\\">\\n                    <div *ngIf=\\\"model.logo_loader\\\" class=\\\"loaderr\\\"></div>\\n                </div>\\n            </div>\\n            <div class=\\\"col-8\\\">\\n                <div class=\\\"btn-cont text-right\\\">\\n                    <button *ngIf=\\\"!model?.id\\\" type=\\\"submit\\\" [disabled]=\\\"!addForm.valid\\\" class=\\\"btn btn-primary\\\">{{'addForm.addBtn' | translate}}</button>\\n                    <button *ngIf=\\\"model?.id\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">{{'addForm.updateBtn' | translate}}</button>\\n                </div>\\n            </div>\\n            <div class=\\\"col-12\\\">\\n                <div class=\\\"spacer40\\\"></div>\\n            </div>\\n            <div class=\\\"col-12\\\">\\n                <div class=\\\"form-group-2\\\">\\n                  <label>{{'addForm.companyCommercialName' | translate}}\\n                    <span class=\\\"color-red\\\">*</span>\\n                  </label>\\n                  <input autocomplete=\\\"off\\\" [pattern]=\\\"constant.onlyWhiteSpaces\\\" required type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"model.name\\\" name=\\\"name\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"col-12\\\">\\n              <div class=\\\"form-group-2\\\">\\n                <label>{{'addForm.fedralTaxPayerRegistry' | translate}}\\n                  <!-- <span class=\\\"color-red\\\">*</span> -->\\n                </label>\\n                <input autocomplete=\\\"off\\\" [pattern]=\\\"constant.onlyWhiteSpaces\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"model.rfc\\\" name=\\\"rfc\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"col-12\\\">\\n              <div class=\\\"form-group-2\\\">\\n                <label>{{'addForm.razonSocial' | translate}}\\n                  <!-- <span class=\\\"color-red\\\">*</span> -->\\n                </label>\\n                <input autocomplete=\\\"off\\\" [pattern]=\\\"constant.onlyWhiteSpaces\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"model.razon_social\\\" name=\\\"razon_social\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"col-12\\\">\\n              <div class=\\\"form-group-2\\\">\\n                <label>{{'addForm.name' | translate}}\\n                  <!-- <span class=\\\"color-red\\\">*</span> -->\\n                </label>\\n                <input autocomplete=\\\"off\\\" [pattern]=\\\"constant.onlyWhiteSpaces\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"model.person_in_charge\\\" name=\\\"person_in_charge\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"col-12\\\">\\n                <div class=\\\"form-group-2\\\">\\n                  <label>{{'addForm.contactNumber' | translate}}\\n                    <!-- <span class=\\\"color-red\\\">*</span> -->\\n                  </label>\\n                  <input minlength=\\\"6\\\" maxlength=\\\"16\\\" autocomplete=\\\"off\\\" type=\\\"text\\\" [pattern]=\\\"constant.phonePattern\\\" class=\\\"form-control\\\" id=\\\"phone\\\" minlength=\\\"1\\\" [(ngModel)]=\\\"model.phone\\\" name=\\\"phone\\\"\\n                        ng2TelInput [ng2TelInputOptions]=\\\"initialCountry\\\" (countryChange)=\\\"onCountryCodeChange($event)\\\" />\\n                </div>\\n            </div>\\n            <div class=\\\"col-12\\\">\\n                <div class=\\\"form-group-2\\\">\\n                  <label>{{'addForm.emailId' | translate}} \\n                    <!-- <span class=\\\"color-red\\\">*</span> -->\\n                  </label>\\n                  <input (keydown.space)=\\\"$event.preventDefault();\\\" autocomplete=\\\"off\\\" [pattern]=\\\"constant.emailPattern\\\" type=\\\"email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"model.email\\\" name=\\\"email\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"col-12\\\">\\n                <div class=\\\"form-group-2\\\">\\n                  <label>{{'addForm.address' | translate}} \\n                    <!-- <span class=\\\"color-red\\\">*</span> -->\\n                  </label>\\n                  <input placeholder=\\\"{{'addForm.placeholder.searchForAddress' | translate}}\\\" autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" spellcheck=\\\"off\\\" type=\\\"text\\\" class=\\\"form-control\\\" #search (input)=\\\"loadPlaces('address', 'lat', 'lng', 'searchElementRef')\\\" name=\\\"address\\\" [(ngModel)]=\\\"model.address\\\" autocomplete=\\\"off\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"col-12\\\">\\n              <div class=\\\"form-group-2\\\">\\n                  <label>{{'addForm.locationPinOnMap' | translate}}\\n                    <!-- <span class=\\\"color-red\\\">*</span> -->\\n                  </label>\\n                  <agm-map class=\\\"height200\\\" [latitude]=\\\"model.lat\\\" [longitude]=\\\"model.lng\\\" [scrollwheel]=\\\"false\\\" (mapClick)=\\\"placeMarker($event, 'address', 'lat', 'lng')\\\" [zoom]=\\\"constant.zoom\\\">\\n                    <agm-marker [latitude]=\\\"model.lat\\\" [longitude]=\\\"model.lng\\\"></agm-marker>\\n                  </agm-map>\\n              </div>\\n            </div>\\n            <div class=\\\"col-12\\\">\\n              <div class=\\\"form-group-2\\\">\\n                <label>{{'addForm.description' | translate}} \\n                  <!-- <span class=\\\"color-red\\\">*</span> -->\\n                </label>\\n                <textarea autocomplete=\\\"off\\\" rows=\\\"3\\\" class=\\\"form-control\\\" name=\\\"description\\\" [(ngModel)]=\\\"model.description\\\"></textarea>\\n              </div>\\n            </div>\\n            <div class=\\\"col-12\\\">\\n              <div class=\\\"form-group-2\\\">\\n                <label>{{'addForm.branchOffice' | translate}}</label>\\n                <input placeholder=\\\"{{'addForm.placeholder.searchForBranch' | translate}}\\\" autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" spellcheck=\\\"off\\\" type=\\\"text\\\" class=\\\"form-control\\\" #search1 (input)=\\\"loadPlaces('branch', 'branch_lat', 'branch_lng', 'search1ElementRef')\\\" name=\\\"branch\\\" [(ngModel)]=\\\"model.branch\\\" autocomplete=\\\"off\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"col-12\\\">\\n              <div class=\\\"form-group-2\\\">\\n                  <label>{{'addForm.locationPinOnMap' | translate}}</label>\\n                  <agm-map class=\\\"height200\\\" [latitude]=\\\"model.branch_lat\\\" [longitude]=\\\"model.branch_lng\\\" [scrollwheel]=\\\"false\\\" (mapClick)=\\\"placeMarker($event, 'branch', 'branch_lat', 'branch_lng')\\\" [zoom]=\\\"constant.zoom\\\">\\n                    <agm-marker [latitude]=\\\"model.branch_lat\\\" [longitude]=\\\"model.branch_lng\\\"></agm-marker>\\n                  </agm-map>\\n              </div>\\n            </div>\\n          </div>\\n\\n\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-12\\\">\\n                <div class=\\\"spacer40\\\"></div>\\n            </div>\\n            <div class=\\\"col-12\\\">\\n              <div class=\\\"form-group-2\\\">\\n                <h5>{{'addForm.legalRepresentativeInfo' | translate}}</h5>\\n              </div>\\n            </div>\\n            <div class=\\\"col-12\\\">\\n                <div class=\\\"form-group-2\\\">\\n                  <label>{{'addForm.names' | translate}} \\n                    <span class=\\\"color-red\\\">*</span>\\n                  </label>\\n                  <input autocomplete=\\\"off\\\" minlength=\\\"1\\\" maxlength=\\\"30\\\" [pattern]=\\\"constant.onlyWhiteSpaces\\\" type=\\\"text\\\" class=\\\"form-control\\\" \\n                    [(ngModel)]=\\\"model.legal_representative.name\\\" name=\\\"rep_name\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"col-12\\\">\\n                <div class=\\\"form-group-2\\\">\\n                  <label>{{'addForm.firstSurname' | translate}} \\n                    <span class=\\\"color-red\\\">*</span>\\n                  </label>\\n                  <input autocomplete=\\\"off\\\" minlength=\\\"1\\\" maxlength=\\\"30\\\" [pattern]=\\\"constant.onlyWhiteSpaces\\\" type=\\\"text\\\" class=\\\"form-control\\\" \\n                    [(ngModel)]=\\\"model.legal_representative.first_surname\\\" name=\\\"first_surname\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"col-12\\\">\\n                <div class=\\\"form-group-2\\\">\\n                  <label>{{'addForm.secondSurname' | translate}} \\n                    <!-- <span class=\\\"color-red\\\">*</span> -->\\n                  </label>\\n                  <input autocomplete=\\\"off\\\" minlength=\\\"1\\\" maxlength=\\\"30\\\" [pattern]=\\\"constant.onlyWhiteSpaces\\\" type=\\\"text\\\" class=\\\"form-control\\\" \\n                    [(ngModel)]=\\\"model.legal_representative.second_surname\\\" name=\\\"second_surname\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"col-12\\\">\\n                <div class=\\\"form-group-2\\\">\\n                  <label>{{'addForm.contactNumber' | translate}} \\n                    <!-- <span class=\\\"color-red\\\">*</span> -->\\n                  </label>\\n                  <input minlength=\\\"8\\\" maxlength=\\\"15\\\" autocomplete=\\\"off\\\" type=\\\"text\\\" [pattern]=\\\"constant.phonePattern\\\" \\n                    class=\\\"form-control\\\" id=\\\"phone\\\" [(ngModel)]=\\\"model.legal_representative.phone\\\" name=\\\"legal_representative_phone\\\"\\n                    ng2TelInput [ng2TelInputOptions]=\\\"initialCountry\\\" (countryChange)=\\\"onCountryChange($event)\\\" />\\n                </div>\\n            </div>\\n          <div class=\\\"col-12\\\">\\n              <div class=\\\"form-group-2\\\">\\n                <label>{{'addForm.emailId' | translate}} \\n                  <!-- <span class=\\\"color-red\\\">*</span> -->\\n                </label>\\n                <input (keydown.space)=\\\"$event.preventDefault();\\\" autocomplete=\\\"off\\\" [pattern]=\\\"constant.emailPattern\\\" \\n                type=\\\"email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"model.legal_representative.email\\\" name=\\\"rep_email\\\">\\n              </div>\\n          </div>\\n          <div class=\\\"col-12\\\">\\n              <div class=\\\"form-group-2\\\">\\n                <label>{{'addForm.fedralTaxPayerRegistry' | translate}} \\n                  <!-- <span class=\\\"color-red\\\">*</span> -->\\n                </label>\\n                <input autocomplete=\\\"off\\\" minlength=\\\"12\\\" maxlength=\\\"13\\\" [pattern]=\\\"constant.onlyWhiteSpaces\\\" type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"model.legal_representative.fed_tax_pay\\\" name=\\\"le_fed_tax_pay\\\">\\n              </div>\\n          </div>\\n\\n          <div class=\\\"col-12\\\">\\n            <label>{{'addCollection.bankAccount' | translate}}\\n              <!-- <span class=\\\"color-red\\\">*</span> -->\\n              <span class=\\\"pull-right\\\"><a class=\\\"add\\\" (click)=\\\"addLegalEntityBank($event)\\\" href=\\\"javascript://\\\">{{'addCollection.addNewBankAccount' | translate}}</a></span>\\n            </label>\\n            <div class=\\\"row\\\" *ngFor=\\\"let leBankAccount of model.legal_representative.legal_rep_banks; let i=index\\\">\\n              <div class=\\\"col-lg-3 col-md-6 col-sm-6 col-12\\\">\\n                  <div class=\\\"form-group-3\\\">\\n                  <label>{{'addCollection.bankName' | translate}}</label>\\n                  <div class=\\\"clearfix\\\"></div>\\n                  <input autocomplete=\\\"off\\\" minlength=\\\"1\\\" maxlength=\\\"30\\\" class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"leBankAccount.bank_name\\\" name=\\\"le_bank_name{{i}}\\\">\\n                </div>\\n              </div>\\n              <div class=\\\"col-lg-3 col-md-6 col-sm-6 col-12\\\">\\n                  <div class=\\\"form-group-3\\\">\\n                <label>{{'addCollection.accountNumber' | translate}}</label>\\n                <div class=\\\"clearfix\\\"></div>\\n                <input autocomplete=\\\"off\\\" class=\\\"form-control\\\" type=\\\"text\\\" minlength=\\\"9\\\" maxlength=\\\"20\\\" [pattern]=\\\"constant.accountPattern\\\" [(ngModel)]=\\\"leBankAccount.account_number\\\" name=\\\"le_account_number{{i}}\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"col-lg-2 col-md-6 col-sm-6 col-12\\\">\\n                <div class=\\\"form-group-3\\\">\\n                <label>{{'addCollection.clabeSwift' | translate}}</label>\\n                <div class=\\\"clearfix\\\"></div>\\n                <input autocomplete=\\\"off\\\" class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"leBankAccount.swift\\\" name=\\\"le_swift{{i}}\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"col-lg-2 col-md-6 col-sm-6 col-12\\\">\\n                <div class=\\\"form-group-3\\\">\\n                <label>{{'addCollection.currency' | translate}}</label>\\n                <div class=\\\"clearfix\\\"></div>\\n                <select name=\\\"le_currency_id{{i}}\\\" [(ngModel)]=\\\"leBankAccount.currency_id\\\" class=\\\"form-control\\\">\\n                  <option value=\\\"\\\">{{'addCollection.currency' | translate}}</option>\\n                  <option value=\\\"{{c.id}}\\\" *ngFor=\\\"let c of currencies\\\">{{ c?.code }} | {{c?.currency}}</option>\\n                </select>\\n              </div>\\n            </div>\\n            <div class=\\\"col-lg-2 col-md-6 col-sm-6 col-12\\\">\\n                <div class=\\\"form-group-3\\\">\\n                <label>{{'addCollection.remove' | translate}}</label>\\n                <div class=\\\"clearfix\\\"></div>\\n                <button type=\\\"button\\\" (click)=\\\"removeLegalEntityBank($event, leBankAccount, i)\\\">{{'addCollection.remove' | translate}}</button>\\n              </div>\\n            </div>\\n          </div>\\n          </div>\\n        </div>\\n      </div>\\n      </form>\\n    </div>\\n</div>\\n\"","import { Component, OnInit, NgZone, ViewChild, ElementRef } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport { Users } from 'src/app/models/users.model';\nimport { MapsAPILoader } from '@agm/core';\nimport { Company } from 'src/app/models/company.model';\nimport { IProperty } from 'src/app/common/property';\nimport { Constant } from 'src/app/common/constants';\nimport { CommonService } from 'src/app/services/common.service';\nimport { AdminService } from 'src/app/services/admin.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { TranslateService } from '@ngx-translate/core';\nimport { LegalRepresentative, Banks } from 'src/app/models/legalEntity.model';\ndeclare const google: any;\ndeclare let swal: any;\n\n@Component({\n  selector: 'app-add-company',\n  templateUrl: './add-company.component.html',\n  styleUrls: ['./add-company.component.css']\n})\nexport class AddCompanyComponent implements OnInit {\n\n  @ViewChild('mapDiv') mapDiv: ElementRef;\n  @ViewChild('search') searchElementRef: ElementRef;\n  @ViewChild('search1') search1ElementRef: ElementRef;\n  public parameter: IProperty = {};\n  initialCountry: any;\n  show = false;\n  image: any;\n  logo: any;\n  model: Company;\n  currencies: Array<any>;\n  constructor(\n    public constant: Constant,\n    private cs: CommonService,\n    private mapsAPILoader: MapsAPILoader,\n    private ngZone: NgZone,\n    private admin: AdminService,\n    private route: ActivatedRoute,\n    private spinner: NgxSpinnerService,\n    private translate: TranslateService,\n    private router: Router\n  ) { }\n\n  ngOnInit() {\n    this.model = new Company();\n    this.model.legal_representative = new LegalRepresentative();\n    this.setCurrentPosition();\n    this.getCurrencies();\n    this.model.country_code = this.constant.country_code;\n    this.model.dial_code = this.constant.dial_code;\n    this.initialCountry = {initialCountry: this.constant.country_code};\n      this.parameter.sub = this.route.params.subscribe(params => {\n        if (params['id'] !== '0') {\n          this.model.id = params['id'];\n          this.getTowerManagerCompanyById(this.model.id);\n        }\n      });\n  }\n\n  getCurrencies() {\n    this.admin.postDataApi('getCurrencies', {})\n      .subscribe(\n        success => {\n          this.currencies = success.data;\n        }, error => {\n          this.spinner.hide();\n        }\n      );\n  }\n\n  onCountryChange(e) {\n    this.model.country_code = e.iso2;\n    this.model.dial_code = '+' + e.dialCode;\n    this.initialCountry = {initialCountry: e.iso2};\n  }\n  getTowerManagerCompanyById(id: number) {\n    this.spinner.show();\n    this.admin.postDataApi('getTowerManagerCompanyById', {'id': id})\n    .subscribe(\n      success => {\n        this.spinner.hide();\n        this.model = success.data;\n        this.image = this.model.image;\n        this.logo = this.model.logo;\n        this.model.legal_representative = success.data.legal_representative || new LegalRepresentative();\n        this.model.legal_representative.legal_rep_banks = success.data.legal_representative.legal_rep_banks; // Array(new Banks());\n      }, error => {\n        this.spinner.hide();\n      });\n  }\n\n  changeListner(event: any, paramLoader: string, param: any) {\n    if (event.target.files[0].size > this.constant.fileSizeLimit) {\n      swal(this.translate.instant('swal.error'), this.translate.instant('message.error.fileSizeExceeds'), 'error');\n      return false;\n    }\n    this.model[paramLoader] = true;\n    const reader = new FileReader();\n    reader.onload = (e: any) => {\n      this[param] = e.target.result;\n      this.cs.saveImage(event.target.files[0]).subscribe(\n        success => {\n          this.model[paramLoader] = false;\n          this.model[param] = success['data'].image;\n        }\n      );\n    };\n    reader.readAsDataURL(event.target.files[0]);\n  }\n\n  onCountryCodeChange(e) {\n    this.model.country_code = e.iso2;\n    this.model.dial_code = '+' + e.dialCode;\n    this.initialCountry = {initialCountry: e.iso2};\n  }\n\n  add(formData: NgForm) {\n    const modelSave: Users = JSON.parse(JSON.stringify(this.model));\n    if (modelSave.legal_representative.phone) {\n      modelSave.legal_representative.country_code = modelSave.legal_representative.country_code || this.constant.country_code;\n      modelSave.legal_representative.dial_code = modelSave.legal_representative.dial_code || this.constant.dial_code;\n    }\n\n    if (this.model.img_loader || this.model.logo_loader) {\n      swal(this.translate.instant('swal.error'), this.translate.instant('message.error.uploadingImage'), 'error');\n      return;\n    }\n    delete this.model.logo_loader;\n    delete this.model.img_loader;\n\n    if (modelSave.legal_representative.name || modelSave.legal_representative.first_surname || modelSave.legal_representative.phone \n      || modelSave.legal_representative.email) {\n        // if any of key present, then all must be entered\n      if (!modelSave.legal_representative.name) {\n        swal(this.translate.instant('swal.error'), this.translate.instant('message.error.pleaseEnterLegalRepresentativeName'), 'error');\n        return;\n      }\n      if (!modelSave.legal_representative.first_surname) {\n        swal(this.translate.instant('swal.error'),\n        this.translate.instant('message.error.pleaseEnterLegalRepresentativeFirstName'), 'error');\n        return;\n      }\n      if (!modelSave.legal_representative.phone) {\n        swal(this.translate.instant('swal.error'), this.translate.instant('message.error.pleaseEnterLegalRepresentativePhone'), 'error');\n        return;\n      }\n      if (!modelSave.legal_representative.email) {\n        swal(this.translate.instant('swal.error'), this.translate.instant('message.error.pleaseEnterLegalRepresentativeEmail'), 'error');\n        return;\n      }\n      // if (!modelSave.legal_representative.fed_tax_pay) {\n      //   swal(this.translate.instant('swal.error'), this.translate.instant('message.error.pleaseEnterLegalRepresentativeFTPR'), 'error');\n      //   return;\n      // }\n    }\n    if (!modelSave.legal_representative.name || !modelSave.legal_representative.first_surname || !modelSave.legal_representative.phone \n      || !modelSave.legal_representative.email) {\n        delete modelSave.legal_representative;\n    }\n\n    if (modelSave['legal_representative'] && modelSave['legal_representative']['legal_rep_banks'] &&\n      modelSave['legal_representative']['legal_rep_banks'].length > 0) {\n      let i = 0;\n      for (let index = 0; index < modelSave['legal_representative']['legal_rep_banks'].length; index++) {\n        const element = modelSave['legal_representative']['legal_rep_banks'][index];\n        if (!element.bank_name || !element.account_number || !element.swift || !element.currency_id) {\n          i = i + 1;\n          swal(this.translate.instant('swal.error'), this.translate.instant('message.error.pleaseEnterBankDetails'), 'error');\n          return;\n        }\n      }\n    }\n    this.spinner.show();\n    this.admin.postDataApi('addTowerManagerCompany', modelSave)\n      .subscribe(\n        success => {\n          this.spinner.hide();\n          if (success.success === '0') {\n            swal(this.translate.instant('swal.error'), success.message, 'error');\n            return;\n          } else {\n            const text = this.model.id ?\n                    this.translate.instant('message.success.updatedSuccessfully') :\n                    this.translate.instant('message.success.addedSuccessfully');\n            swal(this.translate.instant('swal.success'), text, 'success');\n            // if (!this.model.id) {\n            //   formData.reset();\n            //   this.image = ''; this.logo = '';\n            //   this.model.legal_representative = success.data.legal_representative || new LegalRepresentative();\n            //   this.model.legal_representative.legal_rep_banks = success.data.legal_representative.legal_rep_banks || [];\n            // } else {\n            //   this.router.navigate(['/dashboard/companies/view-all']);\n            // }\n            this.router.navigate(['/dashboard/companies/view-all']);\n          }\n        }, error => {\n          this.spinner.hide();\n        });\n  }\n\n\n  loadPlaces(paramAdd: string, paramLat: string, paramLng: string, searchRef: any) {\n    // load Places Autocomplete\n    this.model[paramLat] = null;\n    this.model[paramLng] = null;\n    this.mapsAPILoader.load().then(() => {\n      const autocomplete = new google.maps.places.Autocomplete(this[searchRef].nativeElement, {\n        types: []\n      });\n      autocomplete.addListener('place_changed', () => {\n        this.ngZone.run(() => {\n          // get the place result\n          // const place: google.maps.places.PlaceResult = autocomplete.getPlace();\n          const place = autocomplete.getPlace();\n\n          // verify result\n          if (place.geometry === undefined || place.geometry === null) {\n            return;\n          }\n\n          // set latitude, longitude and zoom\n          this.model[paramLat] = place.geometry.location.lat();\n          this.model[paramLng] = place.geometry.location.lng();\n          if (place.formatted_address) {\n            this.model[paramAdd] = place.formatted_address;\n          }\n        });\n      });\n    });\n  }\n\n  setCurrentPosition() {\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        // setting address lat lng\n        this.model.lat = this.model.lat ? this.model.lat : position.coords.latitude;\n        this.model.lng = this.model.lng ? this.model.lng : position.coords.longitude;\n\n        // setting branch office lat lng\n        this.model.branch_lat = this.model.branch_lat ? this.model.branch_lat : position.coords.latitude;\n        this.model.branch_lng = this.model.branch_lng ? this.model.branch_lng : position.coords.longitude;\n      });\n    }\n  }\n\n  placeMarker($event: any, param: string, paramLat: string, paramLng: string) {\n    this.model[paramLat] = $event.coords.lat;\n    this.model[paramLng] = $event.coords.lng;\n    this.getGeoLocation(param, this.model[paramLat], this.model[paramLng]);\n  }\n\n\n  getGeoLocation(param: string, lat: number, lng: number) {\n    if (navigator.geolocation) {\n      const geocoder = new google.maps.Geocoder();\n      const latlng = new google.maps.LatLng(lat, lng);\n      const request = { latLng: latlng };\n\n      geocoder.geocode(request, (results, status) => {\n        if (status === google.maps.GeocoderStatus.OK) {\n          const result = results[0];\n          if (result != null) {\n            this.model[param] = result.formatted_address;\n          } else {\n            this.model[param] = lat + ',' + lng;\n          }\n        }\n      });\n    }\n  }\n\n  addLegalEntityBank(e) {\n    const bank = new Banks();\n    this.model.legal_representative.legal_rep_banks = this.model.legal_representative.legal_rep_banks || [];\n    this.model.legal_representative.legal_rep_banks.push(bank);\n  }\n\n  removeLegalEntityBank($event: Event, item: any, i: number) {\n    $event.stopPropagation();\n    this.model.legal_representative.legal_rep_banks.splice(i, 1);\n    if (item.id) {\n      this.admin.postDataApi('deleteLegalRepBank', {id: item.id}).subscribe(success => {\n        this.spinner.hide();\n      }, error => {\n        this.spinner.hide();\n      });\n    }\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9jb21wYW5pZXMvY29tcGFuaWVzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"\\n<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-md-4 col-6\\\">\\n        <div class=\\\"title-group\\\">\\n            <h5>{{'viewCompanies.label' | translate}}</h5>\\n            <p>{{'table.pagination.showing' | translate}} {{items?.length}} {{'table.pagination.outof' | translate}} {{parameter.total}}</p>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-5 col-6\\\">\\n        <div class=\\\"btn-cont upload-excel pull-right\\\">\\n            <a title=\\\"{{'table.title.downloadSampleFile' | translate}}\\\" href=\\\"assets/docx/BD_TowerManagerCompany_Sozu.xlsx\\\" class=\\\"btn\\\"><span class=\\\"fa fa-download\\\"></span></a>\\n            <label title=\\\"{{'table.title.chooseExcelFile' | translate}}\\\" class=\\\"img_label\\\">{{label}}\\n                <input type=\\\"file\\\" #fileInput accept=\\\".xls,.xlsx\\\" (change)=\\\"getFileName()\\\">\\n            </label>\\n            <a title=\\\"{{'table.title.uploadSelectedFile' | translate}}\\\" (click)=\\\"importData()\\\" href=\\\"javascript://\\\" class=\\\"btn\\\"><span class=\\\"fa fa-upload\\\"></span></a>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-3 col-6\\\">\\n        <div class=\\\"btn-cont text-right\\\">\\n            <a *ngIf=\\\"admin?.admin_acl['Companies Management']?.can_create==1\\\" class=\\\"btn btn-primary\\\" href=\\\"javascript://\\\" routerLink=\\\"/dashboard/companies/add-company/0\\\">{{'table.addNewBtn' | translate}}</a>\\n        </div>\\n      </div>\\n  </div>\\n\\n  <div class=\\\"white-bg\\\">\\n      <div class=\\\"tabel-section\\\">\\n        <div class=\\\"table-responsive\\\">\\n          <table class=\\\"table table-striped table-align-left\\\">\\n            <tr>\\n              <th style=\\\"width:6%\\\">&nbsp;</th>\\n              <th style=\\\"width:20%\\\">\\n                <div class=\\\"table-search\\\">\\n                    <label>{{'table.th.companyCommercialName' | translate}}</label>\\n                    <div class=\\\"searh-3\\\">\\n                      <input type=\\\"text\\\" [(ngModel)]=\\\"model.name\\\" (keyup.enter)=\\\"getTowerManagerCompany()\\\" name=\\\"\\\">\\n                      <button *ngIf=\\\"model.name\\\" (click)=\\\"getTowerManagerCompany()\\\"><i class=\\\"fa fa-search\\\"></i></button>\\n                    </div>\\n                </div>\\n              </th>\\n              <th style=\\\"width:20%; text-align:left;\\\">\\n                <div class=\\\"table-search\\\">\\n                    <label><br>&nbsp;{{'table.th.contactNumber' | translate}}</label>\\n                    <div class=\\\"searh-3\\\">\\n                      <input type=\\\"text\\\" [(ngModel)]=\\\"model.phone\\\" (keyup.enter)=\\\"getTowerManagerCompany()\\\" name=\\\"\\\">\\n                      <button *ngIf=\\\"model.phone\\\" (click)=\\\"getTowerManagerCompany()\\\"><i class=\\\"fa fa-search\\\"></i></button>\\n                    </div>\\n                </div>\\n              </th>\\n              <th style=\\\"width:20%\\\">\\n                <div class=\\\"table-search\\\">\\n                    <label><br>&nbsp;{{'table.th.emailAddress' | translate}}</label>\\n                    <div class=\\\"searh-3\\\">\\n                      <input type=\\\"text\\\" [(ngModel)]=\\\"model.email\\\" (keyup.enter)=\\\"getTowerManagerCompany()\\\" name=\\\"\\\">\\n                      <button *ngIf=\\\"model.email\\\" (click)=\\\"getTowerManagerCompany()\\\"><i class=\\\"fa fa-search\\\"></i></button>\\n                    </div>\\n                </div>\\n              </th>\\n              <th style=\\\"width:7%; vertical-align: top;\\\">\\n                  <div class=\\\"table-search\\\">\\n                      <label>{{'table.th.linkedProjects' | translate}}</label>\\n                <a (click)=\\\"sortData(model.project_sort==2?1:2, 'project_sort')\\\" href=\\\"javascript://\\\"><img [ngClass]=\\\"{'upsidedown':model.project_sort==2}\\\" src=\\\"assets/img/top-arrow.png\\\" alt=\\\"img\\\"></a>\\n              </div>\\n              </th>\\n              <th style=\\\"width:7%; vertical-align: top;\\\">\\n                  <div class=\\\"table-search\\\">\\n                      <label>{{'table.th.linkedManagers' | translate}}</label>\\n                <a (click)=\\\"sortData(model.sort_manager==2?1:2, 'sort_manager')\\\" href=\\\"javascript://\\\"><img [ngClass]=\\\"{'upsidedown':model.sort_manager==2}\\\" src=\\\"assets/img/top-arrow.png\\\" alt=\\\"img\\\"></a>\\n                </div>\\n              </th>\\n              <th style=\\\"width:20%\\\">\\n                &nbsp;\\n              </th>\\n            </tr>\\n      \\n            <tr *ngFor=\\\"let item of items| paginate: { itemsPerPage: parameter.itemsPerPage, currentPage: parameter.page, totalItems: parameter.total }; let i=index\\\">\\n              <td> \\n                  <img *ngIf=\\\"item.image\\\" [defaultImage]=\\\"item.image| img:'thumb'\\\" [lazyLoad]=\\\"item.image\\\" class=\\\"rounded-circle\\\" alt=\\\"img\\\">\\n                  <img *ngIf=\\\"!item.image\\\" class=\\\"rounded-circle\\\" src=\\\"assets/img/default_img.png\\\" alt=\\\"img\\\">\\n              </td>\\n              <td class=\\\"text-left\\\">\\n                <span class=\\\"name\\\">\\n                  <a data-toggle=\\\"popover\\\" data-placement=\\\"top\\\" title=\\\"{{item.name}}\\\">{{item.name | titlecase}}</a>\\n                </span>\\n              </td>\\n              <td class=\\\"text-left\\\" *ngIf=\\\"item.phone\\\">{{item.dial_code ? item.dial_code : constant.dial_code}}-{{item.phone}}</td>\\n              <td class=\\\"text-left\\\" *ngIf=\\\"!item.phone\\\">{{'table.tr.td.NA' | translate}}</td>\\n              <td class=\\\"text-left\\\">{{item.email ? item.email : ('table.tr.td.NA' | translate)}}</td>\\n              <td class=\\\"text-left\\\">\\n                <a routerLink=\\\"/dashboard/projects/view-projects/company/{{item.id}}\\\">\\n                  <span class=\\\"green-color\\\">{{(item.project_count + item.project_count1) | numberWithCommas}}</span>\\n                </a>\\n              </td>\\n              <td class=\\\"text-left\\\">\\n                <a class=\\\"cursor-pointer\\\" *ngIf=\\\"item.managers_count; else noManagersLinked\\\" (click)=\\\"getManagers(item)\\\">\\n                  <span class=\\\"green-color\\\">{{item.managers_count | numberWithCommas}}</span>\\n                </a>\\n                <ng-template #noManagersLinked>\\n                  {{item.managers_count | numberWithCommas}}\\n                </ng-template>\\n              </td>\\n              <!-- <td class=\\\"text-left\\\">{{item.project_count | numberWithCommas}}</td> -->\\n              <!-- <td class=\\\"text-left\\\">{{item.managers_count | numberWithCommas}}</td> -->\\n              <td>\\n                <div class=\\\"table-actions\\\">\\n                    <button title=\\\"{{'table.title.editDetails' | translate}}\\\" [disabled]=\\\"admin?.admin_acl['Companies Management']?.can_update==0\\\" (click)=\\\"editUser(item)\\\" class=\\\"action-icon\\\"><img src=\\\"assets/img/edit.png\\\" alt=\\\"img\\\"></button>\\n                  <button [disabled]=\\\"admin?.admin_acl['Companies Management']?.can_delete==0\\\"\\n                    (click)=\\\"blockUnblockPopup(i, item.id, item.is_blocked==1?0:1)\\\" \\n                    title=\\\"{{item.is_blocked==1 ? ('table.title.unblock' | translate) : ('table.title.block' | translate)}}\\\" [ngClass]=\\\"{'unblock-bg':item.is_blocked==1}\\\"\\n                    class=\\\"action-icon\\\"><img src=\\\"assets/img/block.png\\\" alt=\\\"img\\\">\\n                  </button>\\n                  <button [disabled]=\\\"admin?.admin_acl['Companies Management']?.can_purge==0\\\"\\n                    (click)=\\\"deletePopup(item, i);\\\" class=\\\"action-icon\\\" title=\\\"{{'table.title.delete' | translate}}\\\"><img src=\\\"assets/img/ic_delete.png\\\" alt=\\\"img\\\"></button>\\n                </div>\\n              </td>\\n            </tr>\\n\\n          </table>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"center\\\" *ngIf=\\\"parameter.total == 0\\\">\\n        <img src=\\\"assets/img/404-error.png\\\">\\n      </div>\\n  </div>\\n  \\n  <div class=\\\"btn-cont text-right marginT15\\\" *ngIf=\\\"parameter.total\\\">\\n    <pagination-controls class=\\\"my-pagination\\\" (pageChange)=\\\"getPage($event)\\\"></pagination-controls>\\n  </div>\\n  \\n</div>\\n\\n\\n\\n<a data-toggle=\\\"modal\\\" data-target=\\\"#view-managers-modal\\\" #viewManagersModal></a>\\n<div class=\\\"modal\\\" id=\\\"view-managers-modal\\\">\\n    <div class=\\\"modal-dialog \\\">\\n        <div class=\\\"modal-content notary-avail\\\">\\n            <div class=\\\"modal-header popup-header\\\">\\n                <h4 class=\\\"modal-title\\\">{{'addForm.linkedManagers' | translate}}</h4>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" #closeviewManagersModal>&times;</button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-8 col-6\\\">\\n                    </div>\\n                </div>\\n                <div class=\\\"modal-table-data\\\" malihu-scrollbar [scrollbarOptions]=\\\"scrollbarOptions\\\">\\n                    <table class=\\\"table\\\">\\n                        <tr *ngFor=\\\"let item of parameter.items\\\">\\n                            <td *ngIf=\\\"item.is_blocked!=1\\\">\\n                                <div class=\\\"n-avail-profile\\\">\\n                                    <img [src]=\\\"item.image| img:'small'\\\" onerror='src=\\\"assets/img/default_img.png\\\"'\\n                                        alt=\\\"img\\\">\\n                                    <div class=\\\"n-avail-info\\\">\\n                                        <p class=\\\"p12\\\">{{item.name | titlecase}}</p>\\n                                        <p class=\\\"p10\\\">{{'leads.phone' | translate}} :\\n                                            {{item.dial_code ? item.dial_code : constant.dial_code}}-{{item.phone.trim()}}\\n                                        </p>\\n                                    </div>\\n                                </div>\\n                            </td>\\n                        </tr>\\n                        <tr *ngIf=\\\"parameter?.items?.length==0\\\">\\n                            <p class=\\\"show-not-found\\\">{{'viewManagers.noManagerLinked' | translate}}</p>\\n                        </tr>\\n                    </table>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { Company } from 'src/app/models/company.model';\nimport { IProperty } from 'src/app/common/property';\nimport { Constant } from 'src/app/common/constants';\nimport { AdminService } from 'src/app/services/admin.service';\nimport { Users } from 'src/app/models/users.model';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { TranslateService } from '@ngx-translate/core';\ndeclare let swal: any;\n\n@Component({\n  selector: 'app-companies',\n  templateUrl: './companies.component.html',\n  styleUrls: ['./companies.component.css']\n})\nexport class CompaniesComponent implements OnInit {\n\n  @ViewChild('viewManagersModal') viewManagersModal: ElementRef;\n  @ViewChild('fileInput') fileInput: ElementRef;\n  public scrollbarOptions = { axis: 'y', theme: 'dark'};\n  public parameter: IProperty = {};\n  model: Company;\n  items: Array<Company>;\n  label: string;\n  constructor(public constant: Constant, public admin: AdminService,\n    private spinner: NgxSpinnerService,\n    private router: Router,\n    private translate: TranslateService, private route: ActivatedRoute) { }\n\n  ngOnInit() {\n    this.label = this.translate.instant('table.title.chooseCompaniesFile');\n    this.model = new Company();\n    this.model.project_sort = 2;  // 2 means desc\n    this.model.sort_manager = null;\n    this.parameter.itemsPerPage = this.constant.itemsPerPage;\n    this.parameter.page = this.constant.p;\n    this.route.params.subscribe(params => {\n      if (params.name) {\n        this.model.name = params.name; \n      }\n    });\n    this.getTowerManagerCompany();\n  }\n\n  getPage(page: number) {\n    this.parameter.page = page;\n    this.getTowerManagerCompany();\n  }\n\n  getFileName() {\n    const fi = this.fileInput.nativeElement;\n    const uploadedFile = fi.files[0];\n    this.label = uploadedFile.name;\n  }\n\n  sortData(value: number, param: string) {\n    this.model[param] = value;\n    if (param === 'sort_manager') {\n      this.model.project_sort = null;\n    } else {\n      this.model.sort_manager = null;\n    }\n    this.getTowerManagerCompany();\n  }\n\n  getTowerManagerCompany() {\n    this.model.page = this.parameter.page;\n    this.spinner.show();\n    this.admin.postDataApi('getTowerManagerCompany', this.model)\n      .subscribe(\n        success => {\n          this.spinner.hide();\n          this.items = success.data;\n          this.parameter.total = success.total;\n        }, error => {\n          this.spinner.hide();\n        });\n  }\n\n  editUser(item: Users) {\n    this.router.navigate(['/dashboard/companies/add-company', item.id]);\n  }\n\n  blockUnblockPopup(index: any, id: string, flag: number) {\n    this.parameter.index = index;\n    this.parameter.title = this.translate.instant('message.error.areYouSure');\n    switch (flag) {\n      case 0:\n      this.parameter.text = this.translate.instant('message.error.wantToUnblockCompany');\n      this.parameter.successText = this.translate.instant('message.success.unblockedSuccessfully');\n      break;\n    case 1:\n      this.parameter.text = this.translate.instant('message.error.wantToBlockCompany');\n      this.parameter.successText = this.translate.instant('message.success.blockedSuccessfully');\n        break;\n    }\n\n    swal({\n      html: this.parameter.title + '<br>' + this.parameter.text,\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: this.constant.confirmButtonColor,\n      cancelButtonColor: this.constant.cancelButtonColor,\n      confirmButtonText: 'Yes'\n    }).then((result) => {\n      if (result.value) {\n        this.blockTowerManagerCompany(index, id, flag);\n      }\n    });\n  }\n\n\n  blockTowerManagerCompany(index: number, id: any, flag: any) {\n    this.parameter.index = index;\n    const input = {\n      id: id,\n      flag: flag\n    };\n\n    this.admin.postDataApi('blockTowerManagerCompany', input)\n      .subscribe(\n        success => {\n          swal(this.translate.instant('swal.success'), this.parameter.successText, 'success');\n          this.items[this.parameter.index]['is_blocked'] = flag;\n        });\n  }\n\n  deletePopup(item: any, index: number) {\n    this.parameter.title = this.translate.instant('message.error.areYouSure');\n    this.parameter.text = this.translate.instant('message.error.wantToDeleteCompany');\n\n    swal({\n      html: this.parameter.title + '<br>' + this.parameter.text,\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: this.constant.confirmButtonColor,\n      cancelButtonColor: this.constant.cancelButtonColor,\n      confirmButtonText: 'Yes'\n    }).then((result) => {\n      if (result.value) {\n        this.deleteData(item, index);\n      }\n    });\n  }\n\n  deleteData(item: any, index: number) {\n    this.admin.postDataApi('deleteTowerManagerCompany',\n      { id: item.id }).subscribe(r => {\n        this.items.splice(index, 1);\n        this.parameter.total--;\n        swal(this.translate.instant('swal.success'), this.translate.instant('message.success.deletedSuccessfully'), 'success');\n      },\n        error => {\n          swal(this.translate.instant('swal.error'), error.error.message, 'error');\n        });\n  }\n\n  importData() {\n    const file = this.fileInput.nativeElement;\n    let attachment: File;\n    if (file.files && file.files[0]) {\n      attachment = file.files[0];\n      if (attachment.size > this.constant.fileSizeLimit) {\n        swal(this.translate.instant('swal.error'), this.translate.instant('message.error.fileSizeLimit'), 'error');\n        return false;\n      }\n      this.spinner.show();\n      const input = new FormData();\n      input.append('attachment', attachment);\n      this.admin.postDataApi('importTowerManagerCompany', input)\n        .subscribe(\n          success => {\n            this.spinner.hide();\n            this.fileInput.nativeElement.value = '';\n            this.label = this.translate.instant('table.title.chooseCompaniesFile');\n            swal(this.translate.instant('swal.success'), this.translate.instant('message.success.importedSuccessfully'), 'success');\n            this.getTowerManagerCompany();\n          }, error => {\n            this.fileInput.nativeElement.value = '';\n            this.spinner.hide();\n          });\n    } else {\n      swal(this.translate.instant('swal.error'), this.translate.instant('message.error.pleaseChooseFile'), 'error');\n      return false;\n    }\n  }\n\n  getManagers(company: any) {\n    this.router.navigate(['/dashboard/managers/view-all', 'company', company.name]);\n    // this.spinner.show();\n    // this.admin.postDataApi('getCompanyManagers', {company_id: company_id})\n    //   .subscribe(\n    //     success => {\n    //       this.spinner.hide();\n    //       this.viewManagersModal.nativeElement.click();\n    //       this.parameter.items = success.data;\n    //     }, error => {\n    //       this.spinner.hide();\n    //     });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\n\n// third party libraries\nimport { Routes, RouterModule } from '@angular/router';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Ng2TelInputModule } from 'ng2-tel-input';\nimport { AgmCoreModule } from '@agm/core';\nimport { LazyLoadImageModule } from 'ng-lazyload-image';\nimport { TranslateModule } from '@ngx-translate/core';\n\n// general components\nimport { SharedModule } from 'src/app/modules/shared.module';\nimport { CompaniesComponent } from './companies.component';\nimport { AclUserGuard } from 'src/app/guards/acl-user.guard';\nimport { AddCompanyComponent } from './add-company/add-company.component';\nimport { MalihuScrollbarModule } from 'ngx-malihu-scrollbar';\n\nconst routes: Routes = [\n  {\n    path: 'view-all', component: CompaniesComponent,\n    canActivate: [AclUserGuard], data: { roles: ['Companies Management', 'can_read', ''] }\n  },\n  {\n    path: 'view-all/:name', component: CompaniesComponent,\n    canActivate: [AclUserGuard], data: { roles: ['Companies Management', 'can_read', ''] }\n  },\n  {\n    path: 'add-company/:id', component: AddCompanyComponent,\n    canActivate: [AclUserGuard], data: { roles: ['Companies Management', 'can_read', ''] }\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes),\n    CommonModule,\n    NgxSpinnerModule,\n    AgmCoreModule.forRoot({\n      apiKey: 'AIzaSyDykCJGMqHIwJluSmSiqKTJBVN2KauM_uQ',\n      libraries: ['drawing', 'places']\n    }),\n    NgxPaginationModule,\n    LazyLoadImageModule,\n    FormsModule,\n    ReactiveFormsModule,\n    Ng2TelInputModule,\n    SharedModule,\n    TranslateModule,\n    MalihuScrollbarModule.forRoot(),\n  ],\n  declarations: [\n    CompaniesComponent,\n    AddCompanyComponent\n  ]\n})\nexport class CompaniesModule { }\n"],"sourceRoot":""}