{"version":3,"sources":["webpack:///./src/app/layout/acl/acl.component.css","webpack:///./src/app/layout/acl/acl.component.html","webpack:///./src/app/layout/acl/acl.component.ts","webpack:///./src/app/layout/acl/acl.module.ts","webpack:///./src/app/layout/acl/add-acl/add-acl.component.css","webpack:///./src/app/layout/acl/add-acl/add-acl.component.html","webpack:///./src/app/layout/acl/add-acl/add-acl.component.ts"],"names":[],"mappings":"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","file":"acl-acl-module.js","sourcesContent":["module.exports = \"\"","module.exports = \"\\n<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-6 col-6\\\">\\n          <div class=\\\"title-group\\\">\\n            <h5>{{'viewACL.label' | translate}}</h5>\\n            <p>{{'table.pagination.showing' | translate}} {{parameter?.items?.length}} {{'table.pagination.outof' | translate}} {{parameter.total}}</p>\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-6 col-6\\\">\\n          <div class=\\\"btn-cont text-right\\\">\\n              <a *ngIf=\\\"admin?.admin_acl['Access Controls']?.can_create==1\\\" class=\\\"btn btn-primary\\\" href=\\\"javascript://\\\" routerLink=\\\"/dashboard/access-control-mgt/add-acl-user/0\\\">{{'table.addNewBtn' | translate}}</a>\\n          </div>\\n        </div>\\n    </div>\\n  \\n    <div class=\\\"white-bg\\\">\\n        <div class=\\\"tabel-section\\\">\\n          <div class=\\\"table-responsive\\\">\\n            <table class=\\\"table table-striped table-align-left\\\">\\n              <tr>\\n                <th style=\\\"width:6%\\\">&nbsp;</th>\\n                <th style=\\\"width:20%\\\">\\n                  <div class=\\\"table-search\\\">\\n                      <label>{{'table.th.name' | translate}}</label>\\n                      <div class=\\\"searh-3\\\">\\n                        <input type=\\\"text\\\" [(ngModel)]=\\\"parameter.name\\\" (keyup.enter)=\\\"getAclUsers(parameter.page, parameter.name, parameter.phone, parameter.email)\\\" name=\\\"\\\">\\n                        <button *ngIf=\\\"parameter.name\\\" (click)=\\\"getAclUsers(parameter.page, parameter.name, parameter.phone, parameter.email)\\\"><i class=\\\"fa fa-search\\\"></i></button>\\n                      </div>\\n                  </div>\\n                </th>\\n                <th style=\\\"width:20%; text-align:left;\\\">\\n                  <div class=\\\"table-search\\\">\\n                      <label>{{'table.th.contactNumber' | translate}}</label>\\n                      <div class=\\\"searh-3\\\">\\n                        <input type=\\\"text\\\" [(ngModel)]=\\\"parameter.phone\\\" (keyup.enter)=\\\"getAclUsers(parameter.page, parameter.name, parameter.phone, parameter.email)\\\" name=\\\"\\\">\\n                        <button *ngIf=\\\"parameter.phone\\\" (click)=\\\"getAclUsers(parameter.page, parameter.name, parameter.phone, parameter.email)\\\"><i class=\\\"fa fa-search\\\"></i></button>\\n                      </div>\\n                  </div>\\n                </th>\\n                <th style=\\\"width:20%\\\">\\n                  <div class=\\\"table-search\\\">\\n                    <label>{{'table.th.emailAddress' | translate}}</label>\\n                      <div class=\\\"searh-3\\\">\\n                        <input type=\\\"text\\\" [(ngModel)]=\\\"parameter.email\\\" (keyup.enter)=\\\"getAclUsers(parameter.page, parameter.name, parameter.phone, parameter.email)\\\" name=\\\"\\\">\\n                        <button *ngIf=\\\"parameter.email\\\" (click)=\\\"getAclUsers(parameter.page, parameter.name, parameter.phone, parameter.email)\\\"><i class=\\\"fa fa-search\\\"></i></button>\\n                      </div>\\n                  </div>\\n                </th>\\n                <th style=\\\"width:10%; vertical-align: top;\\\">\\n                  <div class=\\\"table-search\\\">\\n                    <label>{{'table.th.empId' | translate}}</label>\\n                  </div>\\n                </th>\\n                <th style=\\\"width:14%\\\">\\n                  &nbsp;\\n                </th>\\n              </tr>\\n        \\n              <tr *ngFor=\\\"let item of parameter.items| paginate: { itemsPerPage: parameter.itemsPerPage, currentPage: parameter.page, totalItems: parameter.total }; let i=index\\\">\\n                <td> \\n                    <img *ngIf=\\\"item.image\\\" [defaultImage]=\\\"item.image| img:'thumb'\\\" [lazyLoad]=\\\"item.image\\\" class=\\\"rounded-circle\\\" alt=\\\"img\\\">\\n                    <img *ngIf=\\\"!item.image\\\" class=\\\"rounded-circle\\\" src=\\\"assets/img/default_img.png\\\" alt=\\\"img\\\">\\n                </td>\\n                <td class=\\\"text-left\\\">\\n                  <span class=\\\"name\\\">\\n                    <a data-toggle=\\\"popover\\\" data-placement=\\\"top\\\" title=\\\"{{item.name}}\\\">\\n                      {{item.name | titlecase}}\\n                      <!-- {{admin?.admin_acl['Access Controls']?.can_delete}} -->\\n                    </a>\\n                  </span>\\n                </td>\\n                <td class=\\\"text-left\\\" *ngIf=\\\"item.phone\\\">{{item.dial_code ? item.dial_code : constant.dial_code}}-{{item.phone}}</td>\\n                <td class=\\\"text-left\\\" *ngIf=\\\"!item.phone\\\">{{'table.tr.td.NA' | translate}}</td>\\n                <td class=\\\"text-left\\\" *ngIf=\\\"item.email\\\">{{item.email}}</td>\\n                <td class=\\\"text-left\\\" *ngIf=\\\"!item.email\\\">{{'table.tr.td.NA' | translate}}</td>\\n                <td>{{item.id}}</td>\\n                <td>\\n                  <div class=\\\"table-actions\\\">\\n                    <!-- <a href=\\\"javascript://\\\" routerLink=\\\"/dashboard/access-control-mgt/add-acl-user/{{item.id}}\\\" class=\\\"icon-block edit-icon\\\"><img src=\\\"assets/img/edit.png\\\" alt=\\\"img\\\"></a> -->\\n                    <!-- <a [ngClass]=\\\"{'display-none':admin?.admin_acl['Access Controls']?.can_update==0}\\\" href=\\\"javascript://\\\" (click)=\\\"editData(item, item.id)\\\" class=\\\"icon-block edit-icon\\\"><img src=\\\"assets/img/edit.png\\\" alt=\\\"img\\\"></a> -->\\n                    <!-- <a href=\\\"javascript://\\\" class=\\\"icon-block block-icon unblock-bg\\\"><img src=\\\"assets/img/block.png\\\" alt=\\\"img\\\"></a>\\n                    <a href=\\\"javascript://\\\" class=\\\"icon-block block-icon\\\"><img src=\\\"assets/img/unblock.png\\\" alt=\\\"img\\\"></a> -->\\n                    <button title=\\\"{{'table.title.editDetails' | translate}}\\\" [disabled]=\\\"admin?.admin_acl['Access Controls']?.can_update==0\\\" (click)=\\\"editData(item, item.id)\\\" class=\\\"action-icon\\\"><img src=\\\"assets/img/edit.png\\\" alt=\\\"img\\\"></button>\\n                    <button [disabled]=\\\"admin?.admin_acl['Access Controls']?.can_delete==0\\\"\\n                        (click)=\\\"blockUnblockPopup(i, item.id, item.is_blocked==1?0:1, parameter.type)\\\" \\n                        title=\\\"{{item.is_blocked==1 ? ('table.title.unblock' | translate) : ('table.title.block' | translate)}}\\\" [ngClass]=\\\"{'unblock-bg':item.is_blocked==1}\\\"\\n                        class=\\\"action-icon\\\"><img src=\\\"assets/img/block.png\\\" alt=\\\"img\\\">\\n                    </button>\\n                  </div>\\n                </td>\\n              </tr>\\n            </table>\\n          </div>\\n        </div>\\n  \\n        <div class=\\\"center\\\" *ngIf=\\\"parameter.total == 0\\\">\\n          <img src=\\\"assets/img/404-error.png\\\">\\n        </div>\\n    </div>\\n    \\n    <div class=\\\"btn-cont text-right marginT15\\\" *ngIf=\\\"parameter.total\\\">\\n      <pagination-controls class=\\\"my-pagination\\\" (pageChange)=\\\"getPage($event)\\\"></pagination-controls>\\n    </div>\\n    \\n  </div>\\n  \\n\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { Router } from '@angular/router';\nimport { Location } from '@angular/common';\nimport { ACL, Permission } from 'src/app/models/acl.model';\nimport { IProperty } from 'src/app/common/property';\nimport { Constant } from 'src/app/common/constants';\nimport { AdminService } from 'src/app/services/admin.service';\nimport { CommonService } from 'src/app/services/common.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { TranslateService } from '@ngx-translate/core';\ndeclare let swal: any;\n\n@Component({\n  selector: 'app-acl',\n  templateUrl: './acl.component.html',\n  styleUrls: ['./acl.component.css']\n})\nexport class AclComponent implements OnInit {\n\n  model: ACL;\n  url: any[];\n  image1: any;\n  @ViewChild('modalOpen') modalOpen: ElementRef;\n  @ViewChild('modalClose') modalClose: ElementRef;\n  public parameter: IProperty = {};\n  initialCountry: any;\n\n  constructor(public constant: Constant,\n    public admin: AdminService, private cs: CommonService,\n    public sanitization: DomSanitizer, private router: Router,\n    private spinner: NgxSpinnerService,\n    private location: Location,\n    private translate: TranslateService\n  ) {\n    const dd = this.cs.checkAccess('Broker Management', 'can_read');\n    if (dd === 0) {\n      this.location.back();\n    }\n  }\n\n  ngOnInit() {\n    this.model = new ACL();\n    this.model.country_code = this.constant.country_code;\n    this.model.dial_code = this.constant.dial_code;\n    this.parameter.itemsPerPage = this.constant.itemsPerPage;\n    this.parameter.page = this.constant.p;\n    this.model.id = '';\n    this.initialCountry = { initialCountry: this.constant.country_code };\n    // this.getAclList();\n    this.getAclUsers(this.parameter.page, '', '', '');\n  }\n\n  closeModal() {\n    this.model = new ACL;\n    this.modalClose.nativeElement.click();\n  }\n\n  getPage(page) {\n    this.parameter.page = page;\n    this.getAclUsers(this.parameter.page, this.parameter.name, this.parameter.phone, this.parameter.email);\n  }\n\n  getAclList() {\n    this.admin.postDataApi('getAclList', {})\n      .subscribe(\n        success => {\n          success.data.forEach(element => {\n            const e = new Permission();\n            e.acl_id = element.id; const acl = { name: element.name }; e.acl = acl;\n            e.can_create = 1; e.can_update = 1; e.can_read = 1; e.can_delete = 1; e.can_purge = 1;\n            this.model.admin_acl.push(e);\n          });\n        });\n  }\n\n  getAclUsers(page: any, name: string, phone: string, email: string) {\n    this.spinner.show();\n    this.admin.postDataApi('getAclUsers', this.parameter)\n      .subscribe(\n        success => {\n          this.spinner.hide();\n          this.parameter.items = success.data;\n          this.parameter.total = success.total;\n        }, error => {\n          this.spinner.hide();\n        });\n  }\n\n  setPermission(param: any, index: any) {\n    this.model.admin_acl[index][param] = this.model.admin_acl[index][param] &&\n      this.model.admin_acl[index][param] === 1 ? 0 : 1;\n  }\n\n  changeListner(event) {\n    this.parameter.image = event.target.files[0];\n    this.parameter.icon = this.parameter.image;\n    const reader = new FileReader();\n    reader.onload = (e: any) => {\n      this.url = e.target.result;\n      this.image1 = this.sanitization.bypassSecurityTrustStyle(`url(${this.url})`);\n    };\n    reader.readAsDataURL(event.target.files[0]);\n  }\n\n  onCountryChange(e) {\n    this.model.country_code = e.iso2;\n    this.model.dial_code = '+' + e.dialCode;\n    this.initialCountry = { initialCountry: e.iso2 };\n  }\n\n  add(formdata: NgForm) {\n    this.parameter.url = this.model.id !== '' ? 'updateAclUser' : 'addAclUser';\n    this.admin.postDataApi(this.parameter.url, this.model)\n      .subscribe(\n        success => {\n          if (success.success === '0') {\n            swal(this.translate.instant('swal.error'), success.message, 'error');\n          } else {\n            this.modalClose.nativeElement.click();\n            formdata.reset();\n            const text = this.model.id === '' ?\n                    this.translate.instant('message.success.addedSuccessfully') :\n                    this.translate.instant('message.success.updatedSuccessfully');\n            swal(this.translate.instant('swal.success'), text, 'success');\n            if (this.parameter.items.length < 10) {\n              if (this.model.id !== '') {\n                this.parameter.items[this.parameter.index] = success.data;\n              } else {\n                this.parameter.items.push(success.data);\n              }\n            }\n          }\n        });\n  }\n\n  editData(item, id) {\n    this.cs.data = item;\n    this.router.navigate(['/dashboard/access-control-mgt/add-acl-user', id]);\n  }\n\n  blockUnblockPopup(index, id, flag, user_type) {\n    this.parameter.index = index;\n    this.parameter.title = this.translate.instant('message.question.areYouSure');\n    switch (flag) {\n      case 0:\n      this.parameter.text = this.translate.instant('message.question.wantToUnblockUser');\n      this.parameter.successText = this.translate.instant('message.success.unblockedSuccessfully');\n        break;\n      case 1:\n      this.parameter.text = this.translate.instant('message.question.wantToBlockUser');\n      this.parameter.successText = this.translate.instant('message.success.blockedSuccessfully');\n        break;\n    }\n\n    swal({\n      html: this.parameter.title + '<br>' + this.parameter.text,\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: this.constant.confirmButtonColor,\n      cancelButtonColor: this.constant.cancelButtonColor,\n      confirmButtonText: 'Yes'\n    }).then((result) => {\n      if (result.value) {\n        this.blockAdmin(index, id, flag, user_type);\n      }\n    });\n  }\n\n\n  blockAdmin(index, id, flag, user_type) {\n    this.parameter.index = index;\n    this.admin.postDataApi('blockAclUser', { id: id, flag: flag })\n      .subscribe(\n        success => {\n          swal(this.translate.instant('swal.success'), this.parameter.successText, 'success');\n          this.parameter.items[this.parameter.index]['is_blocked'] = flag;\n        });\n  }\n}\n","// third party libraries\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { LazyLoadImageModule } from 'ng-lazyload-image';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Ng2TelInputModule } from 'ng2-tel-input';\n\n// general componets\nimport { AclComponent } from './acl.component';\nimport { AddAclComponent } from './add-acl/add-acl.component';\nimport { AclUserGuard } from 'src/app/guards/acl-user.guard';\nimport { ImgPipe } from 'src/app/pipes/img.pipe';\nimport { SharedModule } from 'src/app/modules/shared.module';\nimport { TranslateModule } from '@ngx-translate/core';\n\n\nconst routes: Routes = [\n  // { path: '', component: AclComponent, canActivate: [AclUserGuard]},\n  // { path: 'add-acl-user/:id', component: AddAclComponent }\n  { path: '', component: AclComponent, canActivate: [AclUserGuard], data: { roles: ['Access Controls', 'can_read', ''] } },\n  {\n    path: 'add-acl-user/:id', component: AddAclComponent,\n    canActivate: [AclUserGuard], data: { roles: ['Access Controls', 'can_create', ''] }\n  }\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes),\n    CommonModule,\n    NgxSpinnerModule,\n    LazyLoadImageModule,\n    NgxPaginationModule,\n    FormsModule,\n    ReactiveFormsModule,\n    Ng2TelInputModule,\n    SharedModule,\n    TranslateModule\n  ],\n  declarations: [\n    AclComponent,\n    AddAclComponent\n  ]\n})\nexport class AclModule { }\n","module.exports = \"\"","module.exports = \"\\n<div class=\\\"container-fluid\\\">\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n      <div class=\\\"title-group\\\">\\n          <h5>{{model.id!='' ? ('viewACL.editACLUser' | translate) : ('viewACL.addACLUser' | translate)}}</h5>\\n          <div class=\\\"spacer30\\\"></div>\\n      </div>\\n    </div>\\n</div>\\n<div class=\\\"white-bg padding40\\\">\\n    <div class=\\\"row\\\">\\n    <form role=\\\"form\\\" ngNativeValidate #addForm=\\\"ngForm\\\" (ngSubmit)=\\\"add(addForm)\\\">\\n      <div class=\\\"col-xl-12 col-lg-12 col-md-12 col-12\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-6\\\">\\n                <div class=\\\"add-img\\\" style=\\\"display:flex;\\\">\\n                    <img *ngIf=\\\"model?.image\\\" [src]=\\\"model?.image\\\" [defaultImage]=\\\"model?.image| img:'thumb'\\\" [lazyLoad]=\\\"model?.image\\\" style=\\\"object-fit: cover; width: 100%;\\\">\\n                    <label *ngIf=\\\"model?.image\\\">\\n                      <input accept=\\\"image/*\\\" name=\\\"image\\\" class=\\\"image\\\" (change)=\\\"changeListner($event, 'img_loader', 'image')\\\" type=\\\"file\\\">\\n                    </label>\\n                    <label *ngIf=\\\"!model?.image\\\">{{'addForm.image' | translate}}</label>\\n                    <input *ngIf=\\\"!model?.image\\\" accept=\\\"image/*\\\" name=\\\"image\\\" class=\\\"image\\\" (change)=\\\"changeListner($event, 'img_loader', 'image')\\\" type=\\\"file\\\">\\n                    <div *ngIf=\\\"model.img_loader\\\" class=\\\"loaderr\\\"></div>\\n                </div>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n                <div class=\\\"btn-cont text-right\\\">\\n                    <button *ngIf=\\\"model.id==''\\\" type=\\\"submit\\\" [disabled]=\\\"!addForm.valid\\\" class=\\\"btn btn-primary\\\">{{'addForm.addBtn' | translate}}</button>\\n                    <button *ngIf=\\\"model.id!=''\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">{{'addForm.updateBtn' | translate}}</button>\\n                </div>\\n            </div>\\n            <div class=\\\"col-12\\\">\\n                <div class=\\\"spacer40\\\"></div>\\n            </div>\\n            <div class=\\\"col-12\\\">\\n                <div class=\\\"form-group-2\\\">\\n                  <label>{{'addForm.name' | translate}} <span class=\\\"color-red\\\">*</span></label>\\n                  <input [pattern]=\\\"constant.onlyWhiteSpaces\\\" autocomplete=\\\"off\\\" required type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"model.name\\\" name=\\\"name\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"col-12\\\">\\n                <div class=\\\"form-group-2\\\">\\n                  <label>{{'addForm.contactNumber' | translate}} <span class=\\\"color-red\\\">*</span></label>\\n                  <input minlength=\\\"6\\\" maxlength=\\\"16\\\" autocomplete=\\\"off\\\" type=\\\"text\\\" [pattern]=\\\"constant.phonePattern\\\" class=\\\"form-control\\\" id=\\\"phone\\\" required minlength=\\\"1\\\" [(ngModel)]=\\\"model.phone\\\" name=\\\"phone\\\"\\n                        ng2TelInput [ng2TelInputOptions]=\\\"initialCountry\\\" (countryChange)=\\\"onCountryChange($event)\\\" />\\n                </div>\\n            </div>\\n            <div class=\\\"col-12\\\">\\n                <div class=\\\"form-group-2\\\">\\n                  <label>{{'addForm.emailId' | translate}} <span class=\\\"color-red\\\">*</span></label>\\n                  <input (keydown.space)=\\\"$event.preventDefault();\\\" autocomplete=\\\"off\\\" required [pattern]=\\\"constant.emailPattern\\\" type=\\\"email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"model.email\\\" name=\\\"email\\\">\\n                </div>\\n            </div>\\n          </div>\\n          <div class=\\\"access-controls\\\">\\n              <div class=\\\"select-controls select-controls-1\\\" *ngFor=\\\"let permission of model.admin_acl; let i=index\\\">\\n              <label class=\\\"cust-check-bx2\\\" [ngClass]=\\\"{'access-control11':permission.can_create==1 || permission.can_read==1 || permission.can_update==1 || permission.can_delete==1 || permission.can_purge==1}\\\">{{permission?.acl?.name}}\\n              <input (click)=\\\"expandBox(i)\\\" type=\\\"checkbox\\\" [checked]=\\\"permission.can_create == 1 || permission.can_read==1 || permission.can_update==1 || permission.can_delete==1 || permission.can_purge==1 ? 'checked': ''\\\">\\n              <span class=\\\"checkmark\\\"></span>\\n              </label>\\n              \\n              <div class=\\\"clearfix\\\"></div>\\n              <div *ngIf=\\\"permission.show\\\" id=\\\"broker-seller-dev\\\" class=\\\"inner-select\\\">\\n                <label class=\\\"cust-check-bx\\\" [ngClass]=\\\"{'inner-checked':permission.can_create==1}\\\">{{'addForm.canCreate' | translate}}\\n                    <input type=\\\"checkbox\\\" [checked]=\\\"permission.can_create == 1 ? 'checked': ''\\\"  (click)=\\\"setPermission('can_create', i)\\\">\\n                    <span class=\\\"checkmark\\\"></span>\\n                </label>\\n                <label class=\\\"cust-check-bx\\\" [ngClass]=\\\"{'inner-checked':permission.can_read==1}\\\">{{'addForm.canRead' | translate}}\\n                    <input type=\\\"checkbox\\\" [checked]=\\\"permission.can_read == 1 ? 'checked': ''\\\"  (click)=\\\"setPermission('can_read', i)\\\">\\n                    <span class=\\\"checkmark\\\"></span>\\n                </label>\\n                <label class=\\\"cust-check-bx\\\" [ngClass]=\\\"{'inner-checked':permission.can_update==1}\\\">{{'addForm.canUpdate' | translate}}\\n                    <input type=\\\"checkbox\\\" [checked]=\\\"permission.can_update == 1 ? 'checked': ''\\\"  (click)=\\\"setPermission('can_update', i)\\\">\\n                    <span class=\\\"checkmark\\\"></span>\\n                </label>\\n                <label class=\\\"cust-check-bx\\\" [ngClass]=\\\"{'inner-checked':permission.can_delete==1}\\\">{{'addForm.canBlockUnblock' | translate}}\\n                    <input type=\\\"checkbox\\\" [checked]=\\\"permission.can_delete == 1 ? 'checked': ''\\\"  (click)=\\\"setPermission('can_delete', i)\\\">\\n                    <span class=\\\"checkmark\\\"></span>\\n                </label>\\n                <label *ngIf=\\\"permission?.acl?.name == 'User Management' || permission?.acl?.name == 'Property Management'\\n                || permission?.acl?.name == 'Agencies Management'\\n                || permission?.acl?.name == 'Companies Management'\\n                || permission?.acl?.name == 'Managers Management'\\n                || permission?.acl?.name == 'Developers Management'\\n                || permission?.acl?.name == 'Outside Broker Management'\\n                || permission?.acl?.name == 'Seller Management'\\n                || permission?.acl?.name == 'Buyer Management'\\n                || permission?.acl?.name == 'Broker Management'\\n                || permission?.acl?.name == 'Closer Management'\\n                || permission?.acl?.name == 'Data Collector Management'\\n                || permission?.acl?.name == 'Bank Management'\\n                || permission?.acl?.name == 'Templates'\\n                || permission?.acl?.name == 'Building Management' || permission?.acl?.name == 'Notaries Management'\\\" \\n                  class=\\\"cust-check-bx\\\" [ngClass]=\\\"{'inner-checked':permission.can_purge==1}\\\">{{'addForm.canDelete' | translate}}\\n                    <input type=\\\"checkbox\\\" [checked]=\\\"permission.can_purge == 1 ? 'checked': ''\\\"  (click)=\\\"setPermission('can_purge', i)\\\">\\n                    <span class=\\\"checkmark\\\"></span>\\n                </label>\\n                <label class=\\\"cust-check-bx\\\" [ngClass]=\\\"{'inner-checked':permission.can_crud==1}\\\">{{'addForm.canCRUD' | translate}}\\n                    <input type=\\\"checkbox\\\" [checked]=\\\"permission.can_crud == 1 ? 'checked': ''\\\"  (click)=\\\"setPermission('can_crud', i)\\\">\\n                    <span class=\\\"checkmark\\\"></span>\\n                </label>\\n                <br>\\n              </div>\\n              <div class=\\\"clearfix\\\"></div>\\n            </div>\\n            \\n            <!-- inner-checked -->\\n                  <!-- <div class=\\\"select-controls\\\">\\n              <label class=\\\"cust-check-bx2\\\">Data Collector\\n              <input id=\\\"dc\\\" type=\\\"checkbox\\\">\\n              <span class=\\\"checkmark\\\"></span>\\n              </label>\\n              <div class=\\\"clearfix\\\"></div>\\n                    <div style=\\\"display:none;\\\" id=\\\"data-collector\\\" class=\\\"inner-select\\\">\\n                <label class=\\\"cust-check-bx\\\">Abc\\n                              <input type=\\\"checkbox\\\">\\n                              <span class=\\\"checkmark\\\"></span>\\n                  </label>\\n                  <label class=\\\"cust-check-bx inner-checked\\\">Lorem ipsum\\n                              <input type=\\\"checkbox\\\" checked=\\\"checked\\\">\\n                              <span class=\\\"checkmark\\\"></span>\\n                  </label>\\n                  <label class=\\\"cust-check-bx\\\">xyz\\n                              <input type=\\\"checkbox\\\">\\n                              <span class=\\\"checkmark\\\"></span>\\n                  </label>\\n                  <label class=\\\"cust-check-bx\\\">Abc\\n                              <input type=\\\"checkbox\\\">\\n                              <span class=\\\"checkmark\\\"></span>\\n                  </label>\\n                  <label class=\\\"cust-check-bx inner-checked\\\">Lorem ipsum\\n                              <input type=\\\"checkbox\\\" checked=\\\"checked\\\">\\n                              <span class=\\\"checkmark\\\"></span>\\n                  </label>\\n                  <label class=\\\"cust-check-bx\\\">xyz\\n                              <input type=\\\"checkbox\\\">\\n                              <span class=\\\"checkmark\\\"></span>\\n                  </label>\\n  \\n              </div>\\n                </div> -->\\n  \\n  \\n                \\n            </div>\\n      </div>\\n      </form>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute, Router } from '@angular/router';\nimport { NgForm } from '@angular/forms';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { IProperty } from 'src/app/common/property';\nimport { Constant } from 'src/app/common/constants';\nimport { CommonService } from 'src/app/services/common.service';\nimport { AdminService } from 'src/app/services/admin.service';\nimport { ACL, Permission } from 'src/app/models/acl.model';\nimport { TranslateService } from '@ngx-translate/core';\ndeclare let swal: any;\n\n@Component({\n  selector: 'app-add-acl',\n  templateUrl: './add-acl.component.html',\n  styleUrls: ['./add-acl.component.css']\n})\nexport class AddAclComponent implements OnInit {\n\n  public parameter: IProperty = {};\n  initialCountry: any;\n  show = false;\n  image: any;\n  model: ACL;\n  allAcl = [];\n  constructor(public constant: Constant, private cs: CommonService,\n    private admin: AdminService, private route: ActivatedRoute,\n    private spinner: NgxSpinnerService,\n    private router: Router,\n    private translate: TranslateService\n  ) {\n    this.admin.loginData$.subscribe(res => {\n      this.parameter.admin_id = res['id'];\n    });\n  }\n\n  ngOnInit() {\n    this.model = new ACL();\n    this.model.img_loader = false;\n    this.model.country_code = this.constant.country_code;\n    this.model.dial_code = this.constant.dial_code;\n    this.parameter.itemsPerPage = this.constant.itemsPerPage;\n    this.parameter.p = this.constant.p;\n    this.initialCountry = {initialCountry: this.constant.country_code};\n    this.parameter.sub = this.route.params.subscribe(params => {\n      if (params['id'] !== '0') {\n        this.model.id = params['id'];\n        this.getAclUserById(this.model.id);\n      } else {\n        this.model.id = '';\n        this.getAclList();\n      }\n    });\n  }\n\n  getAclUserById(id: string) {\n    this.spinner.show();\n    this.admin.postDataApi('getAclUserById', {'id': id})\n    .subscribe(\n      success => {\n        this.spinner.hide();\n        this.model = success.data;\n        this.image = this.model.image;\n        this.model.admin_acl = success.data.admin_acl;\n      }, error => {\n        this.spinner.hide();\n      });\n  }\n\n  set() {\n    this.show = true;\n  }\n\n  changeListner(event: any, paramLoader: string, param: any) {\n    if (event.target.files[0].size > this.constant.fileSizeLimit) {\n      swal(this.translate.instant('swal.error'), this.translate.instant('message.error.fileSizeExceeds'), 'error');\n      return false;\n    }\n    this.model[paramLoader] = true;\n    const reader = new FileReader();\n    reader.onload = (e: any) => {\n      this.model[param] = e.target.result;\n      this.cs.saveImage(event.target.files[0]).subscribe(\n        success => {\n          this.model[paramLoader] = false;\n          this.model[param] = success['data'].image;\n        }\n      );\n    };\n    reader.readAsDataURL(event.target.files[0]);\n  }\n\n  onCountryChange(e) {\n    this.model.country_code = e.iso2;\n    this.model.dial_code = '+' + e.dialCode;\n    this.initialCountry = {initialCountry: e.iso2};\n  }\n\n  getAclList() {\n    this.spinner.show();\n    this.admin.postDataApi('getAclList', {})\n      .subscribe(\n        success => {\n          this.allAcl = success.data;\n          this.spinner.hide();\n          success.data.forEach(element => {\n            const e = new Permission();\n            const acl = {name: element.name};\n            e.acl_id = element.id; e.acl = acl; e.show = false;\n            e.can_create = 1; e.can_update = 1; e.can_read = 1; e.can_delete = 1; e.can_purge = 1; e.can_crud = 1;\n            this.model.admin_acl.push(e);\n          });\n        }, error => {\n          this.spinner.hide();\n        });\n  }\n\n  expandBox(index: any) {\n    this.model.admin_acl[index].show = this.model.admin_acl[index].show === true ? false : true;\n  }\n\n  setPermission(param: any, index: any) {\n    if (param === 'can_crud') {\n      this.model.admin_acl[index]['can_create'] = this.model.admin_acl[index]['can_crud'] === 1 ? 0 : 1;\n      this.model.admin_acl[index]['can_read'] = this.model.admin_acl[index]['can_crud'] === 1 ? 0 : 1;\n      this.model.admin_acl[index]['can_update'] = this.model.admin_acl[index]['can_crud'] === 1 ? 0 : 1;\n      this.model.admin_acl[index]['can_delete'] = this.model.admin_acl[index]['can_crud'] === 1 ? 0 : 1;\n      this.model.admin_acl[index]['can_purge'] = this.model.admin_acl[index]['can_crud'] === 1 ? 0 : 1;\n      this.model.admin_acl[index]['can_crud'] = this.model.admin_acl[index]['can_crud'] === 1 ? 0 : 1;\n    } else {\n      this.model.admin_acl[index][param] = this.model.admin_acl[index][param] &&\n      this.model.admin_acl[index][param] === 1 ? 0 : 1;\n      this.model.admin_acl[index]['can_crud'] = this.model.admin_acl[index]['can_create'] === 1 &&\n      this.model.admin_acl[index]['can_read'] === 1 && this.model.admin_acl[index]['can_update'] === 1 &&\n      this.model.admin_acl[index]['can_delete'] === 1 && this.model.admin_acl[index]['can_purge'] === 1 ? 1 : 0;\n    }\n  }\n\n\n  add(formData: NgForm) {\n    if (this.model.img_loader) {\n      swal(this.translate.instant('swal.error'), this.translate.instant('message.error.uploadingImage'), 'error');\n      return;\n    }\n    this.spinner.show();\n    this.admin.postDataApi('addAclUser', this.model)\n      .subscribe(\n        success => {\n          this.spinner.hide();\n          if (success.success === '0') {\n            swal(this.translate.instant('swal.error'), success.message, 'error');\n          } else {\n            const text = this.model.id === '' ?\n                    this.translate.instant('message.success.addedSuccessfully') :\n                    this.translate.instant('message.success.updatedSuccessfully');\n            swal(this.translate.instant('swal.success'), text, 'success');\n            if (this.model.id === '') {\n              // this.model.image = '';\n              // formData.reset();\n              // this.getAclList();\n              this.router.navigate(['/dashboard/access-control-mgt']);\n            } else {\n              if (this.parameter.admin_id === this.model.id) {\n                this.admin.login.next(success.data);\n                this.admin.permissions = success.data.permissions ? success.data.permissions : {};\n                const dd = success.data.m.map((obj, index) => {\n                  const key =  Object.keys(obj)[0];\n                  this.admin.admin_acl[key] =  obj[key];\n                });\n              }\n            }\n          }\n        }, error => {\n          this.spinner.hide();\n        });\n  }\n}\n"],"sourceRoot":""}