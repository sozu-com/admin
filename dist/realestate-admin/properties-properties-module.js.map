{"version":3,"sources":["webpack:///./src/app/layout/common-blocks/project-block/project-block.component.css","webpack:///./src/app/layout/common-blocks/project-block/project-block.component.html","webpack:///./src/app/layout/common-blocks/project-block/project-block.component.ts","webpack:///./src/app/layout/properties/add-property/add-property.component.css","webpack:///./src/app/layout/properties/add-property/add-property.component.html","webpack:///./src/app/layout/properties/add-property/add-property.component.ts","webpack:///./src/app/layout/properties/properties.component.css","webpack:///./src/app/layout/properties/properties.component.html","webpack:///./src/app/layout/properties/properties.component.ts","webpack:///./src/app/layout/properties/properties.module.ts","webpack:///./src/app/layout/properties/property-details/property-details.component.css","webpack:///./src/app/layout/properties/property-details/property-details.component.html","webpack:///./src/app/layout/properties/property-details/property-details.component.ts","webpack:///./src/app/models/addProperty.model.ts","webpack:///./src/app/pipes/filter-by-id.pipe.ts","webpack:///./src/app/pipes/filter-by-name.pipe.ts"],"names":[],"mappings":"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","file":"properties-properties-module.js","sourcesContent":["module.exports = \"\"","module.exports = \"<div *ngIf=\\\"data\\\" class=\\\"project-des-bx white-bg\\\" (click)=\\\"setBuildingId(data)\\\">\\n  <!-- <div class=\\\"price\\\">\\n    <input type=\\\"radio\\\" [(ngModel)]=\\\"buildingId\\\" name=\\\"buildingId\\\" (change)=\\\"setBuildingId(data)\\\">\\n  </div> -->\\n  <div class=\\\"fig-block\\\" (click)=\\\"setBuildingId(data)\\\">\\n    <img [src]=\\\"data?.main_image| img:'thumb'\\\" onerror='src=\\\"assets/img/placeholder-img.png\\\"' alt=\\\"img\\\">\\n  </div>\\n  <div class=\\\"project-des-content\\\">\\n    <small title=\\\"Developer Name\\\">{{data?.developer?.name ? data?.developer?.name : 'NA'}}</small>\\n    <!-- <a routerLink=\\\"/dashboard/projects/details/{{data.id}}\\\"> -->\\n    <h5 title=\\\"Building Name\\\">{{data?.name.slice(0, 35)}}</h5>\\n    <!-- </a> -->\\n    <p class=\\\"p12\\\">{{data?.address.slice(0, 90)}}</p>\\n\\n    <p class=\\\"p13\\\">\\n        <span *ngFor=\\\"let conf1 of data?.configurations; let k=index\\\">\\n            {{conf1?.config?.name}}<span *ngIf=\\\"k<data?.configurations?.length-1\\\">,</span>\\n        </span>\\n        <span *ngIf=\\\"data?.configurations?.length==0\\\">NA</span>\\n    </p>\\n  </div>\\n</div>\\n\"","import { Component, OnInit, Input, ViewChild, ElementRef, Output, EventEmitter } from '@angular/core';\nimport { Constant } from './../../../common/constants';\nimport { IProperty } from './../../../common/property';\nimport { AdminService } from '../../../services/admin.service';\n\n@Component({\n  selector: 'app-project-block',\n  templateUrl: './project-block.component.html',\n  styleUrls: ['./project-block.component.css']\n})\nexport class ProjectBlockComponent implements OnInit {\n\n  buildingId: string;\n  @Input('data') data: any;\n  @Input('index') index: number;\n  @Output('setBuilding') setBuilding = new EventEmitter();\n  public parameter: IProperty = {};\n  constructor(public constant: Constant, private admin: AdminService) { }\n\n  ngOnInit() {\n    this.parameter.page = this.constant.p;\n  }\n\n\n  setBuildingId(data: any) {\n    console.log('aaaaaa');\n    this.setBuilding.emit(data);\n    console.log('1', data);\n  }\n}\n","module.exports = \".upload-cover-img{\\n    /* background-size: contain;background-repeat: no-repeat; */\\n}\\n.width100{\\n    width: 100%;\\n}\\n.paddingleft0{\\n    padding-left: 0px;\\n}\\nagm-map {\\n    height: 300px;\\n}\\n.floor-plan{\\n    -o-object-fit: cover;\\n       object-fit: cover;\\n    width: 100%;\\n    height: auto;\\n}\\n.upload-cover-img{\\n    display: flex;\\n}\"","module.exports = \"<ngx-loading [show]=\\\"parameter.loading\\\"></ngx-loading>\\n<div class=\\\"white-bg padding15\\\">\\n  <div class=\\\"row\\\">\\n    <div class=\\\"col-md-6\\\">\\n      <div class=\\\"title-group\\\">\\n        <h5 *ngIf=\\\"!editMode\\\"><a routerLink=\\\"/dashboard/properties/view-properties\\\" href=\\\"javascript://\\\"><i\\n              class=\\\"fa fa-angle-double-left\\\"></i> </a> &nbsp;&nbsp;Add New Property</h5>\\n        <h5 *ngIf=\\\"editMode\\\"> <a routerLink=\\\"/dashboard/properties/view-properties\\\" href=\\\"javascript://\\\"><i\\n              class=\\\"fa fa-angle-double-left\\\"></i> </a> &nbsp;&nbsp;Edit Property {{name}}</h5>\\n      </div>\\n    </div>\\n    <div class=\\\"col-md-6 btn-cont\\\">\\n      <!-- <app-add-lead *ngIf=\\\"this.parameter?.property_id && editMode\\\"  [property_id]=\\\"parameter.property_id\\\"></app-add-lead> -->\\n    </div>\\n  </div>\\n</div>\\n\\n<!-- <ngx-loading [show]=\\\"parameter.loading\\\"></ngx-loading> -->\\n\\n<div class=\\\"spacer10\\\"></div>\\n\\n<div class=\\\"white-bg add-property padding20\\\">\\n  <div class=\\\"steps\\\">\\n    <ul class=\\\"d-flex\\\">\\n      <!-- <li [ngClass]=\\\"{'current': tab == 0}\\\"><span></span><a>Tag a Building</a></li>\\n      <li [ngClass]=\\\"{'current': tab == 1}\\\"><span></span><a>Create Draft</a></li>\\n      <li [ngClass]=\\\"{'current': tab == 2}\\\"><span></span><a>Additional Info</a></li>\\n      <li [ngClass]=\\\"{'current': tab == 3}\\\"><span></span><a>Preferable Buyers</a></li>\\n      <li [ngClass]=\\\"{'current': (tab == 4) || (tab == 5)}\\\"><span></span><a>Custom</a></li> -->\\n      <li [ngClass]=\\\"{'current': tab == 0}\\\"><span></span><a (click)=\\\"setTab(0)\\\">Tag a Building</a></li>\\n      <li [ngClass]=\\\"{'current': tab == 1}\\\"><span></span><a (click)=\\\"setTab(1)\\\">Create Draft</a></li>\\n      <li [ngClass]=\\\"{'current': tab == 2}\\\"><span></span><a (click)=\\\"setTab(2)\\\">Additional Info</a></li>\\n      <li [ngClass]=\\\"{'current': tab == 3}\\\"><span></span><a (click)=\\\"setTab(3)\\\">Preferable Buyers</a></li>\\n      <li [ngClass]=\\\"{'current': (tab == 4) || (tab == 5)}\\\"><span></span><a (click)=\\\"setTab(4)\\\">Custom</a></li>\\n    </ul>\\n  </div>\\n</div>\\n\\n<div class=\\\"spacer10\\\"></div>\\n\\n\\n\\n<!-- tab-1 -->\\n<div class=\\\"white-bg\\\" *ngIf=\\\"tab==0\\\">\\n  <div class=\\\"page-title\\\">\\n    <h3>Tag a Building</h3>\\n  </div>\\n\\n  <div class=\\\"padding40\\\" *ngIf=\\\"building.id && showSearch==false\\\">\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-9 col-lg-9\\\">\\n        <p class=\\\"p16\\\">Tagged Building Name</p>\\n      </div>\\n      <div class=\\\"col-sm-3 col-lg-3 btn-cont text-right\\\">\\n        <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"showSearchBox()\\\">Change</button>\\n      </div>\\n    </div>\\n    <p><b>{{building.name}}</b></p>\\n\\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-sm-9 col-lg-9\\\">\\n        <p class=\\\"p16\\\">Tagged Tower Name</p>\\n      </div>\\n    </div>\\n    <p><b>{{model?.building_towers?.tower_name ? model?.building_towers?.tower_name : 'NA'}}</b></p>\\n\\n    <div class=\\\"row\\\" *ngIf=\\\"model?.building_towers\\\">\\n      <div class=\\\"col-sm-9 col-lg-9\\\">\\n        <p class=\\\"p16\\\">Tagged Floor</p>\\n      </div>\\n    </div>\\n    <p><b>{{model?.building_towers?.tower_name ? (model?.floor_num == 0 ? 'Ground Floor' : 'Floor ' + model?.floor_num) : 'NA'}}</b></p>\\n    \\n    <div class=\\\"row\\\">\\n      <div class=\\\"col-md-12\\\">\\n        <div class=\\\"btn-cont text-right\\\">\\n          <button type=\\\"button\\\" (click)=\\\"tagBuilding()\\\" class=\\\"btn btn-primary\\\">Next</button>\\n        </div>\\n      </div>\\n    </div>\\n  </div>\\n\\n  <div class=\\\"padding40\\\" *ngIf=\\\"showSearch\\\">\\n    <label class=\\\"p16-two\\\">Search your building in Our Database</label>\\n    <div class=\\\"searh d-flex\\\">\\n      <input class=\\\"border-right-0\\\" autocomplete=\\\"off\\\" type=\\\"text\\\" #buildingname\\n        (keyup.enter)=\\\"searchBuilding(buildingname.value)\\\" name=\\\"buildingName\\\" [(ngModel)]=\\\"buildingName\\\">\\n      <button class=\\\"btn\\\" type=\\\"button\\\" (click)=\\\"searchBuilding(buildingname.value)\\\">Search</button>\\n    </div>\\n    <div class=\\\"spacer50\\\"></div>\\n    <div *ngIf=\\\"buildingLoading\\\">\\n      <img src=\\\"assets/img/loading_content.gif\\\" />\\n    </div>\\n    <div *ngIf=\\\"!buildingLoading && parameter.buildingCount != 0\\\" class=\\\"white-bg\\\">\\n      <form ngNativeValidate #tagABuilding=\\\"ngForm\\\" (ngSubmit)=\\\"getProjectById(0)\\\">\\n        \\n        <!-- buildings listing -->\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-lg-6 col-md-12 col-sm-12 col-12\\\" \\n          *ngFor=\\\"let item of searchedBuildings| paginate: { itemsPerPage: parameter.itemsPerPage, currentPage: parameter.page, totalItems: parameter.buildingCount }; let i = index\\\">\\n            <app-project-block (setBuilding)=\\\"setBuildingId($event)\\\" [data]=\\\"item\\\" [index]=\\\"i\\\"></app-project-block>\\n          </div>\\n        </div>\\n\\n        <div class=\\\"row\\\" *ngIf=\\\"searchedBuildings?.length>0\\\">\\n          <div class=\\\"col-lg-6 col-md-12 col-sm-12 col-12\\\"></div>\\n          <div class=\\\"col-lg-6 col-md-12 col-sm-12 col-12 btn-cont text-right marginT15\\\">\\n            <pagination-controls class=\\\"my-pagination\\\" (pageChange)=\\\"getPage($event)\\\"></pagination-controls>\\n          </div>\\n        </div>\\n\\n\\n\\n        <!-- <div class=\\\"tabel-section\\\">\\n          <div class=\\\"table-responsive\\\">\\n            \\n            <table class=\\\"table table-striped\\\">\\n              <tr>\\n                <th>Name</th>\\n                <th>Choose Building</th>\\n              </tr>\\n\\n              <tr *ngFor=\\\"let item of searchedBuildings; let i = index\\\">\\n                <td class=\\\"text-left\\\">{{item.name}}</td>\\n                <td>\\n                  <input type=\\\"radio\\\" required name=\\\"building_id\\\" (change)=\\\"setBuildingId(item)\\\">\\n                </td>\\n              </tr>\\n            </table>\\n          </div>\\n        </div> -->\\n\\n        <!-- towers listing wrt building id -->\\n        <diV class=\\\"row marginT20\\\" *ngIf=\\\"building.id\\\">\\n          <div class=\\\"col-lg-12 col-md-12 col-sm-12 col-12\\\">\\n            <div class=\\\"form-group-3\\\">\\n              <label class=\\\"p16-two\\\">Select tower in {{selectedBuilding?.name}} <span class=\\\"color-red\\\">*</span></label>\\n              <select title=\\\"Choose Tower\\\" name=\\\"tower\\\" [(ngModel)]=\\\"selectedTower\\\" required class=\\\"form-control\\\" (change)=\\\"setTower(selectedTower)\\\">\\n                <option value=\\\"\\\">Select Tower</option>\\n                <option *ngFor=\\\"let bt of selectedBuilding?.building_towers\\\" [ngValue]=\\\"bt\\\">\\n                  {{bt.tower_name}}</option>\\n              </select>\\n            </div>\\n          </div>  \\n        </diV>\\n\\n        <!-- floor listing wrt tower id -->\\n        <diV class=\\\"row marginT20\\\" *ngIf=\\\"selectedTower\\\">\\n          <div class=\\\"col-lg-12 col-md-12 col-sm-12 col-12\\\">\\n            <div class=\\\"form-group-3\\\">\\n              <label class=\\\"p16-two\\\">Select floor in {{selectedTower?.tower_name}} <span class=\\\"color-red\\\">*</span></label>\\n              <select title=\\\"Choose Floor\\\" required class=\\\"form-control\\\" (change)=\\\"setFloor($event.target.value)\\\">\\n                <option value=\\\"\\\">Select Floor</option>\\n                <option *ngFor=\\\"let fa of selectedTower?.floor_array; let j=index\\\" [value]=\\\"fa\\\">\\n                  {{j == 0 ? 'Ground Floor': 'Floor '+j}}</option>\\n              </select>\\n            </div>\\n          </div>  \\n        </diV>\\n  \\n\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <div class=\\\"btn-cont text-right\\\">\\n              <!-- <a class=\\\"btn-third btn\\\" href=\\\"javascript://\\\" (click)=\\\"tagBuilding()\\\">Next</a> -->\\n              <!-- <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"setTab(4)\\\">Previous</button> -->\\n              <button type=\\\"submit\\\" [disabled]=\\\"tagABuilding.invalid\\\" class=\\\"btn btn-primary\\\">Next</button>\\n            </div>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n\\n    <p *ngIf=\\\"parameter.buildingCount == 0 && showText\\\" class=\\\"p18\\\">Didn’t Found your Building? <strong><span\\n          (click)=\\\"showBuildingDetails(true)\\\" class=\\\"green-color cursor-pointer\\\">Generate a Request to add a building by\\n          our Data collectors</span></strong></p>\\n    <div *ngIf=\\\"showBuilding\\\" class=\\\"spacer50\\\"></div>\\n\\n    <form ngNativeValidate #buildingRequestForm=\\\"ngForm\\\" (ngSubmit)=\\\"buildingRequest()\\\">\\n      <div *ngIf=\\\"showBuilding\\\" class=\\\"row\\\">\\n        <div class=\\\"col-lg-7 col-md-12 col-sm-12 col-12\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-6 col-12\\\">\\n              <div class=\\\"form-group-3\\\">\\n                <label>Name of Building</label>\\n                <input autocomplete=\\\"off\\\" required class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"name\\\"\\n                  [(ngModel)]=\\\"building.name\\\" placeholder=\\\"Enter name of building\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"col-sm-6 col-12\\\">\\n              <div class=\\\"form-group-3\\\">\\n                <label>Where it is located?</label>\\n                <!-- <input class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"address\\\" [(ngModel)]=\\\"building.address\\\" placeholder=\\\"Enter address\\\"> -->\\n                <input required placeholder=\\\"search for location\\\" autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\"\\n                  spellcheck=\\\"off\\\" type=\\\"text\\\" class=\\\"form-control\\\" #search (input)=\\\"loadPlaces()\\\"\\n                  [formControl]=\\\"searchControl\\\" [(ngModel)]=\\\"building.address\\\" name=\\\"address\\\">\\n              </div>\\n            </div>\\n          </div>\\n          <label class=\\\"label-optional\\\">Developer Details (optional)</label>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-6 col-12\\\">\\n              <div class=\\\"form-group-3\\\">\\n                <label>Name of Developer</label>\\n                <input autocomplete=\\\"off\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"dev_name\\\"\\n                  [(ngModel)]=\\\"building.dev_name\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"col-sm-6 col-12\\\">\\n              <div class=\\\"form-group-3\\\">\\n                <label>Contact Number</label>\\n                <input minlength=\\\"6\\\" maxlength=\\\"16\\\" autocomplete=\\\"off\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"dev_phone\\\"\\n                  [(ngModel)]=\\\"building.dev_phone\\\" name=\\\"dev_phone\\\" ng2TelInput [ng2TelInputOptions]=\\\"initialCountry\\\"\\n                  (countryChange)=\\\"onCountryChange($event)\\\" />\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-sm-12 col-12\\\">\\n              <div class=\\\"form-group-3\\\">\\n                <label>Email Address</label>\\n                <input autocomplete=\\\"off\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"dev_email\\\"\\n                  [(ngModel)]=\\\"building.dev_email\\\">\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"col-lg-5 col-md-12 col-sm-12 col-12\\\">\\n          <div class=\\\"form-group-3 mark-pin-map\\\">\\n            <label>Mark Pin on Map</label>\\n          </div>\\n          <div>\\n            <!-- <div id=\\\"mapDiv\\\" style=\\\"height: 250px; width: 100%;\\\" #mapDiv></div> -->\\n            <agm-map [latitude]=\\\"latitude\\\" [longitude]=\\\"longitude\\\" [scrollwheel]=\\\"false\\\"\\n              (mapClick)=\\\"placeMarker($event)\\\" [zoom]=\\\"zoom\\\">\\n              <agm-marker [latitude]=\\\"latitude\\\" [longitude]=\\\"longitude\\\"></agm-marker>\\n            </agm-map>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row\\\" *ngIf=\\\"showBuilding\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <div class=\\\"btn-cont text-right\\\">\\n            <!-- <a class=\\\"btn-third btn\\\" href=\\\"javascript://\\\" (click)=\\\"buildingRequest()\\\">Next</a> -->\\n            <!-- <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"setTab(5)\\\">Previous</button> -->\\n            <button type=\\\"submit\\\" [disabled]=\\\"buildingRequestForm.invalid\\\" class=\\\"btn btn-primary\\\">Next</button>\\n          </div>\\n        </div>\\n      </div>\\n\\n    </form>\\n    <!-- <div class=\\\"btn-cont text-right\\\">\\n      <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"setTab(4)\\\" style=\\\"margin: 20px 0px;\\\">Previous</button>\\n    </div> -->\\n  </div>\\n\\n</div>\\n\\n\\n\\n\\n<form ngNativeValidate #createDraft=\\\"ngForm\\\" (ngSubmit)=\\\"addProperty(createDraft, 2)\\\">\\n\\n  <!-- tab-1 -->\\n  <div class=\\\"white-bg\\\" *ngIf=\\\"tab==1\\\">\\n    <div class=\\\"page-title\\\">\\n      <h3>Create Draft</h3>\\n    </div>\\n    <div class=\\\"paddingT0 padding40\\\">\\n\\n      <div class=\\\"form-group-3\\\">\\n        <label class=\\\"p16-two\\\">Name <span class=\\\"color-red\\\">*</span></label>\\n        <input class=\\\"form-control\\\" required type=\\\"test\\\" name=\\\"name\\\" placeholder=\\\"Apartment name\\\" [(ngModel)]=\\\"model.name\\\">\\n        <div class=\\\"clearfix\\\"></div>\\n      </div>\\n\\n      <div class=\\\"spacer15\\\"></div>\\n\\n      <div class=\\\"form-group-3\\\">\\n        <label class=\\\"p16-two\\\">This Property is available for? <span class=\\\"color-red\\\">*</span></label>\\n        <div class=\\\"clearfix\\\"></div>\\n        <label class=\\\"cust-radio\\\">\\n          <!-- <input type=\\\"checkbox\\\" value=\\\"{{model.for_sale}}\\\" name=\\\"for_sale\\\" checked=\\\"{{m.checked}}\\\"> -->\\n          <input value=\\\"true\\\" name=\\\"for_sale\\\" type=\\\"radio\\\" (change)=\\\"model.for_sale = true\\\"\\n            [checked]=\\\"model.for_sale == true ?'checked':''\\\">\\n          <span class=\\\"checkmark\\\">Buy</span>\\n        </label>\\n        <label class=\\\"cust-radio\\\">\\n          <input value=\\\"false\\\" name=\\\"for_sale\\\" type=\\\"radio\\\" (change)=\\\"model.for_sale = false\\\"\\n            [checked]=\\\"model.for_sale == false ?'checked':''\\\">\\n          <span class=\\\"checkmark\\\">Rent</span>\\n        </label>\\n        <div class=\\\"clearfix\\\"></div>\\n      </div>\\n\\n      <div class=\\\"spacer15\\\"></div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-3 col-md-12 col-sm-12 col-12\\\">\\n          <div class=\\\"form-group-3\\\">\\n            <label class=\\\"p16-two\\\">Select Country <span class=\\\"color-red\\\">*</span></label>\\n            <select title=\\\"Choose Country\\\" required class=\\\"form-control\\\" (change)=\\\"getStates($event.target.value)\\\">\\n              <option value=\\\"\\\" disabled>Select Country</option>\\n              <option *ngFor=\\\"let country of parameter.countries\\\" value=\\\"{{country.id}}\\\"\\n                [selected]=\\\"country.id == model.country_id\\\">{{country.name_en}}</option>\\n            </select>\\n          </div>\\n        </div>\\n        <div class=\\\"col-lg-3 col-md-12 col-sm-12 col-12\\\">\\n          <div class=\\\"form-group-3\\\">\\n            <label class=\\\"p16-two\\\">&nbsp;</label>\\n            <select title=\\\"Choose State\\\" required class=\\\"form-control\\\" (change)=\\\"getCities($event.target.value)\\\">\\n              <option value=\\\"\\\">Select State</option>\\n              <option *ngFor=\\\"let state of parameter.states\\\" value=\\\"{{state.id}}\\\"\\n                [selected]=\\\"state.id == model.state_id\\\">{{state.name_en}}</option>\\n            </select>\\n          </div>\\n        </div>\\n        <div class=\\\"col-lg-3 col-md-12 col-sm-12 col-12\\\">\\n          <div class=\\\"form-group-3\\\">\\n            <label class=\\\"p16-two\\\">&nbsp;</label>\\n            <select title=\\\"Choose City\\\" required class=\\\"form-control\\\" (change)=\\\"getLocalities($event.target.value)\\\">\\n              <option value=\\\"\\\">Select City</option>\\n              <option *ngFor=\\\"let city of parameter.cities\\\" value=\\\"{{city.id}}\\\" [selected]=\\\"city.id == model.city_id\\\">\\n                {{city.name_en}}</option>\\n            </select>\\n          </div>\\n        </div>\\n        <div class=\\\"col-lg-3 col-md-12 col-sm-12 col-12\\\">\\n          <div class=\\\"form-group-3\\\">\\n            <label class=\\\"p16-two\\\">&nbsp;</label>\\n            <select title=\\\"Choose Locality\\\" required class=\\\"form-control\\\"\\n              (change)=\\\"setValue('locality_id', $event.target.value)\\\">\\n              <option value=\\\"\\\">Select Locality</option>\\n              <option *ngFor=\\\"let locality of parameter.localities\\\" value=\\\"{{locality.id}}\\\"\\n                [selected]=\\\"locality.id == model.locality_id\\\">{{locality.name_en}}</option>\\n            </select>\\n          </div>\\n        </div>\\n      </div>\\n      <div class=\\\"spacer15\\\"></div>\\n\\n      <div class=\\\"form-group-3\\\">\\n        <label class=\\\"p16-two\\\">Select Configuration? <span class=\\\"color-red\\\">*</span></label>\\n        <div class=\\\"clearfix\\\"></div>\\n        <label class=\\\"cust-radio\\\" *ngFor=\\\"let configuration of parameter.items\\\">\\n          <input type=\\\"radio\\\" required (change)=\\\"setValue('configuration_id', configuration.id)\\\"\\n            value=\\\"{{configuration.id}}\\\" [checked]=\\\"model.configuration_id == configuration.id ? 'checked' : ''\\\"\\n            name=\\\"configuration_id\\\">\\n          <span class=\\\"checkmark\\\">{{configuration.name_en}}</span>\\n        </label>\\n        <div class=\\\"clearfix\\\"></div>\\n      </div>\\n      <div class=\\\"spacer15\\\"></div>\\n\\n      <div class=\\\"form-group-3\\\">\\n        <label class=\\\"p16-two\\\">Select Property Type? <span class=\\\"color-red\\\">*</span></label>\\n        <div class=\\\"clearfix\\\"></div>\\n        <label class=\\\"cust-radio\\\" *ngFor=\\\"let propertyType of parameter.propertyTypes\\\">\\n          <input type=\\\"radio\\\" (change)=\\\"setValue('property_type_id', propertyType.id)\\\" value=\\\"{{propertyType.id}}\\\"\\n            [checked]=\\\"model.property_type_id == propertyType.id ? 'checked' : ''\\\" name=\\\"property_type_id\\\">\\n          <span class=\\\"checkmark\\\">{{propertyType.name_en}}</span>\\n        </label>\\n        <div class=\\\"clearfix\\\"></div>\\n      </div>\\n\\n      <div class=\\\"spacer15\\\"></div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-4 col-sm-12 col-12\\\">\\n          <div class=\\\"form-group-3 eca\\\">\\n            <label class=\\\"p16-two\\\">Enter Carpet Area <span class=\\\"color-red\\\">*</span></label>\\n            <input required class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"area[{{c}}]\\\" placeholder=\\\"Area should be in Sq/mt.\\\"\\n              [(ngModel)]=\\\"newcarpet_area.area\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-4 col-sm-12 col-12\\\">\\n          <div class=\\\"form-group-3 eap\\\">\\n            <label class=\\\"p16-two\\\">Enter Price <span class=\\\"color-red\\\">*</span></label>\\n            <input required class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"price[{{c}}]\\\" placeholder=\\\"Amount should be in $\\\"\\n              [(ngModel)]=\\\"newcarpet_area.price\\\">\\n          </div>\\n        </div>\\n        <!-- <div class=\\\"col-md-2 col-sm-12 col-12\\\">\\n          <a href=\\\"javascript://\\\" class=\\\"add-more btn\\\" (click)=\\\"addCarpetArea()\\\">Add More</a>\\n        </div> -->\\n      </div>\\n      <!-- <div class=\\\"row\\\">\\n        <div class=\\\"col-md-4 col-sm-12 col-12\\\">\\n          <div class=\\\"form-group-3 eca\\\">\\n            <label class=\\\"p16-two\\\">Enter Carpet Area <span class=\\\"color-red\\\">*</span></label>\\n            <input class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"area[{{c}}]\\\" placeholder=\\\"Area should be in Sq/mt.\\\"\\n              [(ngModel)]=\\\"newcarpet_area.area\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-4 col-sm-12 col-12\\\">\\n          <div class=\\\"form-group-3 eap\\\">\\n            <label class=\\\"p16-two\\\">Enter Price <span class=\\\"color-red\\\">*</span></label>\\n            <input class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"price[{{c}}]\\\" placeholder=\\\"Amount should be in $\\\"\\n              [(ngModel)]=\\\"newcarpet_area.price\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-2 col-sm-12 col-12\\\">\\n          <a href=\\\"javascript://\\\" class=\\\"add-more btn\\\" (click)=\\\"addCarpetArea()\\\">Add More</a>\\n        </div>\\n      </div> -->\\n\\n      <!-- <div class=\\\"row\\\" *ngFor=\\\"let carpet_area of model.carpet_areas; let c = index;\\\">\\n        <div class=\\\"col-md-4 col-sm-12 col-12\\\">\\n          <div class=\\\"form-group-3 eca\\\">\\n            <label class=\\\"p16-two\\\">Enter Carpet Area <span class=\\\"color-red\\\">*</span></label>\\n            <input required class=\\\"form-control\\\" required type=\\\"number\\\" [value]=\\\"carpet_area.area\\\" disabled />\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-4 col-sm-12 col-12\\\">\\n          <div class=\\\"form-group-3 eap\\\">\\n            <label class=\\\"p16-two\\\">Enter Average Price <span class=\\\"color-red\\\">*</span></label>\\n            <input required class=\\\"form-control\\\" required type=\\\"number\\\" [value]=\\\"carpet_area.price\\\" disabled />\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-2 col-sm-12 col-12\\\">\\n          <div class=\\\"btn-cont form-group-3\\\">\\n            <a href=\\\"javascript://\\\" class=\\\"btn delete-button marginT30\\\" (click)=\\\"model.carpet_areas.splice(c, 1)\\\">\\n              <img src=\\\"assets/img/delete-button.png\\\" width=\\\"40\\\" style=\\\"width: 20px; margin-top: 10px;\\\">\\n            </a>\\n          </div>\\n        </div>\\n      </div> -->\\n\\n\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <div class=\\\"btn-cont text-right\\\">\\n            <!-- <a class=\\\"btn-third btn\\\" [disabled]=\\\"addForm.invalid\\\" type=\\\"submit\\\" href=\\\"javascript://\\\" (click)=\\\"addProperty(addForm, 2)\\\">Next</a> -->\\n            <button type=\\\"submit\\\" [disabled]=\\\"createDraft.invalid\\\" class=\\\"btn btn-primary\\\">Next</button>\\n          </div>\\n        </div>\\n      </div>\\n\\n    </div>\\n  </div>\\n</form>\\n\\n\\n\\n<form ngNativeValidate #additionalInfo=\\\"ngForm\\\" (ngSubmit)=\\\"addProperty(additionalInfo, 3)\\\">\\n  <!-- tab-2 -->\\n  <div class=\\\"white-bg\\\" *ngIf=\\\"tab==2\\\">\\n    <div class=\\\"page-title\\\">\\n      <h3>Additional Info</h3>\\n    </div>\\n    <div class=\\\"padding40\\\">\\n      <div class=\\\"form-group-3\\\">\\n        <label class=\\\"p16-two\\\">Add Images of your property <span class=\\\"color-red\\\">*</span></label>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-7 col-sm-12 col-12\\\">\\n            <!-- <div class=\\\"upload-cover-img\\\" [style.background-image]=\\\"image1\\\"> -->\\n            <div class=\\\"upload-cover-img\\\">\\n\\n              <img [src]=\\\"model.cover_image\\\" onerror=\\\"this.src='assets/img/placeholder.png'\\\" class=\\\"floor-plan\\\">\\n              <div *ngIf=\\\"!model.cover_image\\\" class=\\\"upload-caption\\\">\\n                <p class=\\\"green-color marginT30\\\">+Upload Cover image for the project</p>\\n                <p>JPG or PNG. Image size should be 1920 × 1080 pixels (for HiDPI displays).</p>\\n              </div>\\n              <input type=\\\"file\\\" name=\\\"\\\" accept=\\\"image/*\\\" (change)=\\\"onSelectFile('cover_image', $event)\\\">\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-5 col-sm-12 col-12\\\">\\n            <!-- <div class=\\\"upload-cover-img upload-cover-small\\\" [style.background-image]=\\\"image3\\\"> -->\\n            <div class=\\\"upload-cover-img upload-cover-small\\\">\\n              <img [src]=\\\"model.floor_plan\\\" onerror=\\\"this.src='assets/img/placeholder.png'\\\" class=\\\"floor-plan\\\">\\n              <input type=\\\"file\\\" name=\\\"\\\" accept=\\\"image/*\\\" (change)=\\\"onSelectFile('floor_plan', $event)\\\">\\n              <div *ngIf=\\\"!model.floor_plan\\\" class=\\\"upload-caption\\\">\\n                <p class=\\\"green-color marginT30\\\">+ Add Floor plan</p>\\n              </div>\\n            </div>\\n            <div class=\\\"upload-cover-img upload-cover-small\\\">\\n              <img [src]=\\\"model.images[0]?.image\\\" onerror=\\\"this.src='assets/img/placeholder-img.png'\\\" class=\\\"img-fluid\\\">\\n              <div class=\\\"upload-caption\\\">\\n                <p *ngIf=\\\"model?.images?.length > 1\\\" class=\\\"number\\\" (click)=\\\"modelOpenFun()\\\">\\n                  +{{model?.images?.length-1}}</p>\\n                <p *ngIf=\\\"model?.images?.length <= 1\\\" class=\\\"green-color\\\" (click)=\\\"modelOpenFun()\\\">+ Add more images</p>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n\\n      <!-- 360 image and videos -->\\n      <div class=\\\"form-group-3\\\">\\n        <label class=\\\"p16-two\\\">Add 360<span>&#176;</span> Images and Video of your property </label>\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-5 col-sm-12 col-12\\\">\\n            <div class=\\\"upload-cover-img upload-cover-small\\\">\\n              <img [src]=\\\"model.images360[0]?.image\\\" onerror=\\\"this.src='assets/img/placeholder-img.png'\\\" class=\\\"img-fluid\\\">\\n              <div class=\\\"upload-caption\\\">\\n                <p *ngIf=\\\"model?.images360?.length > 1\\\" class=\\\"number\\\" (click)=\\\"modelOpen360ImgFun()\\\">\\n                  +{{model?.images360?.length-1}}</p>\\n                <p *ngIf=\\\"model?.images360?.length <= 1\\\" class=\\\"green-color\\\" (click)=\\\"modelOpen360ImgFun()\\\">+ Add 360<span>&#176;</span> images</p>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-md-5 col-sm-12 col-12\\\">\\n\\n            <div class=\\\"upload-cover-img upload-cover-small\\\">\\n              <video style=\\\"width: 100%; height: 100%; display: none;\\\" onerror=\\\"this.src='assets/img/placeholder.png'\\\" src=\\\"{{videoSrc}}\\\" class=\\\"video55 floor-plan\\\" autoplay type=\\\"video/mp4\\\" controls></video>\\n              \\n              <!-- if want to give play option -->\\n              <img *ngIf=\\\"model?.videos && model?.videos[0]\\\" class=\\\"ui bordered small image\\\" [src]=\\\"model?.videos[0]?.thumb\\\" onerror=\\\"this.src='assets/img/placeholder.png'\\\">\\n              <!-- <img *ngIf=\\\"model.videoLoader==false\\\" class=\\\"vid-icon\\\" (click)=\\\"playVideo(i)\\\" src=\\\"assets/img/play-button.png\\\" /> -->\\n\\n              <canvas width=\\\"800\\\" height=\\\"600\\\" id=\\\"canvas\\\"></canvas>\\n              <div *ngIf=\\\"model.videoLoader\\\" class=\\\"loaderr\\\"></div>\\n              <input type=\\\"file\\\" name=\\\"\\\" accept=\\\"video/*\\\" (change)=\\\"showCanvas($event)\\\">\\n              <div class=\\\"upload-caption\\\">\\n                <p class=\\\"green-color marginT30\\\">+ Add Video</p>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row\\\">\\n        <!-- <div class=\\\"col-lg-3 col-md-6 col-sm-6 col-12\\\">\\n          <div class=\\\"form-group-3\\\">\\n            <label>Floors <span class=\\\"color-red\\\">*</span></label>\\n            <input class=\\\"form-control\\\" min=\\\"1\\\" [(ngModel)]=\\\"model.floor\\\" type=\\\"number\\\" name=\\\"floor\\\"\\n              placeholder=\\\"in numbers\\\">\\n          </div>\\n        </div> -->\\n\\n        <div class=\\\"col-lg-3 col-md-6 col-sm-6 col-12\\\">\\n          <div class=\\\"form-group-3\\\">\\n            <label>Bedrooms <span class=\\\"color-red\\\">*</span></label>\\n            <input class=\\\"form-control\\\" min=\\\"1\\\" [(ngModel)]=\\\"model.bedroom\\\" type=\\\"number\\\" name=\\\"bedroom\\\"\\n              placeholder=\\\"in numbers\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"col-lg-3 col-md-6 col-sm-6 col-12\\\">\\n          <div class=\\\"form-group-3\\\">\\n            <label>Bathrooms <span class=\\\"color-red\\\">*</span></label>\\n            <input class=\\\"form-control\\\" min=\\\"1\\\" [(ngModel)]=\\\"model.bathroom\\\" type=\\\"number\\\" name=\\\"bathroom\\\"\\n              placeholder=\\\"in numbers\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"col-lg-3 col-md-6 col-sm-6 col-12\\\">\\n          <div class=\\\"form-group-3\\\">\\n            <label>Half Bathrooms</label>\\n            <input class=\\\"form-control\\\" min=\\\"0\\\" [(ngModel)]=\\\"model.half_bathroom\\\" type=\\\"number\\\" name=\\\"half_bathroom\\\"\\n              placeholder=\\\"in numbers\\\">\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"spacer15\\\"></div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-3 col-md-6 col-sm-6 col-12\\\">\\n          <div class=\\\"form-group-3\\\">\\n            <label>Suggested Price</label>\\n            <input class=\\\"form-control\\\" min=\\\"0\\\" [(ngModel)]=\\\"model.property_price\\\" type=\\\"number\\\" name=\\\"property_price\\\"\\n              placeholder=\\\"in numbers\\\">\\n          </div>\\n        </div>\\n      </div>\\n\\n      <!-- parking -->\\n      <div class=\\\"spacer15\\\"></div>\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-3 col-md-6 col-sm-6 col-12\\\">\\n          <div class=\\\"form-group-3\\\">\\n            <label>Is Parking Available? <span class=\\\"color-red\\\">*</span></label>\\n            <div class=\\\"clearfix\\\"></div>\\n            <label class=\\\"cust-radio\\\">\\n              <input type=\\\"radio\\\" (change)=\\\"setValue('parking', 1)\\\" value=\\\"1\\\"\\n                [checked]=\\\"model.parking == 1 ? 'checked' : ''\\\" name=\\\"parking\\\">\\n              <span class=\\\"checkmark\\\">Yes</span>\\n            </label>\\n            <label class=\\\"cust-radio\\\">\\n              <input type=\\\"radio\\\" (change)=\\\"setValue('parking', 0)\\\" value=\\\"0\\\"\\n                [checked]=\\\"model.parking == 0 ? 'checked' : ''\\\" name=\\\"parking\\\">\\n              <span class=\\\"checkmark\\\">No</span>\\n            </label>\\n            <div class=\\\"clearfix\\\"></div>\\n          </div>\\n        </div>\\n        <div class=\\\"col-lg-3 col-md-6 col-sm-6 col-12\\\" *ngIf=\\\"model.parking==1\\\">\\n          <div class=\\\"form-group-3\\\">\\n            <label>Total no. of Parkings?</label>\\n            <div class=\\\"clearfix\\\"></div>\\n            <input class=\\\"form-control\\\" type=\\\"number\\\" [(ngModel)]=\\\"model.parking_count\\\" min=\\\"0\\\"\\n                name=\\\"parking_count\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"col-lg-3 col-md-6 col-sm-6 col-12\\\" *ngIf=\\\"model.parking==1 && model.for_sale\\\">\\n          <div class=\\\"form-group-3\\\">\\n            <label>No. of Parkings for Sale?</label>\\n            <div class=\\\"clearfix\\\"></div>\\n            <input class=\\\"form-control\\\" type=\\\"number\\\" [(ngModel)]=\\\"model.parking_for_sale\\\" min=\\\"0\\\"\\n                name=\\\"parking_for_sale\\\">\\n          </div>\\n        </div>\\n      </div>\\n\\n      <!-- furnished -->\\n      <div class=\\\"spacer15\\\"></div>\\n      <div class=\\\"form-group-3\\\">\\n        <label>Is Property Furnished? <span class=\\\"color-red\\\">*</span></label>\\n        <div class=\\\"clearfix\\\"></div>\\n        <label class=\\\"cust-radio\\\">\\n          <input type=\\\"radio\\\" (change)=\\\"setValue('furnished', 1)\\\" value=\\\"1\\\"\\n            [checked]=\\\"model.furnished == 1 ? 'checked' : ''\\\" name=\\\"furnished\\\">\\n          <span class=\\\"checkmark\\\">Yes</span>\\n        </label>\\n        <label class=\\\"cust-radio\\\">\\n          <input type=\\\"radio\\\" (change)=\\\"setValue('furnished', 0)\\\" value=\\\"0\\\"\\n            [checked]=\\\"model.furnished == 0 ? 'checked' : ''\\\" name=\\\"furnished\\\">\\n          <span class=\\\"checkmark\\\">No</span>\\n        </label>\\n        <div class=\\\"clearfix\\\"></div>\\n      </div>\\n\\n      <div class=\\\"form-group-3\\\">\\n        <label>Description <span class=\\\"color-red\\\">*</span></label>\\n        <textarea required [(ngModel)]=\\\"model.description\\\" placeholder=\\\"Enter description\\\" name=\\\"description\\\"\\n          class=\\\"form-control\\\"></textarea>\\n      </div>\\n\\n      <!-- <div class=\\\"spacer15\\\"></div>\\n      <div class=\\\"form-group-3\\\">\\n        <label>How much quantity do you have? <span class=\\\"color-red\\\">*</span></label>\\n        <div class=\\\"clearfix\\\"></div>\\n        <label class=\\\"cust-input\\\">\\n          <input autocomplete=\\\"off\\\" type=\\\"number\\\" min=\\\"1\\\" [(ngModel)]=\\\"model.quantity\\\"\\n            (change)=\\\"setValue('quantity', $event.target.value)\\\" name=\\\"quantity\\\" placeholder=\\\"Enter\\\">\\n        </label>\\n        <button type=\\\"button\\\" *ngIf=\\\"model.quantity>1\\\" class=\\\"btn btn-link greenText\\\"\\n          (click)=\\\"propertyDetails='true'\\\">Add property details</button>\\n        <div class=\\\"clearfix\\\"></div>\\n      </div> -->\\n<!-- \\n      <div class=\\\"clearfix\\\"></div>\\n\\n      <div *ngIf=\\\"propertyDetails\\\" class=\\\"expand-collapes-section addpropertydetails\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-xl-3 col-lg-6 col-md-12 col-sm-6 col-12\\\">\\n            <div class=\\\"form-group-3\\\">\\n              <label>Floor number</label>\\n              <input autocomplete=\\\"off\\\" [(ngModel)]=\\\"details.floor\\\" class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"\\\"\\n                [ngModelOptions]=\\\"{standalone: true}\\\">\\n            </div>\\n          </div>\\n          <div class=\\\"col-xl-3 col-lg-6 col-md-12 col-sm-6 col-12\\\">\\n            <div class=\\\"form-group-3\\\">\\n              <label>Area per Sqmt.</label>\\n              <input autocomplete=\\\"off\\\" [(ngModel)]=\\\"details.area\\\" class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"\\\"\\n                [ngModelOptions]=\\\"{standalone: true}\\\">\\n            </div>\\n          </div>\\n          <div class=\\\"col-xl-3 col-lg-6 col-md-12 col-sm-6 col-12\\\">\\n            <div class=\\\"form-group-3\\\">\\n              <label>Price per Sqmt.</label>\\n              <input autocomplete=\\\"off\\\" [(ngModel)]=\\\"details.price\\\" class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"\\\"\\n                [ngModelOptions]=\\\"{standalone: true}\\\">\\n            </div>\\n          </div>\\n          <div class=\\\"col-xl-3 col-lg-6 col-md-12 col-sm-6 col-12\\\">\\n            <div class=\\\"form-group-3\\\">\\n              <label>Total price</label>\\n              <input autocomplete=\\\"off\\\" [(ngModel)]=\\\"details.total_price\\\" class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"\\\"\\n                [ngModelOptions]=\\\"{standalone: true}\\\">\\n            </div>\\n          </div>\\n          <div class=\\\"col-xl-3 col-lg-6 col-md-12 col-sm-6 col-12\\\">\\n            <div class=\\\"form-group-3\\\">\\n              <label>Facing Direction</label>\\n              <input autocomplete=\\\"off\\\" [(ngModel)]=\\\"details.direction\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"\\\"\\n                [ngModelOptions]=\\\"{standalone: true}\\\">\\n            </div>\\n          </div>\\n          <div class=\\\"col-xl-3 col-lg-6 col-md-12 col-sm-6 col-12\\\">\\n            <div class=\\\"form-group-3\\\">\\n              <label>Status</label>\\n              <select class=\\\"form-control\\\" [(ngModel)]=\\\"details.payment_status_id\\\"\\n                [ngModelOptions]=\\\"{standalone: true}\\\">\\n                <option *ngFor=\\\"let item of parameter.paymentStatuses\\\" [value]=\\\"item.id\\\">{{item.name}}</option>\\n              </select>\\n\\n            </div>\\n          </div>\\n          <div class=\\\"col-xl-3 col-lg-6 col-md-12 col-sm-6 col-12\\\">\\n            <div class=\\\"form-group-3\\\">\\n              <label>Building Specific type</label>\\n              <select class=\\\"form-control\\\" [(ngModel)]=\\\"details.building_specific_type_id\\\"\\n                [ngModelOptions]=\\\"{standalone: true}\\\">\\n                <option *ngFor=\\\"let item of parameter.buildingSpecificTypes\\\" [value]=\\\"item.id\\\">{{item.name}}</option>\\n              </select>\\n            </div>\\n          </div>\\n          <div class=\\\"col-xl-3 col-lg-6 col-md-12 col-sm-6 col-12\\\">\\n            <div class=\\\"form-group-3\\\">\\n              <label>Configuration Type</label>\\n              <input autocomplete=\\\"off\\\" [(ngModel)]=\\\"details.conf_type\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"\\\"\\n                [ngModelOptions]=\\\"{standalone: true}\\\">\\n            </div>\\n          </div>\\n        </div>\\n        <div class=\\\"btn-cont\\\">\\n          <button (click)=\\\"addPropertyDetails()\\\" class=\\\"btn btn-primary whiteText\\\" [disabled]=\\\"\\n        !details.floor\\n        || !details.area\\n        || !details.price\\n        || !details.total_price\\n        || !details.direction\\n        || !details.payment_status_id\\n        || !details.building_specific_type_id\\n        || !details.conf_type\\n        \\\">Add Details</button>\\n        </div>\\n      </div> -->\\n\\n      <!-- <div class=\\\"spacer15\\\"></div> -->\\n\\n      <!-- <div *ngFor=\\\"let details of model.property_quantity_details;let i=index\\\" class=\\\"expand-collapes-section\\\">\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-10\\\">\\n          <div class=\\\"row\\\">\\n         <div class=\\\"col-xl-3 col-lg-6 col-md-12 col-sm-6 col-12\\\">\\n            <div class=\\\"form-group-3\\\">\\n               <label>Floor number</label>\\n               <input autocomplete=\\\"off\\\" [(ngModel)]=\\\"details.floor\\\" class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" disabled>\\n            </div>\\n         </div>\\n       <div class=\\\"col-xl-3 col-lg-6 col-md-12 col-sm-6 col-12\\\">\\n            <div class=\\\"form-group-3\\\">\\n               <label>Area per Sqmt.</label>\\n               <input autocomplete=\\\"off\\\"  [(ngModel)]=\\\"details.area\\\"  class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" disabled>\\n            </div>\\n         </div>\\n        <div class=\\\"col-xl-3 col-lg-6 col-md-12 col-sm-6 col-12\\\">\\n            <div class=\\\"form-group-3\\\">\\n               <label>Price per Sqmt.</label>\\n               <input autocomplete=\\\"off\\\"  [(ngModel)]=\\\"details.price\\\"  class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" disabled>\\n            </div>\\n         </div>\\n         <div class=\\\"col-xl-3 col-lg-6 col-md-12 col-sm-6 col-12\\\">\\n            <div class=\\\"form-group-3\\\">\\n               <label>Total price</label>\\n               <input autocomplete=\\\"off\\\"  [(ngModel)]=\\\"details.total_price\\\"  class=\\\"form-control\\\" type=\\\"number\\\" name=\\\"\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" disabled>\\n            </div>\\n         </div>\\n        <div class=\\\"col-xl-3 col-lg-6 col-md-12 col-sm-6 col-12\\\">\\n            <div class=\\\"form-group-3\\\">\\n               <label>Facing Direction</label>\\n               <input autocomplete=\\\"off\\\"  [(ngModel)]=\\\"details.direction\\\"  class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" disabled>\\n            </div>\\n         </div>\\n         <div class=\\\"col-xl-3 col-lg-6 col-md-12 col-sm-6 col-12\\\">\\n            <div class=\\\"form-group-3\\\">\\n               <label>Status</label>\\n               <select class=\\\"form-control\\\"  [(ngModel)]=\\\"details.payment_status_id\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" disabled>\\n                  <option *ngFor=\\\"let item of parameter.paymentStatuses\\\" [value]=\\\"item.id\\\">{{item.name}}</option>\\n               </select>\\n            </div>\\n         </div>\\n         <div class=\\\"col-xl-3 col-lg-6 col-md-12 col-sm-6 col-12\\\">\\n            <div class=\\\"form-group-3\\\">\\n               <label>Building Specific type</label>\\n               <select class=\\\"form-control\\\" [(ngModel)]=\\\"details.building_specific_type_id\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" disabled>\\n                  <option *ngFor=\\\"let item of parameter.buildingSpecificTypes\\\" [value]=\\\"item.id\\\">{{item.name}}</option>\\n               </select>\\n            </div>\\n         </div>\\n         <div class=\\\"col-xl-3 col-lg-6 col-md-12 col-sm-6 col-12\\\">\\n            <div class=\\\"form-group-3\\\">\\n               <label>Configuration type</label>\\n               <input autocomplete=\\\"off\\\" [(ngModel)]=\\\"details.conf_type\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"\\\"  [ngModelOptions]=\\\"{standalone: true}\\\" disabled>\\n            </div>\\n         </div>\\n         </div>\\n         </div>\\n         <div class=\\\"col-md-2\\\">\\n          <a style=\\\"width: 45px;padding-top: 0px;\\\" (click)=\\\"removeDetails(i)\\\" class=\\\"btn delete-button\\\" href=\\\"javascript://\\\">\\n            <img class=\\\"img-fluid\\\" src=\\\"assets/img/delete-button.png\\\" width=\\\"40\\\" >\\n          </a>\\n         </div>\\n      </div>\\n   </div> -->\\n<!-- \\n\\n      <div class=\\\"tabel-section\\\" *ngIf=\\\"model?.property_quantity_details?.length > 0\\\">\\n        <div class=\\\"table-responsive\\\">\\n          <table class=\\\"table table-striped table-align-left\\\">\\n            <tbody>\\n              <tr>\\n                <th>Floor Number</th>\\n                <th>Area per Sqmt.</th>\\n                <th>Price per Sqmt.</th>\\n                <th>Facing Direction</th>\\n                <th>Status</th>\\n                <th>Building Specific Type</th>\\n                <th>Configuration Type</th>\\n                <th>Total Price</th>\\n              </tr>\\n              <tr *ngFor=\\\"let details of model?.property_quantity_details;let i=index\\\">\\n                <td>{{details.floor}}</td>\\n                <td>{{details.area}}</td>\\n                <td>${{details.price}}</td>\\n                <td>{{details.direction}}</td>\\n                <td>\\n                  <span *ngFor=\\\"let item of parameter.paymentStatuses | filterById: details.payment_status_id\\\">\\n                    {{item.name}}\\n                  </span>\\n                </td>\\n                <td>\\n                  <span\\n                    *ngFor=\\\"let item of parameter.buildingSpecificTypes | filterById : details.building_specific_type_id\\\">\\n                    {{item.name}}\\n                  </span>\\n                </td>\\n                <td>{{details.conf_type}}</td>\\n                <td>${{details.total_price}}</td>\\n                <td>\\n                  <a href=\\\"javascript://\\\" (click)=\\\"removeDetails(i)\\\"><img src=\\\"assets/img/delete-green.png\\\"\\n                      alt=\\\"img\\\"></a>\\n                </td>\\n              </tr>\\n            </tbody>\\n          </table>\\n        </div>\\n      </div> -->\\n\\n\\n      <div class=\\\"spacer15\\\"></div>\\n      <div class=\\\"form-group-3\\\">\\n        <label>List of Amenities with this property \\n          <!-- <span class=\\\"color-red\\\">*</span> -->\\n        </label>\\n\\n        <div class=\\\"form-group-3 paddingleft0\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-12\\\">\\n              <!-- <input type=\\\"text\\\" list=\\\"amenities\\\" (keyup.enter)=\\\"addAmenity(amen)\\\" name=\\\"amen\\\" [(ngModel)]=\\\"amen\\\">\\n              <datalist id=\\\"amenities\\\">\\n                <option *ngFor=\\\"let amenity of parameter.amenities\\\" value=\\\"{{amenity.name_en}}\\\">\\n              </datalist> -->\\n\\n              <select style=\\\"max-width:50%\\\" title=\\\"Choose Amenity\\\" class=\\\"form-control\\\" name=\\\"amen\\\" [(ngModel)]=\\\"amen\\\"\\n                (click)=\\\"addAmenity(amen)\\\">\\n                <option value=\\\"\\\">Select Amenity</option>\\n                <option *ngFor=\\\"let amenity of parameter.amenities; let i=index\\\" [ngValue]=\\\"amenity\\\">{{amenity.name_en}}\\n                </option>\\n              </select>\\n              <!-- <button type=\\\"button\\\" class=\\\"add-btn\\\" (click)=\\\"addAmenity(amen,i)\\\"><img src=\\\"assets/img/add.png\\\" alt=\\\"img\\\"></button> -->\\n\\n              <div class=\\\"list-group-items\\\" *ngIf=\\\"amenityList\\\">\\n                <ul>\\n                  <li *ngFor=\\\"let a of amenityList; let aIndex=index;\\\">\\n                    <a href=\\\"javascript://\\\" (click)=\\\"removeAmenity(a,aIndex)\\\" class=\\\"close\\\">&times;</a>\\n                    <div class=\\\"fig-block\\\"><img class=\\\"width100\\\" src=\\\"{{a.icon}}\\\" alt=\\\"img\\\"></div>\\n                    <p class=\\\"p13\\\">{{a.name_en}}</p>\\n                  </li>\\n                </ul>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <!-- <div class=\\\"spacer15\\\"></div>\\n      <div class=\\\"form-group-3\\\">\\n        <label>List of Banks <span class=\\\"color-red\\\">*</span></label>\\n        <div class=\\\"form-group-3 paddingleft0\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-12\\\">\\n              <select style=\\\"max-width:50%\\\" title=\\\"Choose Bank\\\" class=\\\"form-control\\\" name=\\\"bank\\\" [(ngModel)]=\\\"bank\\\"\\n                (change)=\\\"addBank(bank)\\\">\\n                <option value=\\\"\\\">Select Bank</option>\\n                <option *ngFor=\\\"let tBank of parameter.banks\\\" [ngValue]=\\\"tBank\\\">{{tBank.name}}</option>\\n              </select>\\n              <div class=\\\"list-group-items\\\" *ngIf=\\\"bankList\\\">\\n                <ul>\\n                  <li *ngFor=\\\"let b of bankList; let bIndex=index;\\\">\\n                    <a href=\\\"javascript://\\\" (click)=\\\"removeBank(b,bIndex)\\\" class=\\\"close\\\">&times;</a>\\n                    <div class=\\\"fig-block\\\">\\n                      <img class=\\\"width100\\\" [src]=\\\"b.image\\\" onerror=\\\"this.src='assets/img/bank-building.png'\\\" alt=\\\"img\\\">\\n                    </div>\\n                    <p class=\\\"p13\\\">{{b.name}}</p>\\n                    <p class=\\\"p13\\\">{{b.floating_int}} Floating</p>\\n                  </li>\\n                </ul>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div> -->\\n\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <div class=\\\"btn-cont text-right\\\">\\n            <!-- <a class=\\\"btn-third btn\\\" href=\\\"javascript://\\\" (click)=\\\"addProperty(addForm, 3)\\\">Next</a> -->\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"setTab(1)\\\">Previous</button>\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary marginL15\\\" [disabled]=\\\"\\n          additionalInfo.invalid\\n          || !model.cover_image\\n          || !model.floor_plan\\n          || !model.bedroom\\n          || !model.bathroom\\n          || !model.description\\\">Next</button>\\n          </div>\\n        </div>\\n      </div>\\n\\n    </div>\\n  </div>\\n</form>\\n\\n\\n<form ngNativeValidate #preferableBuyer=\\\"ngForm\\\" (ngSubmit)=\\\"addProperty(preferableBuyer, 4)\\\">\\n  <!-- tab-3 -->\\n  <div class=\\\"white-bg\\\" *ngIf=\\\"tab==3\\\">\\n    <div class=\\\"page-title\\\">\\n      <h3>Preferable Buyers</h3>\\n    </div>\\n    <div class=\\\"padding40\\\">\\n      <div class=\\\"form-group-3\\\">\\n        <label class=\\\"p16-two\\\">Marital Status? <span class=\\\"color-red\\\">*</span></label>\\n        <div class=\\\"clearfix\\\"></div>\\n        <label class=\\\"cust-radio\\\" *ngFor=\\\"let m of testMarital; let mi=index\\\">\\n          <input value=\\\"{{m.checked}}\\\" name=\\\"marital_status[{{mi}}]\\\" type=\\\"checkbox\\\"\\n            (click)=\\\"addMaritalStatus(m.checked, mi)\\\" [checked]=\\\"m.checked == true ? 'checked': ''\\\">\\n          <span class=\\\"checkmark\\\">{{m.name}}</span>\\n        </label>\\n        <div class=\\\"clearfix\\\"></div>\\n      </div>\\n\\n      <div class=\\\"spacer15\\\"></div>\\n      <div class=\\\"form-group-3\\\">\\n        <label class=\\\"p16-two\\\">Pets Allowed? <span class=\\\"color-red\\\">*</span></label>\\n        <div class=\\\"clearfix\\\"></div>\\n        <label class=\\\"cust-radio\\\">\\n          <input type=\\\"radio\\\" (change)=\\\"setValue('pets', 1)\\\" value=\\\"1\\\" [checked]=\\\"model.pets == 1 ? 'checked' : ''\\\"\\n            name=\\\"pets\\\">\\n          <span class=\\\"checkmark\\\">Allowed</span>\\n        </label>\\n        <label class=\\\"cust-radio\\\">\\n          <input type=\\\"radio\\\" (change)=\\\"setValue('pets', 0)\\\" value=\\\"0\\\" [checked]=\\\"model.pets == 0 ? 'checked' : ''\\\"\\n            name=\\\"pets\\\">\\n          <span class=\\\"checkmark\\\">Not Allowed</span>\\n        </label>\\n        <div class=\\\"clearfix\\\"></div>\\n      </div>\\n\\n\\n      <div class=\\\"spacer15\\\"></div>\\n      <div class=\\\"form-group-3\\\">\\n        <label class=\\\"p16-two\\\">Kids Friendly? <span class=\\\"color-red\\\">*</span></label>\\n        <div class=\\\"clearfix\\\"></div>\\n        <label class=\\\"cust-radio\\\">\\n          <input type=\\\"radio\\\" (change)=\\\"setValue('kids_friendly', 1)\\\" value=\\\"1\\\" [checked]=\\\"model.kids_friendly == 1 ? 'checked' : ''\\\"\\n            name=\\\"kids_friendly\\\">\\n          <span class=\\\"checkmark\\\">Yes</span>\\n        </label>\\n        <label class=\\\"cust-radio\\\">\\n          <input type=\\\"radio\\\" (change)=\\\"setValue('kids_friendly', 0)\\\" value=\\\"0\\\" [checked]=\\\"model.kids_friendly == 0 ? 'checked' : ''\\\"\\n            name=\\\"kids_friendly\\\">\\n          <span class=\\\"checkmark\\\">No</span>\\n        </label>\\n        <div class=\\\"clearfix\\\"></div>\\n      </div>\\n\\n\\n      <div class=\\\"spacer15\\\"></div>\\n      <div class=\\\"form-group-3\\\">\\n        <label class=\\\"p16-two\\\">Students Friendly? <span class=\\\"color-red\\\">*</span></label>\\n        <div class=\\\"clearfix\\\"></div>\\n        <label class=\\\"cust-radio\\\">\\n          <input type=\\\"radio\\\" (change)=\\\"setValue('students_friendly', 1)\\\" value=\\\"1\\\" [checked]=\\\"model.students_friendly == 1 ? 'checked' : ''\\\"\\n            name=\\\"students_friendly\\\">\\n          <span class=\\\"checkmark\\\">Yes</span>\\n        </label>\\n        <label class=\\\"cust-radio\\\">\\n          <input type=\\\"radio\\\" (change)=\\\"setValue('students_friendly', 0)\\\" value=\\\"0\\\" [checked]=\\\"model.students_friendly == 0 ? 'checked' : ''\\\"\\n            name=\\\"students_friendly\\\">\\n          <span class=\\\"checkmark\\\">No</span>\\n        </label>\\n        <div class=\\\"clearfix\\\"></div>\\n      </div>\\n\\n\\n      <div class=\\\"spacer15\\\"></div>\\n      <div class=\\\"form-group-3\\\">\\n        <label class=\\\"p16-two\\\">LGBT Friendly? <span class=\\\"color-red\\\">*</span></label>\\n        <div class=\\\"clearfix\\\"></div>\\n        <label class=\\\"cust-radio\\\">\\n          <input type=\\\"radio\\\" (change)=\\\"setValue('lgtb_friendly', 1)\\\" value=\\\"1\\\" [checked]=\\\"model.lgtb_friendly == 1 ? 'checked' : ''\\\"\\n            name=\\\"lgtb_friendly\\\">\\n          <span class=\\\"checkmark\\\">Yes</span>\\n        </label>\\n        <label class=\\\"cust-radio\\\">\\n          <input type=\\\"radio\\\" (change)=\\\"setValue('lgtb_friendly', 0)\\\" value=\\\"0\\\" [checked]=\\\"model.lgtb_friendly == 0 ? 'checked' : ''\\\"\\n            name=\\\"lgtb_friendly\\\">\\n          <span class=\\\"checkmark\\\">No</span>\\n        </label>\\n        <div class=\\\"clearfix\\\"></div>\\n      </div>\\n\\n\\n      <div class=\\\"spacer15\\\"></div>\\n      <div class=\\\"form-group-3\\\">\\n        <label class=\\\"p16-two\\\">Mature People Friendly? <span class=\\\"color-red\\\">*</span></label>\\n        <div class=\\\"clearfix\\\"></div>\\n        <label class=\\\"cust-radio\\\">\\n          <input type=\\\"radio\\\" (change)=\\\"setValue('mature_people_friendly', 1)\\\" value=\\\"1\\\" [checked]=\\\"model.mature_people_friendly == 1 ? 'checked' : ''\\\"\\n            name=\\\"mature_people_friendly\\\">\\n          <span class=\\\"checkmark\\\">Yes</span>\\n        </label>\\n        <label class=\\\"cust-radio\\\">\\n          <input type=\\\"radio\\\" (change)=\\\"setValue('mature_people_friendly', 0)\\\" value=\\\"0\\\" [checked]=\\\"model.mature_people_friendly == 0 ? 'checked' : ''\\\"\\n            name=\\\"mature_people_friendly\\\">\\n          <span class=\\\"checkmark\\\">No</span>\\n        </label>\\n        <div class=\\\"clearfix\\\"></div>\\n      </div>\\n\\n\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <div class=\\\"btn-cont text-right\\\">\\n            <!-- <a class=\\\"btn-third btn\\\" href=\\\"javascript://\\\" (click)=\\\"addProperty(addForm, 4)\\\">Next</a> -->\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"setTab(2)\\\">Previous</button>\\n            <button type=\\\"submit\\\" [disabled]=\\\"preferableBuyer.invalid\\\" class=\\\"btn btn-primary marginL15\\\">Next</button>\\n          </div>\\n        </div>\\n      </div>\\n\\n    </div>\\n  </div>\\n</form>\\n\\n\\n\\n<form ngNativeValidate #custom=\\\"ngForm\\\" (ngSubmit)=\\\"addProperty(custom, 5)\\\">\\n  <!-- tab-4 -->\\n  <div class=\\\"white-bg\\\" *ngIf=\\\"tab==4 || tab==5\\\">\\n    <div class=\\\"page-title\\\">\\n      <h3>Custom</h3>\\n    </div>\\n    <div class=\\\"padding40\\\">\\n      <h5 class=\\\"marginB30\\\">Any information we missed, you want to add custom</h5>\\n\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-4 col-sm-12 col-12\\\">\\n          <div class=\\\"form-group-3\\\">\\n            <label class=\\\"p16-two\\\">Enter Parameter</label>\\n            <input autocomplete=\\\"off\\\" class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"newcustom_attribute.name\\\"\\n              name=\\\"name[{{c}}]\\\" placeholder=\\\"Enter parameter\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-4 col-sm-12 col-12\\\">\\n          <div class=\\\"form-group-3\\\">\\n            <label class=\\\"p16-two\\\">Enter Value</label>\\n            <input autocomplete=\\\"off\\\" class=\\\"form-control\\\" type=\\\"text\\\" [(ngModel)]=\\\"newcustom_attribute.value\\\"\\n              name=\\\"value[{{c}}]\\\" placeholder=\\\"Enter value\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-2 btn-cont\\\">\\n          <a href=\\\"javascript://\\\" class=\\\"add-more btn\\\" (click)=\\\"addCustomAttribute()\\\">Add More</a>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row\\\" *ngFor=\\\"let custom_attribute of model.custom_attributes; let c = index;\\\">\\n        <div class=\\\"col-md-4 col-sm-12 col-12\\\">\\n          <div class=\\\"form-group-3\\\">\\n            <label class=\\\"p16-two\\\">Enter Parameter</label>\\n            <input autocomplete=\\\"off\\\" class=\\\"form-control\\\" type=\\\"text\\\" [value]=\\\"custom_attribute.name\\\" disabled />\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-4 col-sm-12 col-12\\\">\\n          <div class=\\\"form-group-3\\\">\\n            <label class=\\\"p16-two\\\">Enter Value</label>\\n            <input autocomplete=\\\"off\\\" class=\\\"form-control\\\" type=\\\"text\\\" [value]=\\\"custom_attribute.value\\\" disabled />\\n          </div>\\n        </div>\\n        <div class=\\\"col-md-4 col-sm-12 col-12\\\">\\n          <div class=\\\"btn-cont \\\">\\n            <a href=\\\"javascript://\\\" class=\\\"btn delete-button marginT30\\\" (click)=\\\"model.custom_attributes.splice(c, 1)\\\">\\n              <img src=\\\"assets/img/delete-button.png\\\" width=\\\"40\\\" style=\\\"width: 20px; margin-top: 10px;\\\">\\n            </a>\\n          </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"row\\\">\\n        <div class=\\\"col-md-12\\\">\\n          <div class=\\\"btn-cont text-right\\\">\\n            <!-- <a class=\\\"btn-third btn\\\" href=\\\"javascript://\\\" (click)=\\\"addProperty(addForm, 5)\\\">Next</a> -->\\n            <button type=\\\"button\\\" class=\\\"btn btn-primary\\\" (click)=\\\"setTab(3)\\\">Previous</button>\\n            <button type=\\\"submit\\\" class=\\\"btn btn-primary marginL15\\\">Submit</button>\\n          </div>\\n        </div>\\n      </div>\\n\\n    </div>\\n  </div>\\n</form>\\n\\n\\n\\n<!-- Add More img -->\\n<span data-target=\\\"#add-more-img\\\" data-toggle=\\\"modal\\\" #modalOpen></span>\\n<div class=\\\"modal add-more-popup\\\" id=\\\"add-more-img\\\">\\n  <div class=\\\"modal-dialog modal-lg\\\">\\n    <div class=\\\"modal-content\\\">\\n\\n      <!-- Modal Header -->\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">Images</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" #modalClose>&times;</button>\\n      </div>\\n\\n      <!-- Modal body -->\\n      <div class=\\\"modal-body\\\">\\n        <div class=\\\"uploaded-img-block\\\">\\n          <div class=\\\"uploaded-img\\\" *ngFor=\\\"let item of file2.files; let i=index\\\">\\n            <a class=\\\"remove\\\" (click)=\\\"file2.remove(i)\\\"><img src=\\\"assets/img/remove-icon.png\\\" alt=\\\"img\\\"></a>\\n            <img *ngIf=\\\"item\\\" class=\\\"u-img\\\" [src]=\\\"item.image\\\" alt=\\\"img\\\">\\n            <img *ngIf=\\\"!item\\\" class=\\\"u-img\\\" src=\\\"http://via.placeholder.com/300x300\\\" alt=\\\"img\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\"add-more-images\\\">\\n          <input type=\\\"file\\\" name=\\\"add-more\\\" multiple max=\\\"6\\\" accept=\\\"image/*\\\" (change)=\\\"file2Select($event)\\\">\\n          <span>+ Add more images</span>\\n        </div>\\n      </div>\\n\\n      <!-- Modal footer -->\\n      <div class=\\\"modal-footer btn-cont\\\">\\n        <button type=\\\"button\\\" (click)=\\\"saveImages()\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n      </div>\\n\\n    </div>\\n  </div>\\n</div>\\n\\n\\n<!-- Add 360 images -->\\n<span data-target=\\\"#add-more-360-img\\\" data-toggle=\\\"modal\\\" #modalOpen360Img></span>\\n<div class=\\\"modal add-more-popup\\\" id=\\\"add-more-360-img\\\">\\n  <div class=\\\"modal-dialog modal-lg\\\">\\n    <div class=\\\"modal-content\\\">\\n\\n      <!-- Modal Header -->\\n      <div class=\\\"modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">360<span>&#176;</span> Images</h4>\\n        <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" #modalClose360Img>&times;</button>\\n      </div>\\n\\n      <!-- Modal body -->\\n      <div class=\\\"modal-body\\\">\\n        <div class=\\\"uploaded-img-block\\\">\\n          <div class=\\\"uploaded-img\\\" *ngFor=\\\"let item of file360.files; let i=index\\\">\\n            <a class=\\\"remove\\\" (click)=\\\"file360.remove(i)\\\"><img src=\\\"assets/img/remove-icon.png\\\" alt=\\\"img\\\"></a>\\n            <img *ngIf=\\\"item\\\" class=\\\"u-img\\\" [src]=\\\"item.image\\\" alt=\\\"img\\\">\\n            <img *ngIf=\\\"!item\\\" class=\\\"u-img\\\" src=\\\"http://via.placeholder.com/300x300\\\" alt=\\\"img\\\">\\n          </div>\\n        </div>\\n\\n        <div class=\\\"add-more-images\\\">\\n          <input type=\\\"file\\\" name=\\\"add-more\\\" multiple max=\\\"6\\\" accept=\\\"image/*\\\" (change)=\\\"file360Select($event)\\\">\\n          <span>+ Add more 360<span>&#176;</span> images</span>\\n        </div>\\n      </div>\\n\\n      <!-- Modal footer -->\\n      <div class=\\\"modal-footer btn-cont\\\">\\n        <button type=\\\"button\\\" (click)=\\\"save360Images()\\\" class=\\\"btn btn-primary\\\">Submit</button>\\n      </div>\\n\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, ViewChild, ElementRef, NgZone } from '@angular/core';\nimport { AdminService } from '../../../services/admin.service';\nimport { CommonService } from '../../../services/common.service';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport { IProperty } from '../../../common/property';\nimport { DomSanitizer } from '@angular/platform-browser';\nimport { NgForm, FormControl } from '@angular/forms';\nimport { MapsAPILoader } from '@agm/core';\nimport { Constant } from '../../../common/constants';\nimport { FileUpload } from './../../../common/fileUpload';\nimport { AddPropertyModel, Building, PropertyDetails } from '../../../models/addProperty.model';\nimport { HttpInterceptor } from '../../../services/http-interceptor';\nimport { AddProjectModel, Towers } from 'src/app/models/addProject.model';\ndeclare const google;\ndeclare let swal: any;\n\n@Component({\n  selector: 'app-add-property',\n  templateUrl: './add-property.component.html',\n  styleUrls: ['./add-property.component.css'],\n  providers: [AddPropertyModel, Building, Constant, HttpInterceptor]\n})\nexport class AddPropertyComponent implements OnInit {\n\n  file2: FileUpload;\n  file360: FileUpload;\n\n  public parameter: IProperty = {};\n  @ViewChild('modalClose') modalClose: ElementRef;\n  @ViewChild('modalOpen') modalOpen: ElementRef;\n  @ViewChild('modalOpen360Img') modalOpen360Img: ElementRef;\n  @ViewChild('modalClose360Img') modalClose360Img: ElementRef;\n  @ViewChild('mapDiv') mapDiv: ElementRef;\n  @ViewChild('search') searchElementRef: ElementRef;\n\n  public latitude: number;\n  public longitude: number;\n  public searchControl: FormControl;\n  public zoom: number;\n\n  name: string;\n\n  url: File;\n  url2 = [];\n  urlImg360 = [];\n  tab: number;\n  selectedGuest: any;\n  image1: any;\n  image2: any;\n  image3: any;\n  showBuilding = false;\n  amenityList = [];\n  amen = '';\n  bankList = [];\n  bank = '';\n  testMarital = [\n    {\n      id: 1,\n      name: 'Married',\n      checked: false\n    },\n    {\n      id: 2,\n      name: 'Unmarried',\n      checked: false\n    },\n    {\n      id: 3,\n      name: 'Divorced',\n      checked: false\n    }\n  ];\n  imageEvent = [];\n  showText = false;\n  showSearch = false;\n  buildingName = '';\n  initialCountry: any;\n  propertyDetails = false;\n  details: any;\n  editMode = false;\n  newcarpet_area = { area: '', price: '' };\n  newcustom_attribute = { name: '', value: '' };\n  buildingLoading = false;\n  buildingData: AddProjectModel;\n  searchedBuildings: Array<AddProjectModel>;\n  selectedBuilding: AddProjectModel;\n  selectedTower: Towers;\n\n  video: any;\n  image: any;\n  videoObj: Object = {\n    thumbnail: '',\n    original: ''\n  };\n  videoSrc: any;\n\n  constructor(public model: AddPropertyModel, private us: AdminService, private cs: CommonService,\n    private router: Router, private sanitization: DomSanitizer, private mapsAPILoader: MapsAPILoader,\n    private ngZone: NgZone, private building: Building, public constant: Constant,\n    private route: ActivatedRoute,\n    private http: HttpInterceptor,\n    private element: ElementRef) { }\n\n  ngOnInit() {\n    this.parameter.page = 1;\n    this.parameter.itemsPerPage = this.constant.limit4;\n    this.buildingData = new AddProjectModel();\n    this.parameter.amenities = [];\n    this.parameter.banks = [];\n    this.http.loader.next({ value: true });\n    this.details = new PropertyDetails;\n\n    this.file2 = new FileUpload(false, this.us);\n    this.file360 = new FileUpload(false, this.us);\n\n    this.parameter.sub = this.route.params.subscribe(params => {\n      if (params['seller_id'] !== '0') {\n        this.parameter.seller_id = params['seller_id'];\n      }\n      if (params['edit'] === 'edit') {\n        this.editMode = true;\n      }\n      this.parameter.property_id = params['property_id'];\n      if (this.parameter.property_id === '0') {\n        this.parameter.property_id = '';\n        this.testMarital[0].checked = true;\n        this.model.marital_status = [1];\n        // set 0 bcz optional\n        this.model.quantity = 0;\n        this.model.half_bathroom = 0;\n        this.model.property_price = 0;\n        this.showSearch = true;\n        this.parameter.propertyDetails = new AddPropertyModel();\n      } else {\n        this.getPropertyById(this.parameter.property_id);\n      }\n      console.log(params);\n    });\n\n    this.parameter.buildingCount = 0;\n    this.initialCountry = { initialCountry: this.constant.initialCountry };\n    this.building.dev_countrycode = this.constant.dial_code;\n\n    this.tab = 0;\n    this.getCountries('');\n    this.getConfigurations();\n    this.getPropertyTypes();\n    this.getAmenities();\n    this.getBanks();\n    this.getBuildingSpecificTypes();\n    this.getPaymentStatuses();\n\n    // set google maps defaults\n    this.zoom = 4;\n    // create search FormControl\n    this.searchControl = new FormControl();\n    // set current position\n    this.setCurrentPosition();\n    // console.log('propertyid', this.parameter.property_id);\n  }\n\n  getPropertyById(property_id) {\n    this.parameter.loading = true;\n    const input = new FormData();\n    input.append('property_id', property_id);\n    this.parameter.loading = true;\n    this.us.postDataApi('getPropertyById', input)\n      .subscribe(\n        success => {\n          this.parameter.loading = false;\n          console.log(success);\n          this.parameter.loading = false;\n          this.parameter.propertyDetails = success['data'];\n          this.setModelData(success['data']);\n          if (this.parameter.propertyDetails.step < 5) {\n            this.tab = this.parameter.propertyDetails.step;\n          }\n          this.url2 = this.parameter.propertyDetails.images.map(op => op.image);\n          if (this.url2.length > 0) {\n            this.image2 = this.url2[0];\n          }\n          // set 360 images\n          this.urlImg360 = this.parameter.propertyDetails.images360.map(op => op.image);\n          if (this.urlImg360.length > 0) {\n            this.image2 = this.urlImg360[0];\n          }\n          // set configuarations\n          this.parameter.items = [];\n          success['data'].building.configurations.forEach(element => {\n            // adding configurations\n            this.parameter.items.push(element.config);\n          });\n        }, error => {\n          this.parameter.loading = false;\n        }\n      );\n  }\n\n  getProjectById(step: number) {\n    this.us.postDataApi('getProjectByIdWithCSC', { building_id: this.building.id })\n      .subscribe(\n        success => {\n          this.parameter.loading = false;\n          this.buildingData = success['data'];\n          // this.parameter.propertyDetails.building = this.buildingData;\n          this.parameter.propertyDetails.images = this.buildingData.images;\n          this.parameter.propertyDetails.amenities = this.buildingData.amenities;\n          // this.parameter.items = this.buildingData.configurations;\n          this.parameter.items = [];\n          this.buildingData.configurations.forEach(element => {\n            // adding configurations\n            this.parameter.items.push(element.config);\n            // adding carpet area and price\n            const obj = {\n              area: element.carpet_area,\n              price: element.base_price\n            };\n            this.model.carpet_areas.push(obj);\n          });\n          if (success['data'].locality.id) {\n            this.getStates(success['data'].locality.city.state.country.id, '');\n            this.getCities(success['data'].locality.city.state.id, '');\n            this.getLocalities(success['data'].locality.city.id, '');\n\n            this.model.country_id = success['data'].locality.city.state.country.id;\n            this.model.state_id = success['data'].locality.city.state.id;\n            this.model.city_id = success['data'].locality.city.id;\n            this.model.locality_id = success['data'].locality.id;\n          }\n          this.parameter.propertyDetails.custom_values = this.buildingData.custom_values;\n          this.tab = step + 1;\n        }, error => {\n          this.parameter.loading = false;\n        }\n      );\n  }\n\n  setModelData(data) {\n    console.log(data);\n    this.model.id = data.id;\n    this.model.name = data.name;\n    this.model.property_price = data.property_price;\n\n\n    this.model.building_id = data.building_id;\n    this.model.building_towers_id = data.building_towers_id;\n    this.model.floor_num = data.floor_num;\n\n    this.model.pets = data.pets !== null ? data.pets : '1';\n    this.model.kids_friendly = data.kids_friendly !== null ? data.kids_friendly : '1';\n    this.model.students_friendly = data.students_friendly !== null ? data.students_friendly : '1';\n    this.model.lgtb_friendly = data.lgtb_friendly !== null ? data.lgtb_friendly : '1';\n    this.model.mature_people_friendly = data.mature_people_friendly !== null ? data.mature_people_friendly : '1';\n\n    this.model.for_rent = data.for_rent === 1 ? true : false;\n    this.model.for_sale = data.for_sale === 1 ? true : false;\n    this.getStates(data.locality.city.state.country.id, '');\n    this.getCities(data.locality.city.state.id, '');\n    this.getLocalities(data.locality.city.id, '');\n\n    this.model.locality_id = data.locality.id;\n    this.model.city_id = data.locality.city.id;\n    this.model.state_id = data.locality.city.state.id;\n    this.model.country_id = data.locality.city.state.country.id;\n\n    this.model.configuration_id = data.configuration.id;\n    this.model.property_type_id = data.property_type.id;\n\n    this.model.floor_plan = data.floor_plan;\n    this.model.cover_image = data.image;\n    this.model.description = data.description;\n    this.model.quantity = data.quantity;\n    this.model.floor = data.floor;\n    this.model.bedroom = data.bedroom;\n    this.model.bathroom = data.bathroom;\n    this.model.parking = data.parking;\n\n    this.model.parking_count = data.parking_count;\n    this.model.parking_for_sale = data.parking_for_sale;\n    this.model.furnished = data.furnished;\n    this.model.property_quantity_details = data.details;\n    this.model.images = data.images;\n    this.model.images360 = data.images360;\n    this.model.videos = data.videos;\n\n    this.model.for_hold = data.for_hold === 1 ? true : false;\n    this.model.half_bathroom = data.half_bathroom;\n\n    this.building.id = data.building ? data.building.id : '';\n    this.building.name = data.building ? data.building.name : '';\n    this.model.building_towers = data.building_towers ? data.building_towers : {};\n    if (this.building.id === '') {\n      this.showSearch = true;\n    }\n    for (let index = 0; index < data.amenities.length; index++) {\n      this.addAmenity(data.amenities[index]);\n    }\n\n    for (let index = 0; index < data.banks.length; index++) {\n      this.addBank(data.banks[index]);\n    }\n\n\n    for (let index = 0; index < this.testMarital.length; index++) {\n      // console.log('data.marital_status', this.testMarital, data.marital_statuses);\n      if (data.marital_statuses.length !== 0) {\n        for (let i = 0; i < data.marital_statuses.length; i++) {\n          if (this.testMarital[index].name === data.marital_statuses[i].name_en) {\n            // console.log('check', this.testMarital, data.marital_statuses);\n            this.testMarital[index].checked = true;\n          }\n        }\n      } else {\n        this.testMarital[0].checked = true;\n      }\n      // this.model.marital_status[index] = data.marital_status[index].id;\n    }\n\n    this.bankList = data.banks;\n    for (let index = 0; index < data.banks.length; index++) {\n      const element = data.banks[index];\n      this.model.banks[index] = data.banks[index].id;\n    }\n    // this.image1 = this.sanitization.bypassSecurityTrustStyle(`url(${this.model.floor_plan})`);\n\n    for (let index = 0; index < data.carpet_areas.length; index++) {\n      const element = data.carpet_areas[index];\n      this.model.carpet_areas[index] = { area: element.area, price: element.price };\n      this.newcarpet_area = { area: element.area, price: element.price };\n    }\n\n    for (let index = 0; index < data.custom_values.length; index++) {\n      const element = data.custom_values[index];\n      this.model.custom_attributes[index] = { name: element.name, value: element.value };\n    }\n  }\n\n  setTab(tab: any) {\n    swal({\n      title: 'Are you sure?',\n      text: 'Moving back can reset information entered on current tab.',\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: this.constant.confirmButtonColor,\n      cancelButtonColor: this.constant.cancelButtonColor,\n      confirmButtonText: 'Yes'\n    }).then((result) => {\n      if (result.value) {\n        this.tab = tab;\n      }\n    });\n  }\n\n  showSearchBox() {\n    this.showSearch = true;\n  }\n\n  onCountryChange(e) {\n    this.building.dev_countrycode = e.dialCode;\n    this.initialCountry = { initialCountry: e.iso2 };\n  }\n\n  getCountries(keyword: string) {\n    this.us.postDataApi('getCountries', {})\n      .subscribe(\n        success => { this.parameter.countries = success['data']; }\n      );\n  }\n\n  getStates(country_id: any, keyword: string) {\n    // this.parameter.loading = true;\n    this.model.country_id = country_id;\n    this.model.state_id = '';\n    this.model.city_id = '';\n    this.model.locality_id = '';\n    this.parameter.cities = [];\n    this.parameter.localities = [];\n    const input = new FormData();\n    input.append('country_id', country_id);\n\n    this.us.postDataApi('country/getStates', input).subscribe(success => {\n      this.parameter.states = success['data'];\n      // this.parameter.loading = false;\n    },\n      error => {\n        // this.parameter.loading = false;\n      });\n  }\n\n  getCities(state_id: any, keyword: string) {\n    // this.parameter.loading = true;\n    this.model.state_id = state_id;\n    this.model.city_id = '';\n    this.model.locality_id = '';\n    this.parameter.localities = [];\n    const input = new FormData();\n    input.append('state_id', state_id);\n\n    this.us.postDataApi('getCities', input).subscribe(success => {\n      this.parameter.cities = success['data'];\n      // this.parameter.loading = false;\n    },\n      error => {\n        // this.parameter.loading = false;\n      });\n  }\n\n\n  getLocalities(city_id: any, keyword = '') {\n    this.model.city_id = city_id;\n    this.model.locality_id = '';\n\n    const input = new FormData();\n    input.append('city_id', city_id);\n\n    if (keyword) { input.append('keyword', keyword); }\n\n    this.us.postDataApi('getLocalities', input)\n      .subscribe(\n        success => { this.parameter.localities = success['data']; }\n      );\n  }\n\n  setAmenity(id: any) {\n    this.model.amenities = [id];\n  }\n\n  setValue(key: any, value: any) {\n    this.model[key] = value;\n  }\n\n  getConfigurations() {\n    const input = new FormData();\n    this.us.postDataApi('getConfigurations', input)\n      .subscribe(\n        success => {\n          this.parameter.items = success['data'];\n          if (this.parameter.items.length !== 0 && this.parameter.property_id === '') {\n            this.model.configuration_id = this.parameter.items[0].id;\n          }\n        }\n      );\n  }\n\n  getPropertyTypes() {\n    const input = new FormData();\n    this.us.postDataApi('getPropertyTypes', input)\n      .subscribe(\n        success => {\n          this.parameter.propertyTypes = success['data'];\n          if (this.parameter.propertyTypes.length !== 0 && this.parameter.property_id === '') {\n            this.model.property_type_id = this.parameter.propertyTypes[0].id;\n          }\n        }\n      );\n  }\n\n  getAmenities() {\n    const input = new FormData();\n    this.us.postDataApi('getPropertyAmenities', input)\n      .subscribe(\n        success => { this.parameter.amenities = success['data']; }\n      );\n  }\n\n  addAmenity(amen) {\n    if (!amen) {\n      return false;\n    }\n    const index = this.amenityList.findIndex(x => x.id == amen.id);\n    if (index < 0) {\n      this.model.amenities.push(amen.id);\n      this.amenityList.push(amen);\n\n      const removeIndex = this.parameter.amenities.findIndex(x => x.id == amen.id);\n      this.parameter.amenities.splice(removeIndex, 1);\n    }\n  }\n\n  getSelectedAmenityByName(selectedName: string) {\n    const r = this.amenityList.find(amenity => amenity.name_en === selectedName);\n    if (r) {\n      return '';\n    } else {\n      return this.parameter.amenities.find(amenity => amenity.name_en === selectedName);\n    }\n  }\n\n  removeAmenity(amenity, index) {\n    this.parameter.amenities.push(amenity);\n    this.model.amenities.splice(index, 1);\n    this.amenityList.splice(index, 1);\n  }\n\n\n  getBanks() {\n    const input = new FormData();\n    this.us.postDataApi('getBanks', input)\n      .subscribe(\n        success => { this.parameter.banks = success['data']; }\n      );\n  }\n\n  getBuildingSpecificTypes() {\n    const input = new FormData();\n    this.us.postDataApi('getBuildingSpecificTypes', input)\n      .subscribe(\n        success => { this.parameter.buildingSpecificTypes = success['data']; }\n      );\n  }\n\n  getPaymentStatuses() {\n    const input = new FormData();\n    this.us.postDataApi('getPaymentStatuses', input)\n      .subscribe(\n        success => { this.parameter.paymentStatuses = success['data']; }\n      );\n  }\n  addBank(bank) {\n    if (!bank) {\n      return false;\n    }\n    const index = this.bankList.findIndex(x => x.id == bank.id);\n    if (index < 0) {\n      this.model.banks.push(bank.id);\n      this.bankList.push(bank);\n      const removeIndex = this.parameter.banks.findIndex(x => x.id == bank.id);\n      this.parameter.banks.splice(removeIndex, 1);\n    }\n  }\n\n  removeBank(bank, index) {\n    this.parameter.banks.push(bank);\n    this.model.banks.splice(index, 1);\n    this.bankList.splice(index, 1);\n  }\n\n  addCarpetArea() {\n    if (!this.newcarpet_area.area || !this.newcarpet_area.price) {\n      swal('Error', 'Please fill carpet area fields', 'error');\n    } else {\n      this.model.carpet_areas.push(JSON.parse(JSON.stringify(this.newcarpet_area)));\n      this.newcarpet_area = { area: '', price: '' };\n    }\n  }\n\n  addCustomAttribute() {\n    if (!this.newcustom_attribute.name || !this.newcustom_attribute.value) {\n      swal('Error', 'Please fill custom attribute fields', 'error');\n    } else {\n      this.model.custom_attributes.push(this.newcustom_attribute);\n      this.newcustom_attribute = { name: '', value: '' };\n    }\n  }\n\n  getSelectedBankByName(selectedName: string) {\n    const r = this.bankList.find(bank => bank.name === selectedName);\n    if (r) {\n      return '';\n    } else {\n      return this.parameter.banks.find(bank => bank.name === selectedName);\n    }\n  }\n\n\n  searchBuilding(keyword: string) {\n    if (!keyword) { swal('Error', 'Please enter some text.', 'error'); return false; }\n\n    this.showBuilding = false;\n    this.buildingLoading = true;\n\n    const input = new FormData();\n    input.append('keyword', keyword);\n\n    this.us.postDataApi('searchBuilding', input)\n      .subscribe(\n        success => {\n          this.searchedBuildings = success['data'];\n          this.parameter.buildingCount = success['data'].length;\n          if (this.parameter.buildingCount === 0) { this.showText = true; }\n          this.buildingLoading = false;\n        },\n        error => {\n          this.buildingLoading = true;\n        }\n      );\n  }\n\n  getPage(page: number) {\n    this.parameter.page = page;\n  }\n\n  showBuildingDetails(showBuilding) {\n    this.showBuilding = showBuilding;\n    this.buildingName = '';\n    this.loadPlaces();\n  }\n\n  onSelectFile2(event) {\n    if (event.target.files && event.target.files[0]) {\n      if ((this.url2.length + event.target.files.length) > 6 || event.target.files.length > 6) {\n        swal('Limit exceeded', 'You can upload maximum of 6 images', 'error');\n      } else {\n        for (let index = 0; index < event.target.files.length; index++) {\n          const reader = new FileReader();\n          reader.onload = (e: any) => {\n            this.imageEvent.push(event.target.files[index]);\n            this.url2.push(e.target.result);\n            const tempurl = e.target.result;\n            this.image2 = tempurl;\n          };\n          reader.readAsDataURL(event.target.files[index]);\n        }\n      }\n    }\n  }\n\n  onSelect360File(event) {\n    if (event.target.files && event.target.files[0]) {\n      if ((this.urlImg360.length + event.target.files.length) > 6 || event.target.files.length > 6) {\n        swal('Limit exceeded', 'You can upload maximum of 6 images', 'error');\n      } else {\n        for (let index = 0; index < event.target.files.length; index++) {\n          const reader = new FileReader();\n          reader.onload = (e: any) => {\n            this.imageEvent.push(event.target.files[index]);\n            this.urlImg360.push(e.target.result);\n            const tempurl = e.target.result;\n            this.image2 = tempurl;\n          };\n          reader.readAsDataURL(event.target.files[index]);\n        }\n      }\n    }\n  }\n\n  onSelectFile(param, event) {\n    //  const dd = this.uploader.onSelectFile(event);\n    if (event.target.files && event.target.files[0]) {\n      const reader = new FileReader();\n      reader.onload = (e: any) => {\n        this.url = e.target.result;\n        this.model[param] = this.url;\n      };\n      reader.readAsDataURL(event.target.files[0]);\n\n      const input = new FormData();\n      input.append('image', event.target.files[0]);\n      this.us.postDataApi('saveImage', input).subscribe(\n        success => {\n          this.model[param] = success['data'].image;\n          // console.log(this.model);\n        });\n\n    }\n  }\n\n  modelOpenFun() {\n    this.modalOpen.nativeElement.click();\n    this.file2.backup(JSON.parse(JSON.stringify(this.model.images)));\n  }\n\n  modelOpen360ImgFun() {\n    this.modalOpen360Img.nativeElement.click();\n    this.file360.backup(JSON.parse(JSON.stringify(this.model.images360)));\n  }\n\n  modelCloseFun() {\n    this.modalClose.nativeElement.click();\n  }\n\n  saveImages() {\n    this.http.loader.next({ value: true });\n    console.log('sss');\n    if (this.file2.files.length < 1) {\n      swal('Error', 'Please select atleast one image', 'error'); return false;\n    }\n    this.modalClose.nativeElement.click();\n    this.file2.upload().then(r => {\n      console.log('resolved');\n      this.model.images = this.file2.files;\n      this.http.loader.next({ value: false });\n    });\n  }\n\n  save360Images() {\n    this.http.loader.next({ value: true });\n    console.log('sss');\n    if (this.file360.files.length < 1) {\n      swal('Error', 'Please select atleast one image', 'error'); return false;\n    }\n    this.modalClose360Img.nativeElement.click();\n    this.file360.upload().then(r => {\n      console.log('resolved');\n      this.model.images360 = this.file360.files;\n      this.http.loader.next({ value: false });\n    });\n  }\n\n  file2Select($event) {\n    if ((this.file2.files.length + $event.target.files.length) > 6) {\n      swal('Limit exceeded', 'You can upload maximum of 6 images', 'error');\n      return false;\n    }\n    this.file2.onSelectFile($event);\n  }\n\n  file360Select($event) {\n    if ((this.file360.files.length + $event.target.files.length) > 6) {\n      swal('Limit exceeded', 'You can upload maximum of 6 images', 'error');\n      return false;\n    }\n    this.file360.onSelectFile($event);\n  }\n  onSelectFile3(event) { // called each time file input changes\n    if (event.target.files && event.target.files[0]) {\n      const reader = new FileReader();\n\n      reader.onload = (e: any) => {\n        this.url = e.target.result;\n        this.image3 = this.sanitization.bypassSecurityTrustStyle(`url(${this.url})`);\n      };\n\n      const input = new FormData();\n      input.append('image', event.target.files[0]);\n\n      this.us.postDataApi('saveImage', input)\n        .subscribe(\n          success => { this.model.floor_plan = success['data'].image; }\n        );\n\n      reader.readAsDataURL(event.target.files[0]);\n    }\n  }\n\n  addMaritalStatus(checked, i) {\n    this.testMarital[i].checked = this.testMarital[i].checked === true ? false : true;\n  }\n\n  addProperty(formdata: NgForm, tab) {\n    console.log('tab', tab);\n    if (this.model.parking_for_sale && this.model.parking_count) {\n      if (this.model.parking_for_sale > this.model.parking_count) {\n        swal('Error', 'Parking for sale cannot be greater than total parkings available.', 'error');\n        return;\n      }\n    }\n    this.model.floor = 0; // now static\n    this.model.marital_status = [];\n    if (this.model.videoLoader) {\n      swal('Error', 'Uploading video.', 'error');\n      return;\n    }\n    for (let index = 0; index < this.testMarital.length; index++) {\n      if (this.testMarital[index].checked === true) {\n        this.model.marital_status.push(this.testMarital[index].id);\n      }\n    }\n\n    this.model.step = tab - 1;\n\n    // setting newcarpert area to carpert_areas bcz ealier it was array => now single carpertarea\n    this.model.carpet_areas = [];\n    this.model.carpet_areas.push(JSON.parse(JSON.stringify(this.newcarpet_area)));\n\n    if (this.model.carpet_areas.length < 1 && this.tab == 1) {\n      swal('Error', 'Please add carpet area.', 'error');\n    } else if ((this.model.cover_image === null || this.model.cover_image === undefined) && (this.model.step == 2)) {\n      swal('Error', 'Please choose cover image.', 'error');\n    } else if ((this.model.floor_plan === null || this.model.floor_plan === undefined) && (this.model.step == 2)) {\n      swal('Error', 'Please choose floor plan.', 'error');\n    }\n    // else if ((this.model.amenities.length === 0) && (this.model.step == 2)) {\n    //   swal('Error', 'Please choose amenity.', 'error');\n    // }\n    else if ((this.model.marital_status.length === 0) && (this.model.step == 3)) {\n      swal('Error', 'Please choose marital status.', 'error');\n    } else {\n      const input = new FormData();\n      if (this.parameter.property_id) {\n        input.append('property_id', this.parameter.property_id);\n      }\n      if (this.parameter.seller_id && this.parameter.seller_id !== '0') {\n        input.append('seller_id', this.parameter.seller_id);\n      }\n      input.append('step', this.model.step.toString());\n      if (this.model.step === 1) {\n        input.append('name', this.model.name);\n        input.append('for_sale', this.model.for_sale === true ? '1' : '0');\n        input.append('for_rent', this.model.for_sale === true ? '0' : '1');\n        // input.append('for_hold', this.model.for_sale === true ? '0' : '0');\n        input.append('for_hold', '0');\n        input.append('country_id', this.model.country_id);\n        input.append('state_id', this.model.state_id);\n        input.append('city_id', this.model.city_id);\n        input.append('locality_id', this.model.locality_id);\n        input.append('configuration_id', this.model.configuration_id);\n        input.append('carpet_areas', JSON.stringify(this.model.carpet_areas));\n        input.append('property_type_id', this.model.property_type_id);\n        input.append('building_id', this.model.building_id);\n        input.append('step', this.model.step.toString());\n        input.append('building_towers_id', this.model.building_towers_id);\n        input.append('floor_num', this.model.floor_num);\n      }\nconsole.log(this.model);\n      if (this.model.step === 2) {\n        const imagesString = this.model.images.map(r => r.image);\n        const imagesString360 = this.model.images360.map(r => r.image);\n        // const videoString = this.model.videos.map(r => r.image);\n        if (this.model.parking === 0) {\n          this.model.parking_count = 0;\n          this.model.parking_for_sale = 0;\n        }\n        // added building_id and step cuz need to update sttaus and step\n        input.append('building_id', this.model.building_id);\n        input.append('step', this.model.step.toString());\n        input.append('images', JSON.stringify(imagesString));\n        input.append('images360', JSON.stringify(imagesString360));\n        input.append('videos', JSON.stringify(this.model.videos));\n        input.append('cover_image', this.model.cover_image);\n        input.append('floor_plan', this.model.floor_plan);\n        input.append('bedroom', this.model.bedroom.toString());\n        input.append('bathroom', this.model.bathroom.toString());\n        input.append('half_bathroom', this.model.half_bathroom ? this.model.half_bathroom.toString() : '0');\n        input.append('floor', this.model.floor.toString());\n        input.append('property_price', this.model.property_price ? this.model.property_price.toString() : '0');\n        input.append('parking', this.model.parking.toString());\n        input.append('parking_count', this.model.parking_count ? this.model.parking_count.toString() : '0');\n        input.append('parking_for_sale', this.model.parking_for_sale ? this.model.parking_for_sale.toString() : '0');\n        input.append('furnished', this.model.furnished.toString());\n        input.append('description', this.model.description);\n        input.append('quantity', this.model.quantity ? this.model.quantity.toString() : '0');\n        input.append('amenities', JSON.stringify(this.model.amenities ? this.model.amenities : []));\n        input.append('banks', JSON.stringify(this.model.banks ? this.model.banks : []));\n        input.append('property_quantity_details',\n          JSON.stringify(this.model.property_quantity_details ? this.model.property_quantity_details : []));\n      }\n      if (this.model.step === 3) {\n        // added building_id and step cuz need to update sttaus and step\n        input.append('building_id', this.model.building_id);\n        input.append('step', this.model.step.toString());\n        input.append('pets', this.model.pets.toString());\n        input.append('kids_friendly', this.model.kids_friendly.toString());\n        input.append('students_friendly', this.model.students_friendly.toString());\n        input.append('lgtb_friendly', this.model.lgtb_friendly.toString());\n        input.append('mature_people_friendly', this.model.mature_people_friendly.toString());\n        input.append('marital_status', JSON.stringify(this.model.marital_status));\n      }\n      if (this.model.step === 4) {\n        // added building_id and step cuz need to update sttaus and step\n        input.append('building_id', this.model.building_id);\n        input.append('step', this.model.step.toString());\n        input.append('custom_attributes', JSON.stringify(this.model.custom_attributes));\n      }\n      console.log('INPUT=>', input);\n      this.parameter.loading = true;\n      this.us.postDataApi('addProperty', input)\n        .subscribe(\n          success => {\n            this.parameter.loading = false;\n            console.log(success);\n            this.parameter.loading = false;\n            if (this.model.step.toString() === '4') {\n              swal({\n                html: 'Submitted successfully.' + '<br>' +\n                'You will be notified once your property will be reviewed by them, you can view status in your properties.',\n                type: 'success'\n              });\n              // swal('Submitted successfully.',\n              //   'You will be notified once your property will be reviewed by them, you can view status in your properties.',\n              //   'success');\n              if (this.router.url.indexOf('/dashboard/properties/edit-property') === -1) {\n                this.router.navigate(['/dashboard/properties/view-properties']);\n              }\n            }\n            this.parameter.property_id = success['data'].id;\n            this.tab = tab;\n          }, error => {\n            this.parameter.loading = false;\n          }\n        );\n    }\n  }\n\n  setBuildingId(building: any) {\n    this.selectedBuilding = building;\n    this.building.id = building.id;\n    this.model.building_id = building.id;\n  }\n\n  setTower(tower: Towers) {\n    this.selectedTower = tower;\n    this.model.building_towers_id = tower.id;\n    this.selectedTower.floor_array = [];\n    for (let index = 0; index <= this.selectedTower.num_of_floors; index++) {\n      this.selectedTower.floor_array.push(index);\n    }\n  }\n\n  setFloor(floor_num: any) {\n    this.model.floor_num = floor_num;\n  }\n\n  tagBuilding() {\n\n    const input = new FormData();\n    if (this.parameter.property_id) { input.append('property_id', this.parameter.property_id); }\n    input.append('building_id', this.building.id);\n\n    this.parameter.loading = true;\n    this.us.postDataApi('tagBuilding', input)\n      .subscribe(\n        success => {\n          this.parameter.loading = false;\n          swal({\n            html: 'Submitted successfully.' + '<br>' +\n            'You will be notified once your property will be reviewed by them, you can view status in your properties.',\n            type: 'success'\n          });\n          // swal('Submitted successfully.',\n          //   'You will be notified once your property will be reviewed by them, you can view status in your properties.',\n          //   'success');\n          if (this.router.url.indexOf('/dashboard/properties/edit-property') === -1) {\n            this.router.navigate(['/dashboard/properties/view-properties']);\n          }\n        }, error => {\n          this.parameter.loading = false;\n        }\n      );\n  }\n\n\n  loadPlaces() {\n\n    this.latitude = 0;\n    this.longitude = 0;\n    // load Places Autocomplete\n    this.mapsAPILoader.load().then(() => {\n      const autocomplete = new google.maps.places.Autocomplete(this.searchElementRef.nativeElement, {\n        types: []\n      });\n      autocomplete.addListener('place_changed', () => {\n        this.ngZone.run(() => {\n          // get the place result\n          // const place: google.maps.places.PlaceResult = autocomplete.getPlace();\n          const place = autocomplete.getPlace();\n\n          // verify result\n          if (place.geometry === undefined || place.geometry === null) {\n            return;\n          }\n\n          // set latitude, longitude and zoom\n          this.latitude = place.geometry.location.lat();\n          this.longitude = place.geometry.location.lng();\n          this.zoom = 12;\n\n          if (place.formatted_address) { this.building.address = place.formatted_address; }\n        });\n      });\n    });\n  }\n\n  setCurrentPosition() {\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        this.latitude = position.coords.latitude;\n        this.longitude = position.coords.longitude;\n        this.zoom = 12;\n      });\n    }\n  }\n\n  placeMarker($event) {\n    this.latitude = $event.coords.lat;\n    this.longitude = $event.coords.lng;\n    this.getGeoLocation(this.latitude, this.longitude);\n  }\n\n\n  getGeoLocation(lat: number, lng: number) {\n    if (navigator.geolocation) {\n      this.parameter.loading = true;\n      const geocoder = new google.maps.Geocoder();\n      const latlng = new google.maps.LatLng(lat, lng);\n      const request = { latLng: latlng };\n\n      geocoder.geocode(request, (results, status) => {\n        if (status === google.maps.GeocoderStatus.OK) {\n          const result = results[0];\n          if (result != null) {\n            this.building.address = result.formatted_address;\n          } else {\n            this.building.address = lat + ',' + lng;\n          }\n        }\n        this.parameter.loading = false;\n      });\n    }\n  }\n\n\n  buildingRequest() {\n\n    if (this.building.dev_name && (!this.building.dev_phone || !this.building.dev_email || !this.building.dev_countrycode)) {\n      swal('Error', 'Please fill complete devloper information', 'error'); return false;\n    }\n\n    if (!this.latitude && !this.longitude) {\n      swal('Error', 'Please select location from the dropdown list.', 'error');\n      return false;\n    }\n\n    this.building.lat = this.latitude;\n    this.building.lng = this.longitude;\n\n    if (!this.building.lat || !this.building.lng) {\n      swal('Error', 'Please select location', 'error'); return false;\n    }\n    console.log(this.building);\n    this.parameter.loading = true;\n    this.us.postDataApi('buildingRequest', this.building)\n      .subscribe(\n        success => {\n          this.parameter.loading = false;\n          // swal('Submitted successfully.',\n          //   'You will be notified once your property will be reviewed by them, you can view status in your properties.',\n          //   'success');\n          // if (this.router.url.indexOf('/dashboard/properties/edit-property') === -1) {\n          //   this.router.navigate(['/dashboard/properties/view-properties']);\n          // }\n          // update tab=1 because we need to save property details, after adding property details\n          // data collector will create project template and then edit property and tag that\n          // particular project\n          swal({\n            html: 'Success' + '<br>' +\n            'You can add property details and data-collector will link this property to the building.',\n            type: 'success'\n          });\n          this.tab = 1;\n        }, error => {\n          this.parameter.loading = false;\n        }\n      );\n  }\n\n  addPropertyDetails() {\n    this.model.property_quantity_details.push(JSON.parse(JSON.stringify(this.details)));\n    this.details = new PropertyDetails;\n  }\n\n  checkEmptyDetails() {\n    for (const item of this.details) {\n      if (item == '') { return false; }\n    }\n    return true;\n  }\n\n  removeDetails(i: any) {\n    this.model.property_quantity_details.splice(i, 1);\n  }\n\n  clickOnSale() {\n    console.log(this.model.for_sale);\n  }\n\n  onSelectVideo(event) {\n\n  }\n\n\n  showCanvas(event) {\n    if (event.target.files[0].size > this.constant.fileSizeLimit) {\n      swal('Error', this.constant.errorMsg.FILE_SIZE_EXCEEDS, 'error');\n    } else {\n\n      setTimeout(() => {\n        this.model.videoLoader = true;\n        this.video = document.getElementById('video1');\n        const reader = new FileReader();\n        const videoTest = this.element.nativeElement.querySelector('.video55');\n        reader.onload = function(e) {\n          const src = e.target['result'];\n          videoTest.src = src;\n          const timer = setInterval( () => {\n            // find duration of video only of video is in ready state\n            if (videoTest.readyState === 4) {\n              setTimeout(() => {\n                // create canvas at middle of video\n                this.newcanvas(videoTest, event.target.files[0]);\n              }, 3000);\n              clearInterval(timer);\n            }\n          }, 100);\n        }.bind(this);\n        reader.readAsDataURL(event.target.files[0]);\n      }, 100);\n    }\n  }\n\n  newcanvas(video: any, videoFile: File) {\n    const canvas = document.getElementById('canvas') as HTMLCanvasElement;\n    const ss = canvas.getContext('2d').drawImage(video, 0, 0, video.videoWidth, video.videoHeight,\n                                                      0, 0, canvas.width, canvas.height);\n    const ImageURL = canvas.toDataURL('image/jpeg');\n    // model.image = ImageURL;\n    const fileToUpload = this.dataURLtoFile(ImageURL, 'tempFile.png');\n    this.cs.saveVideo(videoFile, fileToUpload).subscribe(\n      success => {\n        this.model.videoLoader = false;\n        this.model.videos = [];\n        const videoObj = {\n          video: '', thumb: ''\n        };\n        videoObj.video = success['data'].video;\n        videoObj.thumb = success['data'].thumb;\n        this.model.videos = [videoObj];\n      }, error => {\n        // console.log(error);\n      }\n    );\n  }\n\n  dataURLtoFile(dataurl, filename) {\n    const arr = dataurl.split(',');\n    const mime = arr[0].match(/:(.*?);/)[1];\n    const bstr = atob(arr[1]);\n    let n = bstr.length;\n    const u8arr = new Uint8Array(n);\n    while (n--) {\n        u8arr[n] = bstr.charCodeAt(n);\n    }\n    return new File([u8arr], filename, {type: mime});\n  }\n}\n","module.exports = \"\"","module.exports = \"<ngx-loading [show]=\\\"parameter.loading\\\"></ngx-loading>\\n<div class=\\\"container-fluid\\\">\\n      <div class=\\\"row\\\">\\n         <div class=\\\"col-md-4\\\">\\n               <div class=\\\"form-group\\\">\\n                  <p class=\\\"p16\\\">Manage Properties</p>\\n               </div>\\n         </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n         <div class=\\\"offset-md-4\\\"></div>\\n         <div class=\\\"col-md-8 col-12\\\">\\n               <div class=\\\"cust-tabs-2\\\">\\n                  <ul class=\\\"nav nav-tabs float-right\\\">\\n                     <li class=\\\"nav-item\\\">\\n                        <a [ngClass]=\\\"{'active':parameter.dash_flag == 1}\\\" (click)=\\\"changeFlag(1)\\\" class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" href=\\\"#tw\\\">This Week</a>\\n                     </li>\\n                     <li class=\\\"nav-item\\\">\\n                        <a [ngClass]=\\\"{'active':parameter.dash_flag == 2}\\\" (click)=\\\"changeFlag(2)\\\" class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" href=\\\"#tm\\\">This Month</a>\\n                     </li>\\n                     <li class=\\\"nav-item\\\">\\n                        <a [ngClass]=\\\"{'active':parameter.dash_flag == 3}\\\" (click)=\\\"changeFlag(3)\\\" class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" href=\\\"#lm\\\">Last Month</a>\\n                     </li>\\n                     <li class=\\\"nav-item\\\">\\n                        <a [ngClass]=\\\"{'active':parameter.dash_flag == 4}\\\" (click)=\\\"changeFlag(4)\\\" class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" href=\\\"#lt\\\">Lifetime</a>\\n                     </li>\\n                     <li class=\\\"nav-item\\\">\\n                        <a [ngClass]=\\\"{'active':parameter.dash_flag == 5}\\\" (click)=\\\"changeFlag(5)\\\" class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" href=\\\"#cust\\\">Custom</a>\\n                     </li>\\n                  </ul>\\n               </div>\\n         </div>\\n      </div>\\n   \\n      <div class=\\\"row\\\">\\n      <div class=\\\"col-12\\\">\\n            <div *ngIf=\\\"parameter.dash_flag == 5\\\" class=\\\"row\\\">\\n               <div class=\\\"offset-lg-7\\\"></div>\\n               <div class=\\\"col-lg-2 col-md-2 col-sm-5 col-5\\\">\\n               <div class=\\\"form-group marginB0\\\">\\n                  <label>From:</label>\\n                  <p-calendar showIcon=\\\"true\\\" [(ngModel)]=\\\"parameter.min\\\" [maxDate]=\\\"today\\\" showButtonBar=\\\"true\\\" [monthNavigator]=\\\"true\\\" [yearNavigator]=\\\"true\\\" yearRange=\\\"2000:2030\\\"></p-calendar>\\n               </div>\\n               </div>\\n               <div class=\\\"col-lg-2 col-md-2 col-sm-5 col-5\\\">\\n               <div class=\\\"form-group marginB0\\\">\\n                  <label>To:</label>\\n                  <p-calendar showIcon=\\\"true\\\" [(ngModel)]=\\\"parameter.max\\\" [minDate]=\\\"parameter.min\\\" [maxDate]=\\\"today\\\" showButtonBar=\\\"true\\\" [monthNavigator]=\\\"true\\\" [yearNavigator]=\\\"true\\\" yearRange=\\\"2000:2030\\\"></p-calendar>\\n               </div>\\n               </div>\\n               <div class=\\\"col-lg-1 col-md-2 col-sm-2 col-6\\\">\\n               <div class=\\\"form-group btn-cont\\\">\\n                  <label class=\\\"addMT3\\\">&nbsp;</label>\\n                  <button class=\\\"btn btn-calender\\\" href=\\\"javascript://\\\" (click)=\\\"getListing()\\\"\\n                        [disabled]=\\\"!parameter.min || !parameter.max\\\">Apply</button>\\n               </div>\\n               </div>\\n            </div>\\n      </div>\\n   </div>\\n\\n   <div class=\\\"row\\\">\\n      <div class=\\\"col-lg-2 col-md-2\\\">\\n            <div class=\\\"form-group\\\">\\n            <label>Country</label>\\n            <select class=\\\"form-control\\\" (change)=\\\"onCountryChange($event.target.value)\\\">\\n               <option value=\\\"0\\\">All</option>\\n               <option *ngFor=\\\"let item of location.countries\\\" [value]=\\\"item.id\\\">{{item.name}}</option>\\n            </select>\\n            </div>\\n      </div>\\n      <div class=\\\"col-lg-2 col-md-2\\\">\\n            <div class=\\\"form-group\\\">\\n            <label>State</label>\\n            <select class=\\\"form-control\\\" (change)=\\\"onStateChange($event.target.value)\\\">\\n               <option value=\\\"0\\\">All</option>\\n               <option *ngFor=\\\"let item of location.states\\\" [value]=\\\"item.id\\\">{{item.name}}</option>\\n            </select>\\n            </div>\\n      </div>\\n      <div class=\\\"col-lg-2 col-md-2\\\">\\n            <div class=\\\"form-group\\\">\\n            <label>City</label>\\n               <select class=\\\"form-control\\\" (change)=\\\"onCityChange($event.target.value)\\\">\\n               <option value=\\\"0\\\">All</option>\\n               <option *ngFor=\\\"let item of location.cities\\\" [value]=\\\"item.id\\\">{{item.name}}</option>\\n               </select>\\n            </div>\\n      </div>\\n\\n      <div class=\\\"col-lg-2 col-md-2\\\">\\n            <div class=\\\"form-group\\\">\\n            <label>Locality</label>\\n            <select class=\\\"form-control\\\" (change)=\\\"getLocalityBuildings($event.target.value)\\\">\\n               <option value=\\\"0\\\">All</option>\\n               <option *ngFor=\\\"let item of location.localities\\\" [value]=\\\"item.id\\\">{{item.name}}</option>\\n            </select>\\n            </div>\\n      </div>\\n\\n      <div class=\\\"col-lg-2 col-md-2\\\">\\n         <div class=\\\"form-group marginB0\\\">\\n               <label>Building</label>\\n               <select class=\\\"form-control\\\" (change)=\\\"setBuilding($event.target.value)\\\">\\n               <option value=\\\"0\\\">All</option>\\n               <option *ngFor=\\\"let building of parameter.buildings\\\" value=\\\"{{building.id}}\\\">{{building.name}}</option>\\n               </select>\\n         </div>\\n      </div>\\n      \\n      <div class=\\\"col-lg-1 col-md-2\\\">\\n            <div class=\\\"form-group btn-cont\\\">\\n            <label style=\\\"display: block; margin-top: 3px;\\\">&nbsp;</label>\\n            <button type=\\\"button\\\" (click)=\\\"getListing()\\\" class=\\\"btn btn-primary-new width100P P86\\\">Apply</button>\\n            </div>\\n      </div>\\n\\n      <div class=\\\"col-lg-1 col-md-2\\\">\\n            <div class=\\\"form-group btn-cont\\\">\\n            <label style=\\\"display: block; margin-top: 3px;\\\">&nbsp;</label>\\n            <button type=\\\"button\\\" (click)=\\\"resetFilters()\\\" class=\\\"btn btn-primary-new width100P P86\\\">Reset</button>\\n            </div>\\n      </div>\\n   </div>\\n   <!-- <div class=\\\"row\\\">\\n      <div class=\\\"col-md-4\\\">\\n      <div class=\\\"form-group\\\">\\n         <p class=\\\"p16\\\">Manage Properties</p>\\n         </div>\\n      </div>\\n      <div class=\\\"col-md-2\\\">\\n   <div class=\\\"form-group\\\">\\n   <label>Country</label>\\n      <select class=\\\"form-control\\\" (change)=\\\"onCountryChange($event.target.value)\\\">\\n         <option value=\\\"0\\\">All</option>\\n         <option *ngFor=\\\"let item of location.countries\\\" [value]=\\\"item.id\\\">{{item.name}}</option>\\n      </select>\\n   </div>\\n   </div>\\n   <div class=\\\"col-md-2\\\">\\n   <div class=\\\"form-group\\\">\\n   <label>State</label>\\n      <select class=\\\"form-control\\\" (change)=\\\"onStateChange($event.target.value)\\\">\\n         <option value=\\\"0\\\">All</option>\\n         <option *ngFor=\\\"let item of location.states\\\" [value]=\\\"item.id\\\">{{item.name}}</option>\\n      </select>\\n   </div>\\n   </div>\\n   <div class=\\\"col-md-2\\\">\\n      <div class=\\\"form-group\\\">\\n      <label>City</label>\\n         <select class=\\\"form-control\\\" (change)=\\\"onCityChange($event.target.value)\\\">\\n         <option value=\\\"0\\\">All</option>\\n         <option *ngFor=\\\"let item of location.cities\\\" [value]=\\\"item.id\\\">{{item.name}}</option>\\n         </select>\\n      </div>\\n   </div>\\n\\n   <div class=\\\"col-md-2\\\">\\n   <div class=\\\"form-group\\\">\\n   <label>Locality</label>\\n   <select class=\\\"form-control\\\" (change)=\\\"onLocalityChange($event.target.value)\\\">\\n         <option value=\\\"0\\\">All</option>\\n         <option *ngFor=\\\"let item of location.localities\\\" [value]=\\\"item.id\\\">{{item.name}}</option>\\n      </select>\\n   </div>\\n   </div>\\n   </div>\\n\\n   <div class=\\\"row\\\">\\n         <div class=\\\"col-md-12\\\">\\n            <div class=\\\"cust-tabs-2\\\">\\n               <ul class=\\\"nav nav-tabs float-right\\\">\\n                  <li class=\\\"nav-item\\\">\\n                     <a [ngClass]=\\\"{'active':parameter.dash_flag == 1}\\\" (click)=\\\"parameter.dash_flag=1;getListing()\\\" class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" href=\\\"#tw\\\">This Week</a>\\n                  </li>\\n                  <li class=\\\"nav-item\\\">\\n                     <a [ngClass]=\\\"{'active':parameter.dash_flag == 2}\\\" (click)=\\\"parameter.dash_flag=2;getListing()\\\" class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" href=\\\"#tm\\\">This Month</a>\\n                  </li>\\n                  <li class=\\\"nav-item\\\">\\n                     <a [ngClass]=\\\"{'active':parameter.dash_flag == 3}\\\" (click)=\\\"parameter.dash_flag=3;getListing()\\\" class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" href=\\\"#lm\\\">Last Month</a>\\n                  </li>\\n                  <li class=\\\"nav-item\\\">\\n                     <a [ngClass]=\\\"{'active':parameter.dash_flag == 4}\\\" (click)=\\\"parameter.dash_flag=4;getListing()\\\" class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" href=\\\"#lt\\\">Lifetime</a>\\n                  </li>\\n                  <li class=\\\"nav-item\\\">\\n                     <a [ngClass]=\\\"{'active':parameter.dash_flag == 5}\\\" (click)=\\\"parameter.dash_flag=5\\\" class=\\\"nav-link\\\" data-toggle=\\\"tab\\\" href=\\\"#cust\\\">Custom</a>\\n                  </li>\\n               </ul>\\n            </div>\\n         </div>\\n         <div class=\\\"col-12\\\">\\n            <div *ngIf=\\\"parameter.dash_flag == 5\\\" class=\\\"pull-right row\\\">\\n               <div class=\\\"col-lg-4 col-md-4 col-sm-5 col-5\\\">\\n               <div class=\\\"form-group marginB0\\\">\\n                     <label>From:</label>\\n                     <p-calendar showIcon=\\\"true\\\" [(ngModel)]=\\\"parameter.min\\\" [maxDate]=\\\"today\\\" showButtonBar=\\\"true\\\" [monthNavigator]=\\\"true\\\" [yearNavigator]=\\\"true\\\" yearRange=\\\"2000:2030\\\"></p-calendar>\\n               </div>\\n               </div>\\n               <div class=\\\"col-lg-4 col-md-4 col-sm-5 col-5\\\">\\n               <div class=\\\"form-group marginB0\\\">\\n                     <label>To:</label>\\n                     <p-calendar showIcon=\\\"true\\\" [(ngModel)]=\\\"parameter.max\\\" [minDate]=\\\"parameter.min\\\" [maxDate]=\\\"today\\\" showButtonBar=\\\"true\\\" [monthNavigator]=\\\"true\\\" [yearNavigator]=\\\"true\\\" yearRange=\\\"2000:2030\\\"></p-calendar>\\n               </div>\\n               </div>\\n               <div class=\\\"col-lg-4 col-md-4 col-sm-2 col-6\\\">\\n               <div class=\\\"form-group btn-cont\\\">\\n                     <label class=\\\"addMT3\\\">&nbsp;</label>\\n                     <button class=\\\"btn btn-calender\\\" href=\\\"javascript://\\\" (click)=\\\"getListing()\\\"\\n               [disabled]=\\\"!parameter.min || !parameter.max\\\">Apply</button>\\n               </div>\\n               </div>\\n            </div>\\n         </div>\\n      </div> -->\\n\\n         <div class=\\\"cust-tabs\\\">\\n         <div class=\\\"row flex-wrap-reverse\\\">\\n            \\n         <div class=\\\"col-xl-10 col-lg-12 col-md-12 col-sm-12 col-12\\\">\\n         <ul class=\\\"nav nav-tabs\\\">\\n            <li class=\\\"nav-item\\\">\\n               <a [ngClass]=\\\"{'active':parameter.flag==3}\\\" (click)=\\\"changePropertyFlag(3)\\\" class=\\\"nav-link\\\" >Approved</a>\\n            </li>\\n            <li class=\\\"nav-item\\\">\\n               <a [ngClass]=\\\"{'active':parameter.flag==4}\\\" (click)=\\\"changePropertyFlag(4)\\\" class=\\\"nav-link\\\" >Unapproved</a>\\n            </li>\\n               <li class=\\\"nav-item\\\">\\n               <a [ngClass]=\\\"{'active':parameter.flag==2}\\\" (click)=\\\"changePropertyFlag(2)\\\" class=\\\"nav-link\\\" >Pending Review</a>\\n            </li>\\n               <li class=\\\"nav-item\\\">\\n               <a [ngClass]=\\\"{'active':parameter.flag==1}\\\" (click)=\\\"changePropertyFlag(1)\\\" class=\\\"nav-link\\\" >In Draft</a>\\n            </li>\\n         </ul>\\n         </div>\\n         <div class=\\\"col-xl-2 col-lg-12 col-md-12 col-sm-12 col-12\\\"><div class=\\\"add-new text-left\\\">\\n               <a *ngIf=\\\"admin?.admin_acl['Property Management']?.can_create==1\\\" class=\\\"btn\\\" href=\\\"javascript://\\\" routerLink=\\\"/dashboard/properties/add-property/0/0\\\">+Add New Property</a>\\n            </div></div>\\n            </div>\\n         <div class=\\\"tab-content white-bg\\\">\\n            <div class=\\\"tab-pane active\\\">\\n               <div class=\\\"tabel-section\\\">\\n                  <div class=\\\"table-responsive\\\">\\n                     <table class=\\\"table table-striped table-align-left\\\">\\n                        <tr>\\n                           <th style=\\\"width:15%; text-align:left;\\\">\\n                              <div class=\\\"table-search\\\">\\n                                 <label>Name of Building</label>\\n                                 <div class=\\\"searh-3\\\">\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"parameter.keyword\\\" (keyup.enter)=\\\"getListing()\\\" >\\n                                    <button *ngIf=\\\"parameter.keyword\\\" (click)=\\\"getListing()\\\"><i class=\\\"fa fa-search\\\"></i></button>\\n                                 </div>\\n                              </div>\\n                           </th>\\n                           <th style=\\\"width:10%; text-align:left;\\\">\\n                              <div class=\\\"table-search\\\">\\n                                 <label>Name of Apartment</label>\\n                                 <div class=\\\"searh-3\\\">\\n                                    <input type=\\\"text\\\" [(ngModel)]=\\\"parameter.name\\\" (keyup.enter)=\\\"getListing()\\\" >\\n                                    <button *ngIf=\\\"parameter.name\\\" (click)=\\\"getListing()\\\"><i class=\\\"fa fa-search\\\"></i></button>\\n                                 </div>\\n                              </div>\\n                           </th>\\n                           <th style=\\\"width:10%; text-align:left;\\\">\\n                              <div class=\\\"table-search\\\">\\n                                 <label>Configuration</label>\\n                                 <select [(ngModel)]=\\\"parameter.configuration_id\\\" (change)=\\\"getListing()\\\">\\n                                    <option value=\\\"0\\\">All</option>\\n                                    <option *ngFor=\\\"let c of configurations\\\" value=\\\"{{c.id}}\\\" >\\n                                       {{c.name}}\\n                                    </option>\\n                                 </select>\\n                              </div>\\n                           </th>\\n                           <th style=\\\"width:8%;vertical-align:top;\\\">\\n                              <div (click)=\\\"sort_by(1)\\\" class=\\\"d-flex table-search\\\">\\n                                 <label>Price</label>\\n                                 <a href=\\\"javascript://\\\"><img [ngClass]=\\\"{'upsidedown':parameter.sort_by==1 && parameter.sort_by_order==0}\\\" src=\\\"assets/img/top-arrow.png\\\" alt=\\\"img\\\"></a></div>\\n                           </th>\\n                           <th style=\\\"width:5%;vertical-align:top;\\\">\\n                              <div (click)=\\\"sort_by(2)\\\" class=\\\"d-flex table-search\\\">\\n                                 <label>Availability</label>\\n                              <a href=\\\"javascript://\\\"><img [ngClass]=\\\"{'upsidedown':parameter.sort_by==2 && parameter.sort_by_order==0}\\\" src=\\\"assets/img/top-arrow.png\\\" alt=\\\"img\\\"></a>\\n                              </div>\\n                           </th>\\n                           <th style=\\\"width:5%;vertical-align:top;\\\">\\n                              <div (click)=\\\"sort_by(3)\\\" class=\\\"d-flex table-search\\\">\\n                                 <label>Leads</label>\\n                                 <a href=\\\"javascript://\\\"><img [ngClass]=\\\"{'upsidedown':parameter.sort_by==3 && parameter.sort_by_order==0}\\\" src=\\\"assets/img/top-arrow.png\\\" alt=\\\"img\\\"></a>\\n                              </div>\\n\\n                              <!-- <div (click)=\\\"sort_by(3)\\\" class=\\\"-d-flex table-search\\\">\\n                                 <label>Leads</label>\\n                                 <a href=\\\"javascript://\\\"><img [ngClass]=\\\"{'upsidedown':parameter.sort_by==3 && parameter.sort_by_order==0}\\\" src=\\\"assets/img/top-arrow.png\\\" alt=\\\"img\\\"></a></div> -->\\n                           </th>\\n                           <th style=\\\"width:8%;vertical-align:top;\\\">\\n                              <div class=\\\"d-flex table-search\\\">\\n                                 <label>Link seller</label>\\n                              </div>\\n                           </th>\\n                           <th style=\\\"width:8%;vertical-align:top;\\\">\\n                              <div class=\\\"d-flex table-search\\\">\\n                                 <label>Assign outside<br>agent</label>\\n                              </div>\\n                           </th>\\n                           <th style=\\\"width:10%;vertical-align:top;\\\">\\n                              <div class=\\\"d-flex table-search\\\">\\n                                 <label>Change property <br> sold status</label>\\n                              </div>\\n                           </th>\\n                           <th style=\\\"width:20%;\\\">&nbsp;</th>\\n                        </tr>\\n                  \\n                        <tr *ngFor=\\\"let p of items | paginate: { itemsPerPage: parameter.itemsPerPage, currentPage: parameter.page, totalItems: total }; let i=index\\\">\\n                              <td class=\\\"cursor-pointer\\\" title=\\\"Click to view details\\\" routerLink=\\\"/dashboard/properties/details/{{p.id}}\\\">\\n                                 <strong>{{p?.building?.name?p?.building?.name:'NA'}}</strong>\\n                                 <div class=\\\"clearfix\\\"></div>\\n                                 <small *ngIf=\\\"p.quantity > 0\\\">\\n                                    {{p.quantity}} \\n                                    <span *ngIf=\\\"p.quantity == 1\\\">property</span>\\n                                    <span *ngIf=\\\"p.quantity > 1\\\">properties</span>\\n                                 </small>\\n                              </td>\\n                              <td><span>{{p?.name ? p?.name : 'NA'}}</span></td>\\n                              <td><span *ngIf=\\\"p && p.configuration\\\">{{p.configuration?.name}}</span></td>\\n                              <td><span>{{p.min_price}}</span></td>\\n                              <td><span class=\\\"green-color\\\">\\n                              <span *ngIf=\\\"p.for_sale\\\">Sell</span>\\n                              <span *ngIf=\\\"p.for_rent\\\">Rent</span></span>\\n                              </td>\\n                              <td><span>{{p.lead_properties_count}}</span></td>\\n                              \\n                              <td class=\\\"cursor-pointer\\\" title=\\\"Link Seller to Property\\\" (click)=\\\"showAllSellers(p?.id)\\\">\\n                                 <span class=\\\"green-color\\\"><span>Link</span></span>\\n                              </td>\\n                              \\n                              <td class=\\\"cursor-pointer\\\" (click)=\\\"getInhouseBroker(p, '')\\\">\\n                                 <span class=\\\"green-color\\\">\\n                                    <span title=\\\"Click to {{p?.external_broker?.id ? 'change' : 'assign'}}\\\">{{p?.external_broker?.id ? 'Change' : 'Assign'}}</span>\\n                                 </span>\\n                              </td>\\n                              <td class=\\\"cursor-pointer\\\" (click)=\\\"changeSoldStatusPopup(p, i)\\\" *ngIf=\\\"p.for_sale\\\">\\n                                 <span class=\\\"green-color\\\">\\n                                    <span title=\\\"Click to mark property sold.\\\" *ngIf=\\\"p.for_sale && !p.is_property_sold\\\">Mark Sold</span>\\n                                    <span title=\\\"Click to made available for sale.\\\" *ngIf=\\\"p.for_sale && p.is_property_sold\\\">Mark Available</span>\\n                                 </span>\\n                              </td>\\n                              <td *ngIf=\\\"p.for_rent\\\">\\n                                 <span class=\\\"green-color\\\">\\n                                    <span>Available for rent out</span>\\n                                 </span>\\n                              </td>\\n\\n                              <td>\\n                              <div class=\\\"message\\\">\\n                                 <button [disabled]=\\\"admin?.admin_acl['Property Management']?.can_update==0\\\" *ngIf=\\\"parameter?.flag!=3\\\" routerLink=\\\"../edit-property/{{p.id}}\\\" title=\\\"Edit Details\\\" class=\\\"action-icon\\\"><img src=\\\"assets/img/edit.png\\\" alt=\\\"img\\\"></button>\\n                                 <button [disabled]=\\\"admin?.admin_acl['Property Management']?.can_update==0\\\" *ngIf=\\\"parameter?.flag==3\\\" routerLink=\\\"../edit-property/{{p.id}}/edit\\\" title=\\\"Edit Details\\\" class=\\\"action-icon\\\"><img src=\\\"assets/img/edit.png\\\" alt=\\\"img\\\"></button>\\n                                 <button [disabled]=\\\"admin?.admin_acl['Property Management']?.can_delete==0\\\" *ngIf=\\\"!p.is_blocked\\\" (click)=\\\"block(p);\\\" class=\\\"action-icon\\\" title=\\\"Block\\\"><img src=\\\"assets/img/block.png\\\" alt=\\\"img\\\"></button>\\n                                 <button [disabled]=\\\"admin?.admin_acl['Property Management']?.can_delete==0\\\" *ngIf=\\\"p.is_blocked == true\\\" (click)=\\\"unblock(p);\\\" class=\\\"action-icon unblock-bg\\\" title=\\\"UnBlock\\\"><img src=\\\"assets/img/unblock.png\\\" alt=\\\"img\\\"></button>\\n                                 <button [disabled]=\\\"admin?.admin_acl['Property Management']?.can_update==0\\\" *ngIf=\\\"p.status == 3\\\" (click)=\\\"changeStatus(p,2);\\\" class=\\\"action-icon\\\" title=\\\"Unapprove\\\"><img src=\\\"assets/img/ic_disapprove.png\\\" alt=\\\"img\\\"></button>\\n                                 <button [disabled]=\\\"admin?.admin_acl['Property Management']?.can_update==0\\\" *ngIf=\\\"p.status == 2\\\" (click)=\\\"changeStatus(p,3);\\\" class=\\\"action-icon\\\" title=\\\"Approve\\\"><img src=\\\"assets/img/tick.png\\\" alt=\\\"img\\\"></button>\\n                                 <button [disabled]=\\\"admin?.admin_acl['Property Management']?.can_update==0\\\" *ngIf=\\\"p.status == 3 && p.is_featured==0\\\" (click)=\\\"markPropertyFeatured(p,1);\\\" class=\\\"action-icon\\\" title=\\\"Mark feature\\\"><img src=\\\"assets/img/ic_featured.png\\\" alt=\\\"img\\\"></button>\\n                                 <button [disabled]=\\\"admin?.admin_acl['Property Management']?.can_update==0\\\" *ngIf=\\\"p.status == 3 && p.is_featured==1\\\" (click)=\\\"markPropertyFeatured(p,0);\\\" class=\\\"action-icon\\\" title=\\\"Mark unfeature\\\"><img src=\\\"assets/img/tick-selected.png\\\" alt=\\\"img\\\"></button>\\n                                 <!-- delete -->\\n                                 <button [disabled]=\\\"admin?.admin_acl['Property Management']?.can_purge==0\\\" (click)=\\\"deletePopup(p, i)\\\" class=\\\"action-icon\\\" \\n                                    title=\\\"Delete Property\\\"><img src=\\\"assets/img/ic_delete.png\\\" alt=\\\"img\\\"></button>\\n                              </div>\\n\\n                              </td>\\n                        </tr>\\n                        <!-- <tr *ngIf=\\\"parameter.loading == false && total == 0\\\">\\n                           <td colspan=\\\"10\\\">No result found</td>\\n                           </tr> -->\\n                     </table>\\n                     <div class=\\\"padding20 center\\\" *ngIf=\\\"parameter.loading == false && total == 0\\\">\\n                           <img src=\\\"assets/img/404-error.png\\\">\\n                     </div>\\n                  </div>\\n               </div>\\n            </div>\\n            <div class=\\\"tab-pane container fade\\\" id=\\\"seller\\\">Seller tab on</div>\\n         </div>\\n      </div>\\n      \\n    <div class=\\\"btn-cont marginT15\\\" *ngIf=\\\"total\\\">\\n         <div class=\\\"row\\\">\\n             <div class=\\\"col-6\\\">\\n                 <div class=\\\"title-group\\\">\\n                     <p>Showing {{items?.length}} out of {{total}}</p>\\n                 </div>\\n             </div>\\n             <div class=\\\"col-6 text-right\\\">\\n                 <pagination-controls class=\\\"my-pagination\\\" (pageChange)=\\\"getPage($event)\\\"></pagination-controls>\\n             </div>\\n         </div>\\n     </div>\\n</div>\\n\\n\\n\\n\\n<!-- Link Seller -->\\n<a data-toggle=\\\"modal\\\" data-target=\\\"#link-seller-model\\\" #linkSellerModal></a>\\n<div class=\\\"modal\\\" id=\\\"link-seller-model\\\">\\n   <div class=\\\"modal-dialog \\\">\\n      <div class=\\\"modal-content notary-avail\\\">\\n            <div class=\\\"modal-header popup-header\\\">\\n            <h4 class=\\\"modal-title\\\">Link Seller</h4>\\n            <button type=\\\"button\\\" class=\\\"close\\\" #closeLinkSellerModal data-dismiss=\\\"modal\\\">&times;</button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n\\n               <p class=\\\"modal-title\\\" *ngIf=\\\"selecter_seller\\\">Currently linked to Seller - <b>{{selecter_seller?.user?.name}}</b></p>\\n\\n               <!-- <div class=\\\"row\\\">\\n                     <input style=\\\"max-width:200px\\\" [(ngModel)]=\\\"keyword\\\" (input)=\\\"showAllSellers()\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"keyword\\\" placeholder=\\\"Search\\\">\\n               </div> -->\\n               <div class=\\\"spacer40\\\"></div>\\n               <table class=\\\"table\\\">\\n                  <tr *ngFor=\\\"let item of allSellers\\\">\\n                        <td *ngIf=\\\"item?.user?.is_blocked!=1\\\">\\n                           <div class=\\\"n-avail-profile\\\">\\n                           <img [src]=\\\"item?.user?.image| img:'small'\\\" onerror='src=\\\"assets/img/default_img.png\\\"' alt=\\\"img\\\">\\n                           <div class=\\\"n-avail-info\\\">\\n                              <p class=\\\"p12\\\">{{item?.user?.name}}</p>\\n                              <p class=\\\"p10\\\">Phone : {{item?.user?.dial_code ? item?.user?.dial_code : constant.dial_code}}-{{item?.user?.phone}}</p>\\n                           </div>\\n                           </div>\\n                        </td>\\n                        <td *ngIf=\\\"item.is_blocked!=1\\\">\\n                           <!-- <label class=\\\"cust-check-bx float-right\\\">\\n                              <input type=\\\"radio\\\" name=\\\"user_id\\\" (click)=\\\"assignItem = item\\\">\\n                              <span class=\\\"checkmark\\\"></span>\\n                           </label> -->\\n                           <!-- <button *ngIf=\\\"item.status == 0\\\" (click)=\\\"changeStatusSellerSelection(item.property_id, item.user_id, 2)\\\" class=\\\"action-icon\\\" title=\\\"Reject\\\">\\n                              <img src=\\\"assets/img/tick-selected.png\\\" alt=\\\"img\\\"></button> -->\\n                           <button (click)=\\\"changeStatusPopUp(item.property_id, item.user_id, 1)\\\" class=\\\"action-icon\\\" title=\\\"Accept\\\">\\n                              <img src=\\\"assets/img/tick.png\\\" alt=\\\"img\\\"></button>\\n                        </td>\\n                  </tr>\\n                  <tr *ngIf=\\\"allSellers?.length==0\\\">\\n                     <p class=\\\"show-not-found\\\">\\n                        No seller found.\\n                     </p>\\n                  </tr>\\n               </table>\\n            </div>\\n      </div>\\n   </div>\\n</div>\\n\\n<!-- Link External Broker -->\\n<a data-toggle=\\\"modal\\\" data-target=\\\"#link-broker-model\\\" #linkExtBrokerModal></a>\\n<div class=\\\"modal\\\" id=\\\"link-broker-model\\\">\\n   <div class=\\\"modal-dialog \\\">\\n      <div class=\\\"modal-content notary-avail\\\">\\n            <div class=\\\"modal-header popup-header\\\">\\n            <h4 class=\\\"modal-title\\\">{{property?.external_broker?.id ? 'Change' : 'Assign'}} External Agent</h4>\\n            <button type=\\\"button\\\" class=\\\"close\\\" #closeExtBrokerModal data-dismiss=\\\"modal\\\">&times;</button>\\n            </div>\\n            <div class=\\\"modal-body\\\">\\n\\n               <p class=\\\"modal-title\\\" *ngIf=\\\"property?.external_broker?.id\\\">Currently assigned to Agent - <b>{{property?.external_broker?.name}}</b></p>\\n\\n               <div class=\\\"spacer30\\\"></div>\\n               <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-8 col-6\\\">\\n                     <input style=\\\"max-width:200px\\\" [(ngModel)]=\\\"keyword\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"keyword\\\" placeholder=\\\"Search\\\">\\n                 </div>\\n                 <div class=\\\"col-md-4 col-5 btn-cont\\\">\\n                     <a class=\\\"btn btn-primary pull-right\\\" href=\\\"javascript://\\\" (click)=\\\"getInhouseBroker('', keyword)\\\">Search</a>\\n                 </div>\\n               </div>\\n\\n               <div class=\\\"spacer40\\\"></div>\\n               <table class=\\\"table\\\">\\n                  <tr *ngFor=\\\"let item of allExtBrokers\\\">\\n                        <td>\\n                           <div class=\\\"n-avail-profile\\\">\\n                           <img [src]=\\\"item?.image| img:'small'\\\" onerror='src=\\\"assets/img/default_img.png\\\"' alt=\\\"img\\\">\\n                           <div class=\\\"n-avail-info\\\">\\n                              <p class=\\\"p12\\\">{{item?.name}}</p>\\n                              <p class=\\\"p10\\\">Phone : {{item?.dial_code ? item?.dial_code : constant.dial_code}}-{{item?.phone}}</p>\\n                           </div>\\n                           </div>\\n                        </td>\\n                        <td>\\n                           <!-- <label class=\\\"cust-check-bx float-right\\\">\\n                              <input type=\\\"radio\\\" name=\\\"user_id\\\" (click)=\\\"assignItem = item\\\">\\n                              <span class=\\\"checkmark\\\"></span>\\n                           </label> -->\\n                           <!-- <button *ngIf=\\\"item.status == 0\\\" (click)=\\\"changeStatusSellerSelection(item.property_id, item.user_id, 2)\\\" class=\\\"action-icon\\\" title=\\\"Reject\\\">\\n                              <img src=\\\"assets/img/tick-selected.png\\\" alt=\\\"img\\\"></button> -->\\n                           <button (click)=\\\"attachExternalBrokerPopUp(item)\\\" class=\\\"action-icon\\\" title=\\\"Accept\\\">\\n                              <img src=\\\"assets/img/tick.png\\\" alt=\\\"img\\\"></button>\\n                        </td>\\n                  </tr>\\n                  <tr *ngIf=\\\"allExtBrokers?.length==0\\\">\\n                     <p class=\\\"show-not-found\\\">No external agent found.</p>\\n                  </tr>\\n               </table>\\n            </div>\\n      </div>\\n   </div>\\n</div>\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { AdminService } from '../../services/admin.service';\nimport { IProperty } from '../../common/property';\nimport { Constant } from './../../common/constants';\nimport * as moment from 'moment';\nimport { SellerSelections } from './../../models/addProperty.model';\nimport { UserModel } from 'src/app/models/inhouse-users.model';\ndeclare let swal: any;\n\n@Component({\n  selector: 'app-properties',\n  templateUrl: './properties.component.html',\n  styleUrls: ['./properties.component.css']\n})\nexport class PropertiesComponent implements OnInit {\n\n  public parameter: IProperty = {};\n  public location: IProperty = {};\n\n  items: any = [];\n  total: any = 0;\n  configurations: any = [];\n  countries: any;\n\n  price_sort = 1;\n  availability_sort = 1;\n  lead_sort = 1;\n  keyword: string;\n  selecter_seller: SellerSelections;\n  allSellers: Array<SellerSelections>;\n  allExtBrokers: Array<UserModel>;\n  property: any;\n  @ViewChild('linkSellerModal') linkSellerModal: ElementRef;\n  @ViewChild('closeLinkSellerModal') closeLinkSellerModal: ElementRef;\n  @ViewChild('linkExtBrokerModal') linkExtBrokerModal: ElementRef;\n  @ViewChild('closeExtBrokerModal') closeExtBrokerModal: ElementRef;\n  constructor(\n    public constant: Constant,\n    public admin: AdminService\n  ) { }\n\n  ngOnInit() {\n    this.parameter.itemsPerPage = this.constant.itemsPerPage;\n    this.parameter.page = this.constant.p;\n    this.parameter.dash_flag = 2;\n    this.parameter.flag = 3;\n    this.getCountries();\n    this.getPropertyConfigurations();\n    this.getListing();\n  }\n\n  getListing() {\n    this.parameter.loading = true;\n    const input: any = JSON.parse(JSON.stringify(this.parameter));\n    if (this.parameter.min) {\n      input.min = moment(this.parameter.min).format('YYYY-MM-DD');\n    } else {\n      delete input.min;\n    }\n    if (this.parameter.max) {\n      input.max = moment(this.parameter.max).format('YYYY-MM-DD');\n    } else {\n      delete input.max;\n    }\n    this.admin.postDataApi('propertyHome', input).subscribe(\n      success => {\n        this.items = success.data;\n        this.total = success.total_count;\n        this.parameter.loading = false;\n      },\n      error => {\n        this.parameter.loading = false;\n      });\n  }\n\n  getCountries() {\n    this.admin.postDataApi('getCountryLocality', {}).subscribe(r => {\n      this.location.countries = r['data'];\n    });\n  }\n\n  getPropertyConfigurations() {\n    this.admin.postDataApi('getPropertyConfigurations', {}).subscribe(r => {\n      this.configurations = r['data'];\n    });\n  }\n\n  onCountryChange(id) {\n    this.parameter.country_id = id;\n    this.location.states = []; this.parameter.state_id = '0';\n    this.location.cities = []; this.parameter.city_id = '0';\n    this.location.localities = []; this.parameter.locality_id = '0';\n    this.parameter.buildings = []; this.parameter.building_id = '0';\n    if (!id || id.toString() === '0') {\n      return false;\n    }\n\n    this.parameter.country_id = id;\n    const selectedCountry = this.location.countries.filter(x => x.id.toString() === id);\n    this.location.states = selectedCountry[0].states;\n  }\n\n  onStateChange(id) {\n    this.location.cities = []; this.parameter.city_id = '0';\n    this.location.localities = []; this.parameter.locality_id = '0';\n    this.parameter.buildings = []; this.parameter.building_id = '0';\n    if (!id || id.toString() === '0') {\n      return false;\n    }\n\n    this.parameter.state_id = id;\n    const selectedState = this.location.states.filter(x => x.id.toString() === id);\n    this.location.cities = selectedState[0].cities;\n  }\n\n  onCityChange(id) {\n    this.location.localities = []; this.parameter.locality_id = '0';\n    this.parameter.buildings = []; this.parameter.building_id = '0';\n    if (!id || id.toString() === '0') {\n      return false;\n    }\n\n    this.parameter.city_id = id;\n    const selectedCountry = this.location.cities.filter(x => x.id.toString() === id);\n    this.location.localities = selectedCountry[0].localities;\n  }\n\n  onLocalityChange(id) {\n    this.parameter.buildings = []; this.parameter.building_id = '0';\n    if (!id || id.toString() === '0') {\n      return false;\n    }\n    this.parameter.locality_id = id;\n    // let selectedLocation = this.location.localities.filter(x=>x.id == id);\n    // this.location.locality = selectedLocation[0];\n  }\n\n  getLocalityBuildings(id) {\n    if (!id || id.toString() === '0') {\n      return false;\n    }\n    this.parameter.locality_id = id;\n    this.parameter.loading = true;\n    this.admin.postDataApi('getLocalityBuildings', this.parameter)\n      .subscribe(\n        success => {\n          this.parameter.loading = false;\n          this.parameter.buildings = success.data;\n        }, error => {\n          this.parameter.loading = false;\n        });\n  }\n\n  setBuilding(building_id) {\n    this.parameter.building_id = building_id;\n  }\n\n  changeFlag(flag) {\n    this.parameter.dash_flag = flag;\n    if (flag === 5) {\n      return false;\n    }\n    this.resetDates();\n    this.getListing();\n  }\n\n  changePropertyFlag(flag) {\n    this.parameter.flag = flag;\n    this.getListing();\n  }\n\n  // toggleAndSort(sort_by, sort_by_order) {\n  //   if (this[sort_by_order] == 1) {\n  //     this[sort_by_order] = 0;\n  //   }else {\n  //     this[sort_by_order] = 1;\n  //   }\n\n  //   this.parameter.sort_by = sort_by;\n  //   this.parameter.sort_by_order = sort_by_order;\n  //   console.log(this.parameter);\n  //   this.getListing();\n  // }\n\n  sort_by(sort_by) {\n    if (this.parameter.sort_by !== sort_by) {\n      this.parameter.sort_by = sort_by;\n      this.parameter.sort_by_order = 1;\n    } else {\n      this.parameter.sort_by_order = this.parameter.sort_by_order ? 0 : 1;\n    }\n    this.getListing();\n  }\n\n  getPage(page) {\n    this.parameter.page = page;\n    this.getListing();\n  }\n\n  block(item) {\n    item.is_blocked = true;\n    this.admin.postDataApi('blockProperty', { property_id: item.id, flag: 1 }).subscribe(r => {\n      swal('Success', 'Property blocked successfully', 'success');\n    },\n      error => {\n        swal('Error', error.error.message, 'error');\n      });\n  }\n\n  unblock(item) {\n    item.is_blocked = false;\n    this.admin.postDataApi('blockProperty', { property_id: item.id, flag: 0 }).subscribe(r => {\n      swal('Success', 'Property unblocked successfully', 'success');\n    },\n      error => {\n        swal('Error', error.error.message, 'error');\n      });\n  }\n\n  changeStatus(item, status) {\n    item.status = status;\n    this.admin.postDataApi('updatePropertyStatus', { property_id: item.id, status_id: status }).subscribe(r => {\n      swal('Success', 'Property status changed', 'success');\n    },\n      error => {\n        swal('Error', error.error.message, 'error');\n      });\n  }\n\n  resetFilters() {\n    this.location.countries = JSON.parse(JSON.stringify(this.location.countries));\n    this.onCountryChange('0');\n    this.parameter.is_selected = false;\n    this.parameter.page = this.constant.p;\n    this.parameter.dash_flag = 2;\n    this.parameter.total = 0;\n    this.parameter.count_flag = 1;\n    this.resetDates();\n    this.getListing();\n  }\n\n  resetDates() {\n    this.parameter.min = '';\n    this.parameter.max = '';\n  }\n\n  markPropertyFeatured(item, is_featured: number) {\n    item.is_featured = is_featured;\n    this.admin.postDataApi('markPropertyFeatured', { property_id: item.id, flag: is_featured }).subscribe(r => {\n      const msg = is_featured === 1 ? 'Featured successfully.' : 'Unfeatured successfully.';\n      swal('Success', msg, 'success');\n    },\n      error => {\n        swal('Error', error.error.message, 'error');\n      });\n  }\n\n\n  showAllSellers(property_id: any) {\n    this.parameter.loading = true;\n    this.admin.postDataApi('getSellerSelections', { property_id: property_id }).subscribe(r => {\n      this.parameter.loading = false;\n      this.linkSellerModal.nativeElement.click();\n      this.allSellers = r['data'];\n      this.selecter_seller = r['selecter_seller'];\n    }, error => {\n      this.parameter.loading = false;\n      swal('Error', error.error.message, 'error');\n    });\n  }\n\n  changeStatusPopUp(property_id: any, user_id: string, status: number) {\n    this.parameter.title = this.constant.title.ARE_YOU_SURE;\n    this.parameter.text = 'You want to link this seller?';\n\n    swal({\n      html: this.parameter.title + '<br>' + this.parameter.text,\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: this.constant.confirmButtonColor,\n      cancelButtonColor: this.constant.cancelButtonColor,\n      confirmButtonText: 'Yes'\n    }).then((result) => {\n      if (result.value) {\n        this.changeStatusSellerSelection(property_id, user_id, status);\n      }\n    });\n  }\n\n  changeStatusSellerSelection(property_id: any, user_id: string, status: number) {\n    this.admin.postDataApi('changeStatusSellerSelection', { property_id: property_id, user_id: user_id, status: status }).subscribe(r => {\n      this.closeLinkSellerModal.nativeElement.click();\n      swal('Success', 'Linked successfully.', 'success');\n    },\n      error => {\n        swal('Error', error.error.message, 'error');\n      });\n  }\n\n  changeSoldStatusPopup(property: any, index: number) {\n    this.parameter.title = this.constant.title.ARE_YOU_SURE;\n    this.parameter.text = 'You want to change the status?';\n\n    swal({\n      html: this.parameter.title + '<br>' + this.parameter.text,\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: this.constant.confirmButtonColor,\n      cancelButtonColor: this.constant.cancelButtonColor,\n      confirmButtonText: 'Yes'\n    }).then((result) => {\n      if (result.value) {\n        this.changePropertySoldStatus(property, index);\n      }\n    });\n  }\n\n  changePropertySoldStatus(property: any, index: number) {\n    this.admin.postDataApi('changePropertySoldStatus',\n    { property_id: property.id, is_property_sold: property.is_property_sold === 0 ? 1 : 0 }).subscribe(r => {\n      this.items[index].is_property_sold = this.items[index].is_property_sold === 1 ? 0 : 1;\n      swal('Success', 'Changed successfully.', 'success');\n    },\n      error => {\n        swal('Error', error.error.message, 'error');\n      });\n  }\n\n  deletePopup(property: any, index: number) {\n    this.parameter.title = this.constant.title.ARE_YOU_SURE;\n    this.parameter.text = 'You want to delete this property?';\n\n    swal({\n      html: this.parameter.title + '<br>' + this.parameter.text,\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: this.constant.confirmButtonColor,\n      cancelButtonColor: this.constant.cancelButtonColor,\n      confirmButtonText: 'Yes'\n    }).then((result) => {\n      if (result.value) {\n        this.deleteProperty(property, index);\n      }\n    });\n  }\n\n  deleteProperty(property: any, index: number) {\n    this.admin.postDataApi('deleteProperty',\n    { property_id: property.id }).subscribe(r => {\n      swal('Success', 'Deleted successfully.', 'success');\n      this.items.splice(index, 1);\n    },\n    error => {\n      swal('Error', error.error.message, 'error');\n    });\n  }\n\n\n  getInhouseBroker(property: any, keyword: string) {\n    this.parameter.loading = true;\n    if (property) { this.property = property; }\n    const input = {keyword: ''};\n    input.keyword = keyword;\n    this.admin.postDataApi('getExternalBroker', input).subscribe(r => {\n      this.parameter.loading = false;\n      if (property) {this.linkExtBrokerModal.nativeElement.click(); }\n      this.allExtBrokers = r['data'];\n    }, error => {\n      this.parameter.loading = false;\n      swal('Error', error.error.message, 'error');\n    });\n  }\n\n\n  attachExternalBrokerPopUp(broker: any) {\n    this.parameter.title = this.constant.title.ARE_YOU_SURE;\n    this.parameter.text = 'You want to assign this broker?';\n\n    swal({\n      html: this.parameter.title + '<br>' + this.parameter.text,\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: this.constant.confirmButtonColor,\n      cancelButtonColor: this.constant.cancelButtonColor,\n      confirmButtonText: 'Yes'\n    }).then((result) => {\n      if (result.value) {\n        this.attachExternalBroker(broker);\n      }\n    });\n  }\n\n  attachExternalBroker(broker: any) {\n    this.admin.postDataApi('attachExternalBroker', { property_id: this.property.id,\n      broker_id: broker.id }).subscribe(r => {\n      this.closeExtBrokerModal.nativeElement.click();\n      this.property.external_broker = broker;\n      swal('Success', 'Assigned successfully.', 'success');\n    },\n      error => {\n        swal('Error', error.error.message, 'error');\n      });\n  }\n}\n","// third party libraries\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxLoadingModule, ngxLoadingAnimationTypes } from 'ngx-loading';\nimport { AgmCoreModule } from '@agm/core';\nimport { Ng2TelInputModule } from 'ng2-tel-input';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { LazyLoadImageModule } from 'ng-lazyload-image';\n\n// general components\nimport { PropertiesComponent } from './properties.component';\nimport { AddPropertyComponent } from './add-property/add-property.component';\nimport { PropertyDetailsComponent } from './property-details/property-details.component';\nimport { AclUserGuard } from '../../guards/acl-user.guard';\nimport { FilterByIdPipe } from '../../pipes/filter-by-id.pipe';\nimport { FilterByNamePipe } from '../../pipes/filter-by-name.pipe';\nimport { SharedModule } from '../../modules/shared.module';\nimport { CalendarModule } from 'primeng/primeng';\nimport { ProjectBlockComponent } from '../common-blocks/project-block/project-block.component';\n\nconst routes: Routes = [\n  { path: 'details/:property_id', component: PropertyDetailsComponent },\n  // { path: 'details/:property_id', component: PropertyDetailsComponent,\n  //   canActivate: [AclUserGuard], data: {roles: ['Property Management', 'can_read', '']}},\n  { path: 'add-property/:property_id/:seller_id', component: AddPropertyComponent,\n    canActivate: [AclUserGuard], data: {roles: ['Property Management', 'can_create', 'can_csr_seller']}},\n  { path: 'edit-property/:property_id', component: AddPropertyComponent,\n    canActivate: [AclUserGuard], data: {roles: ['Property Management', 'can_update', 'can_csr_seller']}},\n  { path: 'edit-property/:property_id/:edit', component: AddPropertyComponent,\n    canActivate: [AclUserGuard], data: {roles: ['Property Management', 'can_update', 'can_csr_seller']}},\n  { path: 'view-properties', component: PropertiesComponent,\n    canActivate: [AclUserGuard], data: {roles: ['Property Management', 'can_read', '']}}\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes),\n    CommonModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgxLoadingModule.forRoot({\n      animationType: ngxLoadingAnimationTypes.rectangleBounce,\n      primaryColour: '#00B96F'\n    }),\n    AgmCoreModule.forRoot({\n        apiKey: 'AIzaSyDykCJGMqHIwJluSmSiqKTJBVN2KauM_uQ',\n        libraries: ['drawing', 'places']\n      }),\n    Ng2TelInputModule,\n    NgxPaginationModule,\n    CalendarModule,\n    SharedModule,\n    LazyLoadImageModule\n  ],\n  declarations: [\n    PropertiesComponent,\n    AddPropertyComponent,\n    PropertyDetailsComponent,\n    FilterByIdPipe,\n    FilterByNamePipe,\n    ProjectBlockComponent\n  ]\n})\n\nexport class PropertiesModule { }\n","module.exports = \"\"","module.exports = \"<ngx-loading [show]=\\\"parameter.loading\\\"></ngx-loading>\\n<div class=\\\"container-fluid\\\">\\n  <div class=\\\"white-bg configuration-page\\\">\\n      <div class=\\\"top-main-img-outer\\\">\\n        <div class=\\\"avl\\\">Available for\\n            <span *ngIf=\\\"property?.for_rent\\\">Rent</span>\\n            <span *ngIf=\\\"property?.for_rent && property?.for_sale\\\">/</span>\\n            <span *ngIf=\\\"property?.for_sale\\\">Sale</span>\\n        </div>\\n        <div class=\\\"fig-block\\\">\\n            <!-- <img class=\\\"img-fluid top-main-img\\\" [src]=\\\"property?.image\\\" onerror='this.src=\\\"assets/img/loading_image_1.gif\\\"'> -->\\n            <img class=\\\"img-fluid top-main-img\\\" onerror='this.src=\\\"assets/img/placeholder.png\\\"' [defaultImage]=\\\"property?.image| img:'thumb'\\\" [lazyLoad]=\\\"property?.image\\\">\\n      </div> \\n      </div>\\n      <div class=\\\"padding30\\\">\\n        <div class=\\\"apart-info \\\">\\n            <p *ngIf=\\\"property?.configuration\\\" class=\\\"p14\\\">{{property?.configuration.name}} {{property?.property_type.name}}</p>\\n            <p class=\\\"p12\\\">{{property?.bedroom}} Bed, {{property?.bathroom}} Bath</p>\\n\\n            <h6 class=\\\"float-left\\\">{{property?.max_area}} sqmt.</h6> <h6 class=\\\"float-right\\\">{{property?.max_price|thousand}}</h6>\\n            <div class=\\\"clearfix\\\"></div>\\n        </div> \\n        <div class=\\\"building-name\\\">\\n            <div class=\\\"float-left\\\">\\n                <p *ngIf=\\\"property?.building\\\" class=\\\"p14\\\">{{property?.building?.name}}</p>\\n                <p class=\\\"p12 marginB0\\\">Building</p>\\n            </div>\\n            <div class=\\\"float-right\\\"><a href=\\\"javascript://\\\">\\n                <img src=\\\"assets/img/viewfull.png\\\" alt=\\\"img\\\"></a></div>\\n            <!-- <div *ngIf=\\\"property.building\\\" class=\\\"float-right\\\" [routerLink]=\\\"['/project',property.building.id]\\\"><a href=\\\"javascript://\\\"><img src=\\\"assets/img/viewfull.png\\\" alt=\\\"img\\\"></a></div> -->\\n            <div class=\\\"clearfix\\\"></div>\\n        </div>\\n\\n        <div class=\\\"clearfix\\\"></div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-md-6 col-12\\\">\\n                <h4>Description</h4>\\n                <p class=\\\"p15 newline\\\">{{property?.description}}</p>\\n\\n                <h4>Area</h4>\\n                <div class=\\\"area-table\\\" *ngIf=\\\"property?.carpet_areas\\\">\\n                    <table class=\\\"table table-borderless\\\">\\n                       <tbody><tr>\\n                       <th>Carpet Area</th>\\n                       <th>Base Price</th>\\n                       </tr>\\n                       <tr *ngFor=\\\"let area of property?.carpet_areas \\\" >\\n                         <td>{{area.area}} sqmt.</td>\\n                         <td>{{area.price|thousand}}</td>\\n                       </tr>\\n\\n                    </tbody></table>\\n                 </div>\\n\\n                <h4>Specifications</h4>\\n                <div class=\\\"spec-table\\\">\\n                    <table class=\\\"table table-borderless\\\">\\n                       <tbody><tr>\\n                          <td>\\n                          <label>Bedrooms</label>\\n                          <span>{{property?.bedroom}}</span>\\n                          </td>\\n                          <td>\\n                          <label>Bathrooms</label>\\n                          <span>{{property?.bathroom}}</span>\\n                          </td>\\n                       </tr>\\n                        <tr>\\n                          <td>\\n                          <label>Parking</label>\\n                          <span>{{property?.parking?'Yes':'No'}}</span>\\n                          </td>\\n                          <td>\\n                          <label>Furnished</label>\\n                          <span>{{property?.furnished?'Yes':'No'}}</span>\\n                          </td>\\n                       </tr>\\n                        <tr>\\n                          <td>\\n                          <label>Pets Allowed</label>\\n                          <span>{{property?.pets?'Yes':'No'}}</span>\\n                          </td>\\n                          <td *ngIf=\\\"property?.marital_statuses\\\">\\n                          <label>Available For</label>\\n                          <span *ngFor=\\\"let ms of property.marital_statuses; let i=index\\\">\\n                              {{ms.name}}\\n                              <span *ngIf=\\\"i<property?.marital_statuses?.length-1\\\">,</span>\\n                            </span>\\n                          </td>\\n\\n                       </tr>\\n                    </tbody></table>\\n                </div>\\n\\n                <div *ngIf=\\\"property?.amenities?.length > 0\\\">\\n                 <h4>Amenities</h4>\\n                 <ul class=\\\"green-icon-list\\\">\\n                    <li *ngFor=\\\"let amenity of property?.amenities\\\">\\n                      <span><img src=\\\"assets/img/green-icon.png\\\" alt=\\\"img\\\"></span>\\n                      {{amenity.name}}\\n                    </li>\\n                 </ul>\\n                </div>\\n\\n            </div>\\n            <div class=\\\"col-md-6 col-12\\\">\\n                <div class=\\\"fig-block text-center\\\">\\n                    <!-- <img class=\\\"img-fluid\\\" [src]=\\\"property?.floor_plan\\\" alt=\\\"img\\\"> -->\\n                    <img class=\\\"img-fluid\\\" onerror='this.src=\\\"assets/img/placeholder.png\\\"' [defaultImage]=\\\"property?.floor_plan| img:'thumb'\\\" [lazyLoad]=\\\"property?.floor_plan\\\">\\n                </div>\\n            </div>\\n\\n\\n        </div>\\n      </div>\\n      </div>\\n</div>\\n  \"","import { Component, OnInit } from '@angular/core';\nimport { AdminService } from './../../../services/admin.service';\nimport { ActivatedRoute} from '@angular/router';\nimport { IProperty } from './../../../common/property';\nimport { Constant } from '../../../common/constants';\n\n@Component({\n  selector: 'app-property-details',\n  templateUrl: './property-details.component.html',\n  styleUrls: ['./property-details.component.css']\n})\nexport class PropertyDetailsComponent implements OnInit {\n\n  public parameter: IProperty = {};\n  property: any;\n  constructor(public admin: AdminService, private route: ActivatedRoute, public constant: Constant) { }\n\n  ngOnInit() {\n    this.route.params.subscribe( params => {\n      this.getPropertyDetails(params.property_id);\n    });\n    // this.cs.propertyDetailsData$.subscribe(res => {\n    //   console.log('ress', res);\n    //   this.data = res;\n    // });\n  }\n\n  getPropertyDetails(property_id) {\n    this.parameter.loading = true;\n    this.admin.postDataApi('getPropertyById', {property_id: property_id})\n      .subscribe(success => {\n        this.parameter.loading = false;\n        this.property = success.data;\n        // console.log('getPropertyById', this.property);\n      }, error => {\n        this.parameter.loading = false;\n      });\n  }\n}\n","import { User } from './inhouse-users.model';\nimport { Towers } from './addProject.model';\n\nexport class CarpetAreas {\n    carpet_areas: Array<object> = [\n        {\n            area: 0,\n            price: 0\n        }\n    ];\n}\n\nexport class AddPropertyModel {\n    id = '';\n    step = 0;\n    name = '';\n    for_rent = false;\n    for_sale = true;\n    for_hold = false;\n    country_id = '';\n    state_id = '';\n    city_id = '';\n    locality_id = '';\n    configuration_id = '';\n    property_type_id = '';\n    // carpet_areas: any = [\n    //     {\n    //         area: '',\n    //         price: ''\n    //     }\n    // ];\n    carpet_areas: any = [];\n    property_id = '';\n    cover_image: File;\n    images: any = [];\n    images360: any = [];\n    videos: any = [];\n    floor_plan: File;\n    bedroom = 1;\n    bathroom = 1;\n    half_bathroom = 1;\n    floor = 1;\n    parking = 1;\n    parking_count = 0;\n    parking_for_sale = 0;\n    furnished = 1;\n    description = '';\n    quantity = 1;\n    amenities: any = [];\n    banks: any = [];\n    pets = 1;\n    kids_friendly = 1;\n    students_friendly = 1;\n    lgtb_friendly = 1;\n    mature_people_friendly = 1;\n    property_price = 1;\n    marital_status: any = [1];\n    // custom_attributes: any = [\n    //     {\n    //         name: '',\n    //         value: ''\n    //     }\n    // ];\n    custom_attributes: any = [];\n    property_quantity_details: any = [];\n    building_id: string;\n    building_towers_id: string;\n    floor_num: string;\n    building_towers: Towers;\n    videoLoader: boolean;\n}\n\nexport class Building {\n    id: string;\n    name: string;\n    address: string;\n    lat: number;\n    lng: number;\n    dev_name: string;\n    dev_phone: string;\n    dev_email: string;\n    dev_countrycode: string;\n}\n\nexport class PropertyDetails {\n    floor: number;\n    area: number;\n    conf_type: any;\n    price: number;\n    total_price: number;\n    payment_status_id: any;\n    building_specific_type_id: any;\n    direction: any;\n}\n\nexport class SellerSelections {\n    id: string;\n    property_id: string;\n    status: number;\n    user: User;\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'filterById'\n})\nexport class FilterByIdPipe implements PipeTransform {\n\n  transform(value: any= [], args?: any): any {\n    if (args) {\n\n      return value.filter(data => {\n        console.log(data);\n        if (data.id == args) {\n          return data;\n        }\n      });\n    }\n    return value;\n  }\n\n}\n","import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'filterByName'\n})\nexport class FilterByNamePipe implements PipeTransform {\n\n  transform(items: any= [], text?: any): any {\n    if (text) {\n      if (text.length < 1 ) {\n        return items;\n      }\n      return items.filter(item => {\n        if (item.name) {\n          return item.name.toLowerCase().indexOf(text.toLowerCase()) !== -1;\n        }\n      }\n    );\n    }\n    return items;\n  }\n}\n"],"sourceRoot":""}