{"version":3,"sources":["webpack:///./src/app/layout/banks/bank-leads/bank-lead-details/bank-lead-details.component.css","webpack:///./src/app/layout/banks/bank-leads/bank-lead-details/bank-lead-details.component.html","webpack:///./src/app/layout/banks/bank-leads/bank-lead-details/bank-lead-details.component.ts","webpack:///./src/app/layout/banks/bank-leads/bank-leads.component.css","webpack:///./src/app/layout/banks/bank-leads/bank-leads.component.html","webpack:///./src/app/layout/banks/bank-leads/bank-leads.component.ts","webpack:///./src/app/layout/banks/banks.component.css","webpack:///./src/app/layout/banks/banks.component.html","webpack:///./src/app/layout/banks/banks.component.ts","webpack:///./src/app/layout/banks/banks.module.ts","webpack:///./src/app/models/bank.model.ts"],"names":[],"mappings":"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","file":"banks-banks-module.js","sourcesContent":["module.exports = \"\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n    <div class=\\\"white-bg padding15\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-3 col-md-12 col-sm-6 col-12\\\">\\n                <div class=\\\"df-profile\\\">\\n                    <a routerLink=\\\"../\\\"><i class=\\\"fa fa-angle-left\\\" aria-hidden=\\\"true\\\"></i></a>\\n                    <img [src]=\\\"parameter.lead?.user?.image| img:'small'\\\" onerror='src=\\\"assets/img/default_img.png\\\"'\\n                        alt=\\\"img\\\">\\n                    <div class=\\\"df-info\\\" *ngIf=\\\"parameter.lead?.user\\\">\\n                        <p class=\\\"p14\\\">{{parameter.lead.user.name | titlecase}}</p>\\n                        <p class=\\\"p12\\\">Status: Open</p>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"col-lg-7 col-md-12 col-sm-6 col-12\\\">\\n                <div class=\\\"profile-list\\\">\\n                    <ul>\\n                        <li>\\n                            <div class=\\\"df-info\\\">\\n                                <p class=\\\"p14 marginB0\\\" *ngIf=\\\"parameter.lead?.admin\\\">\\n                                    {{parameter.lead.admin.name | titlecase}}</p>\\n                                <p class=\\\"p12\\\">CSR Buyer</p>\\n                            </div>\\n                        </li>\\n                        <li>\\n                            <div class=\\\"df-info\\\" *ngIf=\\\"parameter.lead?.broker\\\">\\n                                <p class=\\\"p14 marginB0\\\">{{parameter.lead.broker.name | titlecase}}</p>\\n                                <p class=\\\"p12\\\">\\n                                    {{parameter.lead?.broker?.is_external_agent==1 ? 'Outside Agent' : 'Inhouse Agent'}}\\n                                </p>\\n                            </div>\\n                        </li>\\n                        <li>\\n                            <div class=\\\"df-info\\\" *ngIf=\\\"parameter.lead?.closer\\\">\\n                                <p class=\\\"p14 marginB0\\\">{{parameter.lead.closer.name | titlecase}}</p>\\n                                <p class=\\\"p12\\\">CSR Closer</p>\\n                            </div>\\n                        </li>\\n                    </ul>\\n                </div>\\n            </div>\\n            <div class=\\\"col-lg-2 col-md-12 col-sm-12 col-12\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-sm-12 btn-cont text-right\\\">\\n                        <a *ngIf=\\\"parameter?.lead?.lead_status_bank!=1 &&\\n                      (admin?.admin_acl['Bank Lead Management']?.can_update==1 || admin?.permissions?.can_bank==1)\\\"\\n                            (click)=\\\"markLeadClose()\\\" class=\\\"btn btn-fourth\\\" href=\\\"javascript://\\\">\\n                            Close Lead\\n                        </a>\\n                        <a *ngIf=\\\"parameter?.lead?.lead_status_bank==1\\\" style=\\\"cursor: auto;\\\" class=\\\"btn btn-fourth\\\"\\n                            href=\\\"javascript://\\\">\\n                            Lead Closed\\n                        </a>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"spacer30\\\"></div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-lg-6 col-md-12 col-sm-12 col-12\\\">\\n            <div class=\\\"white-bg padding30\\\">\\n                <div class=\\\"row\\\">\\n                <div class=\\\"col-md-6\\\">\\n                    <h6>Details</h6>\\n                </div>\\n                <!-- <div class=\\\"col-md-6\\\">\\n                    <div class=\\\"edit text-right\\\"><a href=\\\"javascript://\\\">Edit</a></div>\\n                </div> -->\\n                </div>\\n                <div class=\\\"details-table\\\">\\n                <table class=\\\"table\\\">\\n                    <tr>\\n                        <td style=\\\"padding-left:0\\\"><label>Full Name</label></td>\\n                        <td colspan=\\\"2\\\" *ngIf=\\\"parameter.lead?.name\\\">{{parameter.lead.user.name | titlecase}}</td>\\n                    </tr>\\n                    <tr>\\n                        <td style=\\\"padding-left:0\\\"><label>Contact Number</label></td>\\n                        <td colspan=\\\"2\\\" *ngIf=\\\"parameter.lead?.phone\\\">{{parameter.lead.user.dial_code ? parameter.lead.user.dial_code : constant.dial_code}}-{{parameter.lead.user.phone}}</td>\\n                    </tr>\\n                    <tr>\\n                        <td style=\\\"padding-left:0\\\"><label>Email address</label></td>\\n                        <td colspan=\\\"2\\\" *ngIf=\\\"parameter.lead?.email\\\">{{parameter.lead.user.email}}</td>\\n                    </tr>\\n                    <tr>\\n                        <td style=\\\"padding-left:0\\\"><label>Interested In</label></td>\\n                        <td *ngIf=\\\"parameter.lead?.configuration\\\">\\n                            <span *ngFor=\\\"let conf of parameter?.lead?.configuration; let ii=index\\\">\\n                                <app-property-configuration [configuration]=\\\"conf\\\"></app-property-configuration>\\n                                <!-- <span *ngIf=\\\"conf.bedroom!=0\\\">{{conf.bedroom}} Bed </span>\\n                                <span *ngIf=\\\"conf.bathroom!=0\\\">&middot; {{conf?.bathroom}} Bath </span>\\n                                <span *ngIf=\\\"conf.half_bathroom!=0\\\">&middot; {{conf.half_bathroom}} Half Bath</span> -->\\n\\n                                <span *ngIf=\\\"ii<parameter?.lead?.configuration?.length-1\\\"> | </span><br>\\n                            </span>\\n                            <span *ngIf=\\\"parameter?.lead?.configuration?.length==0\\\">NA</span>\\n                        </td>\\n                    </tr>\\n                    <tr>\\n                        <td style=\\\"padding-left:0\\\"><label><strong>Property Selected</strong></label></td>\\n                        <td *ngIf=\\\"parameter.lead?.selected_properties?.length!=0\\\">\\n                            <p class=\\\"p14 marginB0\\\">\\n                                <!-- {{parameter.lead?.selected_properties[0]?.property?.configuration.name}} -->\\n                                <app-property-configuration *ngIf=\\\"parameter.lead?.selected_properties[0]?.property?.configuration\\\" [configuration]=\\\"parameter.lead?.selected_properties[0]?.property?.configuration\\\"></app-property-configuration>\\n                                <!-- <span *ngIf=\\\"parameter.lead?.selected_properties[0]?.property?.configuration.bedroom!=0\\\">{{parameter.lead?.selected_properties[0]?.property?.configuration.bedroom}} Bed </span>\\n                                <span *ngIf=\\\"parameter.lead?.selected_properties[0]?.property?.configuration.bathroom!=0\\\">&middot; {{parameter.lead?.selected_properties[0]?.property?.configuration?.bathroom}} Bath </span>\\n                                <span *ngIf=\\\"parameter.lead?.selected_properties[0]?.property?.configuration.half_bathroom!=0\\\">&middot; {{parameter.lead?.selected_properties[0]?.property?.configuration.half_bathroom}} Half Bath</span> -->\\n                            </p>\\n                            <p title=\\\"Building\\\" class=\\\"p12 marginB0\\\"><strong>{{parameter.lead?.selected_properties[0]?.property?.building?.name}}</strong></p>\\n                            <p title=\\\"Developer\\\" class=\\\"p11\\\"><i>{{parameter.lead?.selected_properties[0]?.property?.building?.developer?.name | titlecase}}</i></p>\\n                            <p class=\\\"marginB0\\\" *ngIf=\\\"parameter.lead?.selected_properties?.length!=0\\\">\\n                                <a class=\\\"view-all-2\\\" href=\\\"javascript://\\\" (click)=\\\"viewPropertyDetails(parameter.lead?.selected_properties[0])\\\"> View Property</a>\\n                            </p>\\n                        </td>\\n                        <!-- <td *ngIf=\\\"parameter.lead?.selected_properties?.length!=0\\\">\\n                            <a class=\\\"view-all-2\\\" href=\\\"javascript://\\\" (click)=\\\"viewPropertyDetails(parameter.lead?.selected_properties[0])\\\"> View Property</a>\\n                        </td> -->\\n                    </tr>\\n                </table>\\n                </div>\\n            </div>\\n\\n            <!-- notes start -->\\n            <app-notes [sent_as]=\\\"parameter.sent_as\\\" [lead_id]=\\\"parameter.lead_id\\\"></app-notes>\\n            <!-- notes end -->\\n\\n        </div>\\n\\n\\n        <div class=\\\"col-lg-6 col-md-12 col-sm-12 col-12\\\">\\n\\n            <!-- chat start -->\\n            <div *ngIf=\\\"parameter.lead?.user\\\">\\n                <app-chat [other_sent_as]=\\\"3\\\" [lead_id]=\\\"parameter.lead_id\\\" [sent_as]=\\\"parameter.sent_as\\\"\\n                    [user_id]=\\\"parameter.user_id\\\" [admin_id]=\\\"parameter.admin_id\\\"></app-chat>\\n            </div>\\n            <!-- chat end -->\\n\\n        </div>\\n    </div>\\n</div>\"","import { Component, OnInit, OnDestroy, ViewChild, ElementRef } from '@angular/core';\nimport { Router, ActivatedRoute } from '@angular/router';\nimport * as io from 'socket.io-client';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { SelectedProperties, BankAssigned, NotaryAssigned } from 'src/app/models/leads.model';\nimport { Chat } from 'src/app/models/chat.model';\nimport { IProperty } from 'src/app/common/property';\nimport { AdminService } from 'src/app/services/admin.service';\nimport { CommonService } from 'src/app/services/common.service';\nimport { Constant } from 'src/app/common/constants';\ndeclare let swal: any;\n\n@Component({\n  selector: 'app-bank-lead-details',\n  templateUrl: './bank-lead-details.component.html',\n  styleUrls: ['./bank-lead-details.component.css'],\n  providers: [SelectedProperties, BankAssigned, NotaryAssigned, Chat]\n})\nexport class BankLeadDetailsComponent implements OnInit {\n\n  public parameter: IProperty = {};\n  public scrollbarOptions = { axis: 'y', theme: 'dark' };\n\n  constructor(\n    private route: ActivatedRoute,\n    private router: Router,\n    public admin: AdminService,\n    private cs: CommonService,\n    public constant: Constant,\n    private spinner: NgxSpinnerService,\n    public selectedProperties: SelectedProperties,\n    public model: Chat\n  ) {\n    this.admin.loginData$.subscribe(success => {\n      this.parameter.admin_id = success['id'];\n    });\n  }\n\n  ngOnInit() {\n    this.parameter.sent_as = this.constant.userType.bank;\n    this.route.params.subscribe(params => {\n      this.parameter.lead_id = params.id;\n      this.spinner.show();\n      this.admin.postDataApi('leads/details', { lead_id: this.parameter.lead_id, sent_as: this.parameter.sent_as }).subscribe(r => {\n        this.getDocumentOptions();\n        this.spinner.hide();\n        this.parameter.lead = r.data.lead;\n        this.selectedProperties = r.data.lead.selected_properties[0];\n        // bank will chat with closer only\n        this.parameter.user_id = this.parameter.lead.closer.id;\n      }, error => {\n        this.spinner.hide();\n      });\n    });\n  }\n\n  setValue(i) {\n    this.selectedProperties.allDocuments[i].is_selected =\n      this.selectedProperties.allDocuments[i].is_selected && this.selectedProperties.allDocuments[i].is_selected === 1 ? 0 : 1;\n  }\n\n  getDocumentOptions() {\n    this.admin.postDataApi('getDocumentOptions', {}).subscribe(r => {\n      this.selectedProperties.allDocuments = r.data;\n      this.selectedProperties.allDocuments.forEach(element => {\n        this.selectedProperties.selected_documents.forEach(pt => {\n          if (pt.id === element.id) {\n            element.is_selected = 1;\n          }\n        });\n      });\n    }\n    );\n  }\n\n\n  updateDocumentChecklist() {\n    const ids = this.selectedProperties.allDocuments.filter(d => d.is_selected === 1);\n    const documents_ids = ids.map(d => d.id);\n    const input = {\n      lead_id: this.parameter.lead_id,\n      property_id: this.selectedProperties.property_id,\n      documents: documents_ids\n    };\n    this.spinner.show();\n    this.admin.postDataApi('leads/updateDocumentChecklist', input).subscribe(r => {\n      this.spinner.hide();\n      swal('Success', 'Successfully saved', 'success');\n    }, error => {\n      this.spinner.hide();\n    }\n    );\n  }\n\n  noDocumentUploaded() {\n    swal('Error', 'No document uploaded yet.', 'error');\n  }\n\n  viewPropertyDetails(property) {\n    this.cs.setPropertyDetails(property);\n    this.router.navigate(['/dashboard/properties/details/' + property.property_id]);\n  }\n\n  markLeadClose() {\n    swal({\n      html: this.constant.title.ARE_YOU_SURE + '<br>' + 'You want to close this lead?',\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: this.constant.confirmButtonColor,\n      cancelButtonColor: this.constant.cancelButtonColor,\n      confirmButtonText: 'Yes'\n    }).then((result) => {\n      if (result.value) {\n        this.spinner.show();\n        this.admin.postDataApi('leads/bank-mark-lead-closed', { lead_id: this.parameter.lead_id }).subscribe(r => {\n          this.spinner.hide();\n          this.parameter.lead.lead_status_bank = 1;\n          swal('Success', 'Lead closed successfully.', 'success');\n        }, error => {\n          this.spinner.hide();\n        });\n      }\n    });\n  }\n}\n","module.exports = \"\"","module.exports = \"\\n<div class=\\\"container-fluid\\\">\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-4\\\">\\n            <div class=\\\"form-group\\\">\\n                <p class=\\\"p16\\\">Manage Bank's Leads</p>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-md-4\\\">\\n            <div class=\\\"form-group\\\" *ngIf=\\\"admin?.admin_acl['Bank Lead Management']?.can_read==1 && !this.parameter.assignee_id\\\">\\n                <div class=\\\"d-flex\\\">\\n                <div class=\\\"autocomplete\\\">\\n                    <input placeholder=\\\"Search Bank\\\" style=\\\"max-width:200px\\\" list=\\\"amenities\\\" [(ngModel)]=\\\"parameter.keyword\\\" (input)=\\\"getCsrListing()\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"keyword\\\" (focusout)=\\\"closeCsrListing()\\\">\\n                    <div id=\\\"myInputautocomplete-list\\\" class=\\\"autocomplete-items\\\">\\n                        <div *ngFor=\\\"let item of users\\\" (click)=\\\"selectCsrUser(item)\\\">{{item.email}}</div>\\n                    </div>\\n                </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"col-md-8 col-12\\\">\\n            <div class=\\\"cust-tabs-2\\\">\\n                <ul class=\\\"nav nav-tabs\\\">\\n                <li class=\\\"nav-item\\\">\\n                    <a class=\\\"nav-link\\\" href=\\\"javascript://\\\" [ngClass]=\\\"{'active':parameter.flag==1}\\\" (click)=\\\"changeFlag(1)\\\" >This Week</a>\\n                </li>\\n                <li class=\\\"nav-item\\\">\\n                    <a class=\\\"nav-link\\\" href=\\\"javascript://\\\" [ngClass]=\\\"{'active':parameter.flag==2}\\\" (click)=\\\"changeFlag(2)\\\" >This Month</a>\\n                </li>\\n                <li class=\\\"nav-item\\\">\\n                    <a class=\\\"nav-link\\\" href=\\\"javascript://\\\" [ngClass]=\\\"{'active':parameter.flag==3}\\\" (click)=\\\"changeFlag(3)\\\" >Last Month</a>\\n                </li>\\n                <li class=\\\"nav-item\\\">\\n                    <a class=\\\"nav-link\\\" href=\\\"javascript://\\\" [ngClass]=\\\"{'active':parameter.flag==4}\\\" (click)=\\\"changeFlag(4)\\\" >Lifetime</a>\\n                </li>\\n                <li class=\\\"nav-item\\\">\\n                    <a class=\\\"nav-link\\\" href=\\\"javascript://\\\" [ngClass]=\\\"{'active':parameter.flag==5}\\\" (click)=\\\"parameter.flag=5\\\" >Custom</a>\\n                </li>\\n                </ul>\\n            </div>\\n        </div>\\n    </div>\\n    \\n    <div class=\\\"row\\\">\\n        <div class=\\\"col-12\\\">\\n            <div *ngIf=\\\"parameter.flag == 5\\\" class=\\\"row\\\">\\n                <div class=\\\"offset-lg-7\\\"></div>\\n                <div class=\\\"col-lg-2 col-md-2 col-sm-5 col-5\\\">\\n                <div class=\\\"form-group marginB0\\\">\\n                    <label>From:</label>\\n                    <p-calendar showIcon=\\\"true\\\" [(ngModel)]=\\\"parameter.min\\\" [maxDate]=\\\"today\\\" showButtonBar=\\\"true\\\" [monthNavigator]=\\\"true\\\" [yearNavigator]=\\\"true\\\" yearRange=\\\"2000:2030\\\"></p-calendar>\\n                </div>\\n                </div>\\n                <div class=\\\"col-lg-2 col-md-2 col-sm-5 col-5\\\">\\n                <div class=\\\"form-group marginB0\\\">\\n                    <label>To:</label>\\n                    <p-calendar showIcon=\\\"true\\\" [(ngModel)]=\\\"parameter.max\\\" [minDate]=\\\"parameter.min\\\" [maxDate]=\\\"today\\\" showButtonBar=\\\"true\\\" [monthNavigator]=\\\"true\\\" [yearNavigator]=\\\"true\\\" yearRange=\\\"2000:2030\\\"></p-calendar>\\n                </div>\\n                </div>\\n                <div class=\\\"col-lg-1 col-md-2 col-sm-2 col-6\\\">\\n                <div class=\\\"form-group btn-cont\\\">\\n                    <label class=\\\"addMT3\\\">&nbsp;</label>\\n                    <button class=\\\"btn btn-calender\\\" href=\\\"javascript://\\\" (click)=\\\"getListing(); getCSRDashBoardData();\\\"\\n                        [disabled]=\\\"!parameter.min || !parameter.max\\\">Apply</button>\\n                </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\\n    <div class=\\\"listingResults\\\">\\n        <div *ngIf=\\\"selectedUser as item\\\" class=\\\"sigle-row-table\\\">\\n            <table class=\\\"table table-striped\\\">\\n            <tbody><tr>\\n                <td>\\n                    <img *ngIf=\\\"item.image\\\" [defaultImage]=\\\"item.image| img:'thumb'\\\" [lazyLoad]=\\\"item.image\\\" class=\\\"rounded-circle\\\" alt=\\\"img\\\">\\n                    <img *ngIf=\\\"!item.image\\\" class=\\\"rounded-circle\\\" src=\\\"assets/img/default_img.png\\\" alt=\\\"img\\\">\\n                </td>\\n                <td class=\\\"text-left\\\">\\n                    <span class=\\\"name\\\">{{item.name | titlecase}}</span>\\n                </td>\\n                <td class=\\\"text-left\\\">{{item.phone}}</td>\\n                <td class=\\\"text-left\\\">{{item.email}}</td>\\n                <td>\\n                    <a (click)=\\\"removeCsrUser()\\\" href=\\\"javascript://\\\" class=\\\"icon-block edit-icon\\\"><img src=\\\"assets/img/remove-icon.png\\\" alt=\\\"remove\\\" title=\\\"remove\\\" /></a>\\n                </td>\\n                </tr>\\n            </tbody>\\n            </table>\\n        </div>\\n        <div class=\\\"spacer30\\\"></div>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-lg-8 col-md-12 col-sm-12 col-12\\\" >\\n            <div class=\\\"info-box all-leads marginT0\\\">\\n                <div class=\\\"one-row\\\" [ngClass]=\\\"{'active':parameter.count_flag == '1'}\\\" (click)=\\\"changeCountFlag(1)\\\">\\n                    <div class=\\\"o-block\\\">\\n                        <h5>All Leads</h5>\\n                        <small>Total</small>\\n                    </div>\\n                    <div class=\\\"o-block\\\">\\n                        <a class=\\\"view-all\\\" href=\\\"javascript://\\\">View All</a>\\n                        <h4>{{dash.all_count | numberWithCommas}}</h4>\\n                    </div>\\n                </div>\\n            </div>\\n            <div class=\\\"info-box all-leads\\\">\\n                <div class=\\\"row\\\">\\n                    <div class=\\\"col-md-6 col-sm-6 col-12\\\" [ngClass]=\\\"{'active':parameter.count_flag == '2'}\\\" (click)=\\\"changeCountFlag(2)\\\" >\\n                    <div class=\\\"one-row \\\">\\n                        <div class=\\\"o-block\\\">\\n                            <h5>Leads</h5>\\n                            <small>Open</small>\\n                        </div>\\n                        <div class=\\\"o-block\\\">\\n                            <a class=\\\"view-all\\\" href=\\\"javascript://\\\">View All</a>\\n                            <h4>{{dash.open_count | numberWithCommas}}</h4>\\n                        </div>\\n                    </div>\\n                    </div>\\n                    <div class=\\\"col-md-6 col-sm-6 col-12\\\" [ngClass]=\\\"{'active':parameter.count_flag == '3'}\\\" (click)=\\\"changeCountFlag(3)\\\">\\n                    <div class=\\\"one-row\\\">\\n                        <div class=\\\"o-block\\\">\\n                            <h5>Leads</h5>\\n                            <small>Closed</small>\\n                        </div>\\n                        <div class=\\\"o-block\\\">\\n                            <a class=\\\"view-all\\\" href=\\\"javascript://\\\">View All</a>\\n                            <h4>{{dash.close_count | numberWithCommas}}</h4>\\n                        </div>\\n                    </div>\\n                    </div>\\n                </div>\\n            </div>\\n            </div>\\n            <div class=\\\"col-lg-4 col-md-12 col-sm-12 col-12\\\">\\n                <div class=\\\"chat-msg all-leads marginT0\\\" style=\\\"padding:0px\\\">\\n                    <div class=\\\"padding20\\\" *ngIf=\\\"dash.lead_total == 0\\\">No records found</div>\\n                    <ngx-charts-pie-chart [results]=\\\"chartView\\\"></ngx-charts-pie-chart>\\n                </div>\\n            </div>\\n        </div>\\n      <div class=\\\"row\\\">\\n         <div class=\\\"col-12\\\">\\n            <div class=\\\"spacer40\\\"></div>\\n         </div>\\n      </div>\\n      <div class=\\\"row\\\">\\n         <div class=\\\"col-6\\\">\\n            <div class=\\\"title-group\\\">\\n                <h5>Leads \\n                    <span *ngIf=\\\"parameter.count_flag == 1\\\">(Total)</span>\\n                    <span *ngIf=\\\"parameter.count_flag == 2\\\">(Open)</span>\\n                    <span *ngIf=\\\"parameter.count_flag == 3\\\">(Closed)</span>\\n                </h5>\\n               <p>\\n                   <!-- Showing {{parameter.page}} out of {{parameter.total_count}} -->\\n                </p>\\n            </div>\\n         </div>\\n         <div class=\\\"col-6\\\" *ngIf=\\\"admin?.admin_acl['Bank Lead Management']?.can_read==1 && !this.parameter.assignee_id\\\">\\n            <div class=\\\"add-new text-right\\\">\\n                <a class=\\\"btn\\\" (click)=\\\"bulkAssign()\\\" href=\\\"javascript://\\\">Bulk Re-assign</a>\\n            </div>\\n        </div>\\n      </div>\\n      <div class=\\\"white-bg\\\">\\n         <div class=\\\"tabel-section\\\">\\n            <div class=\\\"table-responsive\\\">\\n                <table class=\\\"table table-striped border-0\\\">\\n                    <tbody><tr>\\n                    <th *ngIf=\\\"admin?.admin_acl['Bank Lead Management']?.can_read==1 && !this.parameter.assignee_id\\\" style=\\\"width:6%\\\">\\n                        <div class=\\\"table-search\\\">\\n                        <a (click)=\\\"selectAll()\\\"><label>All</label></a>\\n                        </div>\\n                    </th>\\n                    <th style=\\\"width:6%;\\\">\\n                        <div class=\\\"table-search\\\">\\n                            <label>Image</label>\\n                        </div>\\n                    </th>\\n                        <th style=\\\"width:20%;\\\">\\n                            <div class=\\\"table-search\\\">\\n                            <label>Name</label>\\n                            <div class=\\\"searh-3\\\">\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"parameter.name\\\" (keyup.enter)=\\\"changeFilter('name',$event.target.value)\\\" name=\\\"\\\">\\n                                <button *ngIf=\\\"parameter.name\\\" (click)=\\\"changeFilter('name', parameter.name)\\\"><i class=\\\"fa fa-search\\\"></i></button>\\n                            </div>\\n                            </div>\\n                        </th>\\n                        <th style=\\\"width:20%; text-align:left;\\\">\\n                            <div class=\\\"table-search\\\">\\n                            <label>Contact Number</label>\\n                            <div class=\\\"searh-3\\\">\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"parameter.phone\\\" (keyup.enter)=\\\"changeFilter('phone',$event.target.value)\\\" name=\\\"\\\">\\n                                <button *ngIf=\\\"parameter.phone\\\" (click)=\\\"changeFilter('phone', parameter.phone)\\\"><i class=\\\"fa fa-search\\\"></i></button>\\n                            </div>\\n                            </div>\\n                        </th>\\n                        <th style=\\\"width:25%;\\\">\\n                            <div class=\\\"table-search\\\">\\n                            <label>Email Address</label>\\n                            <div class=\\\"searh-3\\\">\\n                                <input type=\\\"text\\\" [(ngModel)]=\\\"parameter.email\\\" (keyup.enter)=\\\"changeFilter('email',$event.target.value)\\\" name=\\\"\\\">\\n                                <button *ngIf=\\\"parameter.email\\\" (click)=\\\"changeFilter('email', parameter.email)\\\"><i class=\\\"fa fa-search\\\"></i></button>\\n                            </div>\\n                            </div>\\n                        </th>\\n                        <th style=\\\"width:20%;\\\">\\n                            <div class=\\\"table-search\\\">\\n                            <label>Assignee</label>\\n                            </div>\\n                        </th>\\n                    </tr>\\n                    <tr class=\\\"cursor-pointer\\\" title=\\\"Click to view details\\\" *ngFor=\\\"let item of items| paginate: { itemsPerPage: parameter.itemsPerPage, currentPage: parameter.page, totalItems: parameter.total }; let i=index\\\"\\n                        routerLink=\\\"/dashboard/banks/bank-leads/{{item.id}}\\\">\\n                        <td *ngIf=\\\"admin?.admin_acl['Bank Lead Management']?.can_read==1 && !this.parameter.assignee_id\\\" (click)=\\\"$event.stopPropagation()\\\">\\n                            <label class=\\\"cust-check-bx\\\" >\\n                            <input type=\\\"checkbox\\\" [(ngModel)]=\\\"item.selected\\\" name=\\\"document\\\">\\n                            <span class=\\\"checkmark\\\"></span>\\n                            </label>\\n                        </td>\\n                        <td>\\n                            <img class=\\\"rounded-circle\\\" [src]=\\\"item.user.image| img:'small'\\\" onerror=\\\"this.src='assets/img/default_img.png'\\\" alt=\\\"img\\\">\\n                        </td>\\n                        <td class=\\\"text-left\\\">\\n                            <span class=\\\"name\\\">{{item.user.name | titlecase}}</span>\\n                        </td>\\n                        <td class=\\\"text-left\\\">\\n                            {{item.user.dial_code ? item.user.dial_code : constant.dial_code}}-{{item.user.phone}}<br>\\n                        </td>\\n                        <td class=\\\"text-left\\\">\\n                            {{item.user.email}}\\n                        </td>\\n                        <td class=\\\"text-left\\\" title=\\\"Bank\\\">\\n                            {{item?.selected_properties[0]?.banks[0]?.name | titlecase}}\\n                        </td>\\n                        <!-- <td>\\n                        <a style=\\\"display:none;\\\" #modalOpen class=\\\"green-color fontW500\\\" data-toggle=\\\"modal\\\" data-target=\\\"#set-availability\\\" href=\\\"javascript://\\\">Change Availability</a>\\n                        <a class=\\\"green-color fontW500\\\" (click)=\\\"openModal(item, i)\\\" href=\\\"javascript://\\\">Change Availability</a>\\n                        </td> -->\\n                        <!-- <td>\\n                            <a title=\\\"View Details\\\" href=\\\"javascript://\\\" routerLink=\\\"/dashboard/banks/bank-leads/{{item.id}}\\\" class=\\\"icon-block edit-icon\\\"><img src=\\\"assets/img/viewfull.png\\\" alt=\\\"img\\\"></a> \\n                        </td> -->\\n                    </tr>\\n                </tbody>\\n            </table>\\n            <div class=\\\"padding20 center\\\" *ngIf=\\\"parameter.noResultFound\\\">\\n            <img src=\\\"assets/img/404-error.png\\\">\\n            </div>\\n\\n            </div>\\n         </div>\\n    \\n        </div>\\n    </div>\\n    \\n\\n    <div class=\\\"btn-cont marginT15\\\" *ngIf=\\\"parameter.total\\\">\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col-6\\\">\\n                <div class=\\\"title-group\\\">\\n                    <p>Showing {{items?.length}} out of {{parameter.total}}</p>\\n                </div>\\n            </div>\\n            <div class=\\\"col-6 text-right\\\">\\n                <pagination-controls class=\\\"my-pagination\\\" (pageChange)=\\\"getPage($event)\\\"></pagination-controls>\\n            </div>\\n        </div>\\n    </div>\\n</div>\\n\\n\\n<!-- Assignment model -->\\n<a data-toggle=\\\"modal\\\" data-target=\\\"#assign-model\\\" #openAssignModel></a>\\n<div class=\\\"modal\\\" id=\\\"assign-model\\\">\\n        <div class=\\\"modal-dialog \\\">\\n            <div class=\\\"modal-content notary-avail\\\">\\n                <div class=\\\"modal-header popup-header\\\">\\n                <h4 class=\\\"modal-title\\\">Re Assign to</h4>\\n                <button type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" #closeAssignModel>&times;</button>\\n                </div>\\n                <div class=\\\"modal-body\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-md-8\\\">\\n                            <input style=\\\"max-width:200px\\\" list=\\\"amenities\\\" [(ngModel)]=\\\"assign.keyword\\\" (keyup.enter)=\\\"getAssignListing()\\\" class=\\\"form-control\\\" type=\\\"text\\\" name=\\\"keyword\\\" placeholder=\\\"Search\\\">\\n                        </div>\\n                        <div class=\\\"col-md-4 btn-cont\\\">\\n                            <a class=\\\"btn btn-primary pull-right\\\" href=\\\"javascript://\\\" (click)=\\\"assignNow()\\\">Assign</a>\\n                        </div>\\n                    </div>\\n                    <div class=\\\"spacer40\\\"></div>\\n                    <div class=\\\"modal-data\\\">\\n                        <table class=\\\"table\\\">\\n                            <tr *ngFor=\\\"let item of assign.items\\\">\\n                                <td *ngIf=\\\"item.is_blocked!=1\\\">\\n                                    <div class=\\\"n-avail-profile\\\">\\n                                    <img [src]=\\\"item.image\\\" onerror='src=\\\"assets/img/default_img.png\\\"' alt=\\\"img\\\">\\n                                    <div class=\\\"n-avail-info\\\">\\n                                        <p class=\\\"p12\\\">{{item.name | titlecase}}</p>\\n                                        <p class=\\\"p10\\\">Phone : {{item.dial_code ? item.dial_code : constant.dial_code}}-{{item.phone}}</p>\\n                                    </div>\\n                                    </div>\\n                                </td>\\n                                <td *ngIf=\\\"item.is_blocked!=1\\\">\\n                                    <label class=\\\"cust-check-bx float-right\\\">\\n                                        <input type=\\\"radio\\\" name=\\\"notary_id\\\" (click)=\\\"assignItem = item\\\">\\n                                        <span class=\\\"checkmark\\\"></span>\\n                                    </label>\\n                                </td>\\n                            </tr>\\n                        </table>\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n    </div>\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { AdminService } from '../../../services/admin.service';\nimport { IProperty } from '../../../common/property';\nimport { Constant } from './../../../common/constants';\nimport { Users } from '../../../models/users.model';\nimport { ActivatedRoute } from '@angular/router';\nimport * as moment from 'moment';\nimport { NgxSpinnerService } from 'ngx-spinner';\ndeclare let swal: any;\n\n@Component({\n  selector: 'app-bank-leads',\n  templateUrl: './bank-leads.component.html',\n  styleUrls: ['./bank-leads.component.css']\n})\nexport class BankLeadsComponent implements OnInit {\n\n  @ViewChild('openAssignModel') openAssignModel: ElementRef;\n  @ViewChild('closeAssignModel') closeAssignModel: ElementRef;\n\n  public parameter: IProperty = {};\n  public location: IProperty = {};\n  public assign: IProperty = {};\n  assignItem: any;\n\n  items: Array<Users> = [];\n  today = new Date();\n  users: any = [];\n  selectedUser: any;\n  initSelection = false;\n\n  dash: any = {\n    all_count: 0,\n    open_count: 0,\n    close_count: 0\n  };\n\n  chartView: any = [];\n\n  constructor(\n    public admin: AdminService,\n    private constant: Constant,\n    private route: ActivatedRoute,\n    private spinner: NgxSpinnerService\n  ) { }\n\n  ngOnInit() {\n    this.parameter.keyword = '';\n    this.parameter.itemsPerPage = this.constant.itemsPerPage;\n    this.parameter.page = this.constant.p;\n    this.parameter.flag = 2;\n    this.parameter.total = 0;\n    this.parameter.count_flag = 1;\n    this.route.params.subscribe(params => {\n      this.parameter.assignee_id = params.id;\n    });\n    this.getListing();\n    this.getCSRDashBoardData();\n    Object.assign(this, this.chartView);\n  }\n\n  changeFlag(flag) {\n    this.parameter.flag = flag;\n    this.parameter.count_flag = 1;\n    this.resetDates();\n    this.getListing();\n    this.getCSRDashBoardData();\n  }\n\n  changeFilter(key, value) {\n    this.parameter[key] = value;\n    this.getListing();\n  }\n\n  changeCountFlag(flag) {\n    this.parameter.count_flag = flag;\n    this.getListing();\n  }\n\n  getCsrListing() {\n    this.initSelection = true;\n    this.users = [];\n    const input = new FormData();\n    if (this.parameter.keyword) {\n      input.append('keyword', this.parameter.keyword);\n    }\n    // if (this.parameter.country_id && this.parameter.country_id !== '-1') {\n    //   input.append('countries', JSON.stringify([this.parameter.country_id]));\n    // }\n\n    // if (this.parameter.state_id && this.parameter.state_id !== '-1') {\n    //   input.append('states', JSON.stringify([this.parameter.state_id]));\n    // }\n\n    // if (this.parameter.city_id && this.parameter.city_id !== '-1') {\n    //   input.append('cities', JSON.stringify([this.parameter.city_id]));\n    // }\n\n    // if (this.parameter.locality_id && this.parameter.locality_id !== '-1') {\n    //   input.append('localities', JSON.stringify([this.parameter.locality_id]));\n    // }\n    this.admin.postDataApi('getBanks', input).subscribe(\n      success => {\n        this.users = success.data;\n      }, error => {\n        this.spinner.hide();\n      });\n  }\n\n  resetFilters() {\n    this.parameter.is_selected = false;\n    this.parameter.page = this.constant.p;\n    this.parameter.flag = 2;\n    this.parameter.total = 0;\n    this.parameter.keyword = '';\n    this.parameter.count_flag = 1;\n    this.resetDates();\n    this.getListing();\n    this.getCSRDashBoardData();\n  }\n\n  resetDates() {\n    this.parameter.min = '';\n    this.parameter.max = '';\n  }\n\n  closeCsrListing() {\n    setTimeout(() => {\n      this.users = [];\n    }, 200);\n  }\n\n  selectCsrUser(user) {\n    this.selectedUser = user;\n    this.users = [];\n    this.parameter.keyword = '';\n    this.initSelection = false;\n    this.getListing();\n    this.getCSRDashBoardData();\n  }\n\n  removeCsrUser() {\n    this.selectedUser = '';\n    this.parameter.keyword = '';\n    this.parameter.itemsPerPage = this.constant.itemsPerPage;\n    this.parameter.page = this.constant.p;\n    // this.parameter.flag = 2;\n    this.parameter.total = 0;\n    this.parameter.count_flag = 1;\n    this.getListing();\n    this.getCSRDashBoardData();\n  }\n\n  getCSRDashBoardData() {\n    // const input = new FormData();\n    // if (this.selectedUser) {\n    //   input.append('assignee_id', this.selectedUser.id);\n    // } else if (this.parameter.assignee_id) {\n    //   input.append('assignee_id', this.parameter.assignee_id);\n    // }\n    // if (this.parameter.flag) {\n    //   input.append('flag', this.parameter.flag.toString());\n    // }\n    const input: any = JSON.parse(JSON.stringify(this.parameter));\n    if (this.parameter.min) {\n      input.min = moment(this.parameter.min).format('YYYY-MM-DD');\n    }\n    if (this.parameter.max) {\n      input.max = moment(this.parameter.max).format('YYYY-MM-DD');\n    }\n    if (this.selectedUser) {\n      input.assignee_id = this.selectedUser.id;\n    } else if (this.parameter.assignee_id) {\n      input.assignee_id = this.parameter.assignee_id;\n    }\n\n    this.admin.postDataApi('leads/bank-dash-count', input).subscribe(r => {\n      this.dash = r.data;\n      this.chartView = [\n        {\n          'name': 'Leads (Open)',\n          'value': parseInt(this.dash.open_count, 10)\n        },\n        {\n          'name': 'Leads (Closed)',\n          'value': parseInt(this.dash.close_count, 10)\n        }\n      ];\n    });\n  }\n\n  getListing() {\n    this.items = [];\n    this.parameter.noResultFound = false;\n    const input: any = JSON.parse(JSON.stringify(this.parameter));\n    if (this.parameter.min) {\n      input.min = moment(this.parameter.min).format('YYYY-MM-DD');\n    }\n    if (this.parameter.max) {\n      input.max = moment(this.parameter.max).format('YYYY-MM-DD');\n    }\n    if (this.selectedUser) {\n      input.assignee_id = this.selectedUser.id;\n    } else if (this.parameter.assignee_id) {\n      input.assignee_id = this.parameter.assignee_id;\n    }\n    this.spinner.show();\n    this.admin.postDataApi('leads/banks', input).subscribe(\n      success => {\n        this.spinner.hide();\n        this.items = success.data;\n        if (this.items.length <= 0) { this.parameter.noResultFound = true; }\n        this.parameter.total = success.total_count;\n      }, error => {\n        this.spinner.hide();\n      });\n  }\n\n  getPage(page) {\n    this.parameter.page = page;\n    this.getListing();\n  }\n\n  sort_by(sort_by_flag) {\n    if (this.parameter.sort_by_flag !== sort_by_flag) {\n      this.parameter.sort_by_flag = sort_by_flag;\n      this.parameter.sort_by_order = 0;\n    } else {\n      this.parameter.sort_by_order = this.parameter.sort_by_order ? 0 : 1;\n    }\n    this.getListing();\n  }\n\n  selectAll() {\n    this.items.forEach(item => {\n      item.selected = true;\n    });\n  }\n\n  bulkAssign() {\n    // this.assign.keyword = '';\n    const leads_ids = this.items.filter(x => x.selected).map(y => y.id);\n    if (leads_ids.length === 0) {\n      swal('Error', 'Please choose atleast one lead.', 'error');\n      return false;\n    }\n    this.openAssignModel.nativeElement.click();\n    // this.admin.postDataApi('getBanks', {}).subscribe(\n    //   success => {\n    //     this.assign.items = success.data;\n    //   });\n  }\n\n  getAssignListing() {\n    // this.assign.items = [];\n    const input = {\n      keyword: this.assign.keyword\n    };\n    this.spinner.show();\n    this.admin.postDataApi('getBanks', input).subscribe(\n      success => {\n        this.spinner.hide();\n        this.assign.items = success.data;\n      }, error => {\n        this.spinner.hide();\n      });\n  }\n\n  assignNow() {\n    const leads_ids = this.items.filter(x => x.selected).map(y => y.id);\n    const input = {\n      bank_id: this.assignItem.id,\n      leads: leads_ids\n    };\n    // this.spinner.show();\n    this.admin.postDataApi('leads/bulkAssignBank', input).subscribe(r => {\n      // this.spinner.hide();\n      swal('Success', 'Assigned successfully', 'success');\n      this.closeAssignModel.nativeElement.click();\n      this.getListing();\n    },\n      error => {\n        this.closeAssignModel.nativeElement.click();\n        swal('Error', error.error.message, 'error');\n      });\n  }\n}\n","module.exports = \".add-img{\\n    background-size: cover;background-repeat: no-repeat;\\n}\"","module.exports = \"\\n<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-md-6 col-6\\\">\\n        <div class=\\\"title-group\\\">\\n            <h5>Banks</h5>\\n            <p>Showing {{items?.length}} out of {{parameter.total ? parameter.total : parameter?.items?.length}}</p>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-6 col-6\\\">\\n        <div class=\\\"btn-cont text-right\\\">\\n            <a style=\\\"display: none;\\\" class=\\\"btn btn-primary\\\" href=\\\"javascript://\\\" data-toggle=\\\"modal\\\" data-target=\\\"#add\\\" #modalOpen>Add New</a>\\n            <a *ngIf=\\\"admin?.admin_acl['Bank Management']?.can_create==1\\\" (click)=\\\"openModal()\\\" class=\\\"btn btn-primary\\\" href=\\\"javascript://\\\">Add New</a>\\n        </div>\\n      </div>\\n  </div>\\n\\n  <div class=\\\"white-bg\\\">\\n      <div class=\\\"tabel-section\\\">\\n        <div class=\\\"table-responsive\\\">\\n          <table class=\\\"table table-striped table-align-left\\\">\\n            <tr>\\n              <th style=\\\"width:6%\\\">&nbsp;</th>\\n              <th style=\\\"width:20%\\\">\\n                <div class=\\\"table-search\\\">\\n                    <label>Name</label>\\n                    <div class=\\\"searh-3\\\">\\n                      <input type=\\\"text\\\" [(ngModel)]=\\\"parameter.name\\\" (keyup.enter)=\\\"getBanks(parameter.p, parameter.name, parameter.phone, parameter.email)\\\" name=\\\"\\\">\\n                      <button *ngIf=\\\"parameter.name\\\" (click)=\\\"getBanks(parameter.p, parameter.name, parameter.phone, parameter.email)\\\"><i class=\\\"fa fa-search\\\"></i></button>\\n                    </div>\\n                </div>\\n              </th>\\n              <th style=\\\"width:20%; text-align:left;\\\">\\n                <div class=\\\"table-search\\\">\\n                    <label>Contact Number</label>\\n                    <div class=\\\"searh-3\\\">\\n                      <input type=\\\"text\\\" [(ngModel)]=\\\"parameter.phone\\\" (keyup.enter)=\\\"getBanks(parameter.p, parameter.name, parameter.phone, parameter.email)\\\" name=\\\"\\\">\\n                      <button *ngIf=\\\"parameter.phone\\\" (click)=\\\"getBanks(parameter.p, parameter.name, parameter.phone, parameter.email)\\\"><i class=\\\"fa fa-search\\\"></i></button>\\n                    </div>\\n                </div>\\n              </th>\\n              <th style=\\\"width:20%\\\">\\n                <div class=\\\"table-search\\\">\\n                    <label>Email Address</label>\\n                    <div class=\\\"searh-3\\\">\\n                      <input (keydown.space)=\\\"$event.preventDefault();\\\" type=\\\"text\\\" [(ngModel)]=\\\"parameter.email\\\" (keyup.enter)=\\\"getBanks(parameter.p, parameter.name, parameter.phone, parameter.email)\\\" name=\\\"\\\">\\n                      <button *ngIf=\\\"parameter.email\\\" (click)=\\\"getBanks(parameter.p, parameter.name, parameter.phone, parameter.email)\\\"><i class=\\\"fa fa-search\\\"></i></button>\\n                    </div>\\n                </div>\\n              </th>\\n              <th style=\\\"width:10%; vertical-align: top;\\\">\\n                <div class=\\\"table-search\\\"><label>Branch</label></div>\\n              </th>\\n              <th style=\\\"width:10%; vertical-align: top;\\\">\\n                <div class=\\\"table-search\\\"><label>Floating Int. (%)</label></div>\\n              </th>\\n              <th style=\\\"width:14%\\\">\\n                &nbsp;\\n              </th>\\n            </tr>\\n      \\n            <tr *ngFor=\\\"let item of items| paginate: { itemsPerPage: parameter.itemsPerPage, currentPage: parameter.page, totalItems: parameter.total }; let i=index\\\">\\n              <td> \\n                  <img *ngIf=\\\"item.image\\\" [defaultImage]=\\\"item.image| img:'thumb'\\\" [lazyLoad]=\\\"item.image\\\" class=\\\"rounded-circle\\\" alt=\\\"img\\\">\\n                  <img *ngIf=\\\"!item.image\\\" class=\\\"rounded-circle\\\" src=\\\"assets/img/default_img.png\\\" alt=\\\"img\\\">\\n              </td>\\n              <td class=\\\"text-left\\\">\\n                <span class=\\\"name\\\">\\n                  <a data-toggle=\\\"popover\\\" data-placement=\\\"top\\\" title=\\\"{{item.name}}\\\">{{item.name | titlecase}}</a>\\n                </span>\\n              </td>\\n              <td class=\\\"text-left\\\" *ngIf=\\\"item.phone\\\">{{item.dial_code ? item.dial_code : constant.dial_code}}-{{item.phone}}</td>\\n              <td class=\\\"text-left\\\" *ngIf=\\\"!item.phone\\\">NA</td>\\n              <td class=\\\"text-left\\\">{{item.email && item.email!='null' ? item.email : 'NA'}}</td>\\n              <td>{{item.branch ? item.branch : 'NA'}}</td>\\n              <td>{{item.floating_int ? item.floating_int+'%' : '0 %'}}</td>\\n              <td>\\n                <div class=\\\"table-actions\\\">\\n                  <a *ngIf=\\\"admin?.admin_acl['Bank Lead Management']?.can_read==1\\\" title=\\\"View Leads\\\" href=\\\"javascript://\\\"\\n                    routerLink=\\\"/dashboard/banks/view-bank-leads/{{item.id}}\\\" class=\\\"icon-block edit-icon\\\">\\n                    <img src=\\\"assets/img/ic_leads.png\\\" alt=\\\"img\\\">\\n                  </a>\\n                  <button title=\\\"Edit Details\\\" [disabled]=\\\"admin?.admin_acl['Bank Management']?.can_update==0\\\" (click)=\\\"editUser(item, i)\\\" class=\\\"action-icon\\\"><img src=\\\"assets/img/edit.png\\\" alt=\\\"img\\\"></button>\\n                  <button [disabled]=\\\"admin?.admin_acl['Bank Management']?.can_delete==0\\\"\\n                    (click)=\\\"blockUnblockPopup(i, item.id, item.is_blocked==1?0:1)\\\" \\n                    title=\\\"{{item.is_blocked==1?'Unblock Bank':'Block Bank'}}\\\" [ngClass]=\\\"{'unblock-bg':item.is_blocked==1}\\\"\\n                    class=\\\"action-icon\\\"><img src=\\\"assets/img/block.png\\\" alt=\\\"img\\\">\\n                  </button>\\n                </div>\\n              </td>\\n            </tr>\\n\\n          </table>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"center\\\" *ngIf=\\\"parameter.total == 0\\\">\\n        <img src=\\\"assets/img/404-error.png\\\">\\n      </div>\\n  </div>\\n  \\n  <div class=\\\"btn-cont text-right marginT15\\\" *ngIf=\\\"parameter.total\\\">\\n    <pagination-controls class=\\\"my-pagination\\\" (pageChange)=\\\"getPage($event)\\\"></pagination-controls>\\n  </div>\\n  \\n</div>\\n\\n\\n\\n<!-- add inhouse user modal -->\\n<div class=\\\"modal animated\\\" id=\\\"add\\\">\\n  <div class=\\\"modal-dialog fadeIndown modal-lg\\\">\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header\\\">\\n          <button style=\\\"display: none;\\\" type=\\\"button\\\" class=\\\"close\\\" data-dismiss=\\\"modal\\\" #modalClose>&times;</button>\\n          <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"closeModal(); addForm.reset()\\\">&times;</button>\\n      </div>\\n\\n      <form class=\\\"form-horizontal form-model0P\\\" role=\\\"form\\\" ngNativeValidate #addForm=\\\"ngForm\\\" (ngSubmit)=\\\"addBank(addForm)\\\">\\n        <div class=\\\"modal-body\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-6\\\">\\n              <div class=\\\"add-img\\\" style=\\\"display:flex;\\\">\\n                  <img *ngIf=\\\"model?.image\\\" [src]=\\\"model?.image\\\" [defaultImage]=\\\"model?.image| img:'thumb'\\\" [lazyLoad]=\\\"model?.image\\\" style=\\\"object-fit: cover; width: 100%;\\\">\\n                  <label *ngIf=\\\"model?.image\\\">\\n                    <input accept=\\\"image/*\\\" name=\\\"image\\\" class=\\\"image\\\" (change)=\\\"changeListner($event, 'img_loader', 'image')\\\" type=\\\"file\\\">\\n                  </label>\\n                  <label *ngIf=\\\"!model?.image\\\">+ Add Image</label>\\n                  <input *ngIf=\\\"!model?.image\\\" accept=\\\"image/*\\\" name=\\\"image\\\" class=\\\"image\\\" (change)=\\\"changeListner($event, 'img_loader', 'image')\\\" type=\\\"file\\\">\\n                  <div *ngIf=\\\"model.img_loader\\\" class=\\\"loaderr\\\"></div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-6\\\">\\n              <div class=\\\"btn-cont text-right\\\">\\n                  <button *ngIf=\\\"!model.id\\\" type=\\\"submit\\\" [disabled]=\\\"!addForm.valid\\\" class=\\\"btn btn-primary\\\">ADD</button>\\n                  <button *ngIf=\\\"model.id\\\" type=\\\"submit\\\" [disabled]=\\\"!addForm.valid\\\" class=\\\"btn btn-primary\\\">UPDATE</button>\\n              </div>\\n            </div>\\n            <div class=\\\"col-12\\\">\\n              <div class=\\\"spacer40\\\"></div>\\n            </div>\\n            <div class=\\\"col-12\\\">\\n              <div class=\\\"form-group-2\\\">\\n                  <label>Name <span class=\\\"color-red\\\">*</span></label>\\n                  <div class=\\\"form-group\\\">\\n                  <input autocomplete=\\\"off\\\" [pattern]=\\\"constant.onlyWhiteSpaces\\\" required type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"model.name\\\" name=\\\"name\\\">\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-12\\\">\\n              <div class=\\\"form-group-2\\\">\\n                  <label>Contact number <span class=\\\"color-red\\\">*</span></label>\\n                  <div class=\\\"form-group\\\">\\n                  <input minlength=\\\"6\\\" maxlength=\\\"16\\\" autocomplete=\\\"off\\\" type=\\\"text\\\" [pattern]=\\\"constant.phonePattern\\\" class=\\\"form-control\\\" id=\\\"phone\\\" required minlength=\\\"1\\\" [(ngModel)]=\\\"model.phone\\\" name=\\\"phone\\\"\\n                      ng2TelInput\\n                      (intlTelInputObject)=\\\"telInputObject($event)\\\"\\n                       [ng2TelInputOptions]=\\\"initialCountry\\\" (countryChange)=\\\"onCountryChange($event)\\\" />\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-12\\\">\\n              <div class=\\\"form-group-2\\\">\\n                  <label>Email ID <span class=\\\"color-red\\\">*</span></label>\\n                  <div class=\\\"form-group\\\">\\n                  <input (keydown.space)=\\\"$event.preventDefault();\\\" autocomplete=\\\"off\\\" required [pattern]=\\\"constant.emailPattern\\\" type=\\\"email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"model.email\\\" name=\\\"email\\\">\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-12\\\">\\n              <div class=\\\"form-group-2\\\">\\n                  <label>Branch <span class=\\\"color-red\\\">*</span></label>\\n                  <div class=\\\"form-group\\\">\\n                  <input autocomplete=\\\"off\\\" [pattern]=\\\"constant.onlyWhiteSpaces\\\" required type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"model.branch\\\" name=\\\"branch\\\">\\n                </div>\\n              </div>\\n            </div>\\n            <div class=\\\"col-12\\\">\\n              <div class=\\\"form-group-2\\\">\\n                  <label>Floating value (%) <span class=\\\"color-red\\\">*</span></label>\\n                  <div class=\\\"form-group\\\">\\n                  <input autocomplete=\\\"off\\\" required type=\\\"number\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"model.floating_int\\\" name=\\\"floating_int\\\">\\n                </div>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </form>\\n    </div>\\n  </div>\\n</div>\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { NgForm } from '@angular/forms';\nimport { CommonService } from 'src/app/services/common.service';\nimport { Bank } from 'src/app/models/bank.model';\nimport { IProperty } from 'src/app/common/property';\nimport { Constant } from 'src/app/common/constants';\nimport { AdminService } from 'src/app/services/admin.service';\nimport { NgxSpinnerService } from 'ngx-spinner';\ndeclare let swal: any;\n\n@Component({\n  selector: 'app-banks',\n  templateUrl: './banks.component.html',\n  styleUrls: ['./banks.component.css']\n})\n\nexport class BanksComponent implements OnInit {\n\n  @ViewChild('modalOpen') modalOpen: ElementRef;\n  @ViewChild('modalClose') modalClose: ElementRef;\n\n  public parameter: IProperty = {};\n  obj: any;\n  initialCountry: any;\n  model: Bank;\n  items: Array<Bank>;\n  constructor(public constant: Constant,\n    public admin: AdminService,\n    private spinner: NgxSpinnerService,\n    public cs: CommonService) { }\n\n  ngOnInit() {\n    this.model = new Bank();\n    this.parameter.itemsPerPage = this.constant.itemsPerPage;\n    this.parameter.page = this.constant.p;\n    this.initialCountry = { initialCountry: this.constant.country_code };\n    this.getBanks(this.parameter.page, '', '', '');\n  }\n\n  telInputObject(obj) {\n    this.obj = obj;\n  }\n\n  closeModal() {\n    this.model = new Bank();\n    this.modalClose.nativeElement.click();\n  }\n\n  openModal() {\n    this.model = new Bank();\n    this.model.country_code = this.constant.country_code;\n    this.model.dial_code = this.constant.dial_code;\n    this.modalOpen.nativeElement.click();\n  }\n\n  getPage(page) {\n    this.parameter.page = page;\n    this.getBanks(this.parameter.page, this.parameter.name, this.parameter.phone, this.parameter.email);\n  }\n\n  getBanks(page, name, phone, email) {\n    this.spinner.show();\n    this.parameter.page = page;\n    this.parameter.name = name;\n    this.parameter.phone = phone;\n    this.parameter.email = email;\n\n    this.admin.postDataApi('getBanksListing', this.parameter)\n      .subscribe(\n        success => {\n          this.spinner.hide();\n          this.items = success.data;\n          this.parameter.total = success.total_count;\n        }, error => {\n          this.spinner.hide();\n        });\n  }\n\n\n  changeListner(event: any, paramLoader: string, param: any) {\n    if (event.target.files[0].size > this.constant.fileSizeLimit) {\n      swal('Error', this.constant.errorMsg.FILE_SIZE_EXCEEDS, 'error');\n      return false;\n    }\n    this.model[paramLoader] = true;\n    const reader = new FileReader();\n    reader.onload = (e: any) => {\n      this.model[param] = e.target.result;\n      this.cs.saveImage(event.target.files[0]).subscribe(\n        success => {\n          this.model[paramLoader] = false;\n          this.model[param] = success['data'].image;\n        }\n      );\n    };\n    reader.readAsDataURL(event.target.files[0]);\n  }\n\n\n  onCountryChange(e) {\n    this.model.country_code = e.iso2;\n    this.model.dial_code = '+' + e.dialCode;\n    this.initialCountry = { initialCountry: e.iso2 };\n  }\n\n  addBank(formData: NgForm) {\n    if (this.model.img_loader) {\n      swal('Error', 'Uploading image.', 'error');\n      return false;\n    }\n    this.spinner.show();\n    this.admin.postDataApi('addBank', this.model)\n      .subscribe(\n        success => {\n          this.spinner.hide();\n          if (success.success === '0') {\n            swal('Error', success.message, 'error');\n          } else {\n            this.modalClose.nativeElement.click();\n            const text = this.model.id ? 'Updated successfully.' : 'Added successfully.';\n            swal('Success', text, 'success');\n            if (this.model.id) {\n              this.items[this.parameter.index] = success.data;\n            } else {\n              if (this.items.length < 10) {\n                this.items.push(success.data);\n                this.parameter.total++;\n              }\n            }\n            formData.reset();\n            this.model = new Bank();\n          }\n        }, error => {\n          this.spinner.hide();\n        });\n  }\n\n\n  editUser(userdata: Bank, index: any) {\n    this.model = JSON.parse(JSON.stringify(userdata));\n    this.model.img_loader = false;\n    this.parameter.index = index;\n    if (this.obj) {\n      this.obj.intlTelInput('setCountry', this.model.country_code ? this.model.country_code : this.constant.country_code);\n    }\n    this.modalOpen.nativeElement.click();\n  }\n\n\n  blockUnblockPopup(index, id, flag) {\n    this.parameter.index = index;\n    this.parameter.title = this.constant.title.ARE_YOU_SURE;\n    switch (flag) {\n      case 0:\n        this.parameter.text = 'You want to unblock this bank?';\n        this.parameter.successText = this.constant.successMsg.UNBLOCKED_SUCCESSFULLY;\n        break;\n      case 1:\n      this.parameter.text = 'You want to block this bank?';\n        this.parameter.successText = this.constant.successMsg.BLOCKED_SUCCESSFULLY;\n        break;\n    }\n\n    swal({\n      html: this.parameter.title + '<br>' + this.parameter.text,\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: this.constant.confirmButtonColor,\n      cancelButtonColor: this.constant.cancelButtonColor,\n      confirmButtonText: 'Yes'\n    }).then((result) => {\n      if (result.value) {\n        this.blockNoatary(index, id, flag);\n      }\n    });\n  }\n\n\n  blockNoatary(index, id, flag) {\n    this.parameter.index = index;\n    this.spinner.show();\n    this.admin.postDataApi('blockNoatary', { id: id, flag: flag })\n      .subscribe(\n        success => {\n          this.spinner.hide();\n          swal('Success', this.parameter.successText, 'success');\n          // this.items[this.parameter.index] = success.data;\n          this.items[this.parameter.index]['is_blocked'] = flag;\n        }, error => {\n          this.spinner.hide();\n        });\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Ng2TelInputModule } from 'ng2-tel-input';\nimport { LazyLoadImageModule } from 'ng-lazyload-image';\n\nimport { BanksComponent } from './banks.component';\nimport { AclUserGuard } from '../../guards/acl-user.guard';\nimport { BankLeadsComponent } from './bank-leads/bank-leads.component';\nimport { BankLeadDetailsComponent } from './bank-leads/bank-lead-details/bank-lead-details.component';\nimport { SharedModule } from '../../modules/shared.module';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { CalendarModule } from 'primeng/primeng';\n\n\nconst routes: Routes = [\n  { path: 'view-banks', component: BanksComponent,\n    canActivate: [AclUserGuard], data: {roles: ['Bank Management', 'can_read', 'can_bank']}},\n  // all leads\n  { path: 'bank-leads', component: BankLeadsComponent,\n    canActivate: [AclUserGuard], data: {roles: ['Bank Lead Management', 'can_read', 'can_bank']}},\n\n  // leads wrt particular bank\n  { path: 'view-bank-leads/:id', component: BankLeadsComponent,\n  canActivate: [AclUserGuard], data: {roles: ['Bank Lead Management', 'can_read', 'can_bank']}},\n\n  // bank lead details\n  { path: 'bank-leads/:id', component: BankLeadDetailsComponent,\n    canActivate: [AclUserGuard], data: {roles: ['Bank Lead Management', 'can_read', 'can_bank']}}\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes),\n    CommonModule,\n    NgxSpinnerModule,\n    LazyLoadImageModule,\n    NgxPaginationModule,\n    FormsModule,\n    ReactiveFormsModule,\n    Ng2TelInputModule,\n    NgxChartsModule,\n    SharedModule,\n    CalendarModule\n  ],\n  declarations: [\n    BanksComponent,\n    BankLeadsComponent,\n    BankLeadDetailsComponent\n  ]\n})\n\nexport class BanksModule { }\n","export class Bank {\n    id: string;\n    name: string;\n    country_code: string;\n    dial_code: string;\n    phone: string;\n    image: string;\n    img_loader: boolean;\n    email: string;\n    branch: string;\n    floating_int: string;\n    interests: string;\n    interestsArray: Array<Object> = [\n        {\n            min_price: 0,\n            max_price: 0,\n            interest : 0\n        }\n    ];\n}\n"],"sourceRoot":""}