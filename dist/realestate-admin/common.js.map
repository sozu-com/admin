{"version":3,"sources":["webpack:///./src/app/common/fileUpload.ts","webpack:///./src/app/models/acl.model.ts","webpack:///./src/app/models/addProject.model.ts","webpack:///./src/app/models/users.model.ts"],"names":[],"mappings":"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","file":"common.js","sourcesContent":["export class FileUpload {\n\n    http: any; env: any; us: any;\n\n    single = true;\n    file: any;\n    image: any;\n    files: any;\n    loading = false;\n    backupArray: any;\n\n    constructor(single, us) {\n      this.us = us;\n      this.single = single;\n      if (this.single != true) {\n        this.files = [];\n      }\n    }\n\n    // upload = true means upload file just after reading\n    onSelectFile(event, upload = false) {\n\n       if (event.target.files && event.target.files[0]) {\n         const total = event.target.files.length;\n         for (let index = 0; index < event.target.files.length; index++) {\n           this.loading = true;\n           const reader = new FileReader();\n           reader.onload = (e: any) => {\n             // console.log('single',this.single,' index',index);\n             if (this.single == true) {\n               this.image = e.target.result;\n               this.file = event.target.files[index];\n             } else {\n               const model: any = {};\n               model.image = e.target.result;\n               model.file = event.target.files[index];\n               this.files.push(model);\n               console.log(this.files);\n             }\n\n             this.loading = false;\n             // if(upload == true && index== (total-1)){\n             //   console.log('uploading');\n             //   this.upload();\n             // }\n             if (index == (event.target.files.length - 1) && upload == true) {\n                 this.upload().then(r => {\n                     this.loading = false;\n                 });\n             }\n           };\n           reader.readAsDataURL(event.target.files[index]);\n         }\n\n       }\n\n     }\n\n     getFile() {\n       return this.file;\n     }\n\n     getFiles() {\n       return this.files;\n     }\n\n     upload(): Promise<any> {\n       // console.log(this.single);\n       return new Promise((resolve, reject) => {\n               if (this.single == false) {\n                 const total = this.files.length; let i = 1;\n                 this.files.map((item) => {\n                   if (item.file) {\n                    console.log('1111', item.file, item.file.type);\n                    const formData = new FormData();\n                    formData.append('image', item.file);\n                    // console.log(item);\n                    this.us.postDataApi('saveImage', formData).subscribe(res => {\n                      // console.log(res);\n                      delete item.file;\n                      item.image = res['data'].image;\n                      if (i == total) {resolve(); }/* resolve on last loop */\n                      i++;\n                    }, error => {\n                      if (i === total) { reject(error); }/* reject on last loop */\n                      i++;\n                    });\n                   } else {\n                     if (i >= total) {console.log(this.files); resolve(); }\n                     i++;\n                   }\n                 });\n               }\n               if (this.single === true && this.file) {\n                console.log('22222', this.file);\n                 const formData = new FormData();\n                 formData.append('image', this.file);\n                 this.us.postDataApi('saveImage', formData).subscribe(res => {\n                   this.file = '';\n                   this.image = res['data'].image;\n                   resolve();\n                 },\n                 error => {\n                   reject(error);\n                 });\n               } else {\n                 resolve();\n               }\n        });\n  }\n\n  remove(index: any) {\n    this.files.splice(index, 1);\n  }\n\n  backup(files: any) {\n    this.backupArray = files;\n    this.files = files;\n  }\n\n  reset() {\n    this.files = JSON.parse(JSON.stringify(this.backup));\n  }\n\n}\n","export class ACL {\n    id: string;\n    name: string;\n    country_code: string;\n    dial_code: string;\n    phone: string;\n    image: string;\n    email: string;\n    admin_acl: Array<Permission> = [];\n    address: Array<NewAddress>;\n}\n\nexport class Permission {\n    show: boolean;\n    // name: string;\n    acl: {\n        name: string;\n    };\n    acl_id: number;\n    can_create: number;\n    can_read: number;\n    can_update: number;\n    can_delete: number;   // used for block/unblock\n    can_purge: number;  // used for delete\n    can_crud: number;\n}\n\nexport class NewAddress {\n    countries: string;\n    states: string;\n    cities: string;\n    localities: string;\n    buildings: string;\n}\n","export class CarpetAreas {\n    carpet_areas: Array<object> = [\n        {\n            area: 0,\n            price: 0\n        }\n    ];\n}\n\nexport class AddProjectModel {\n    id = '';\n    building_id = '';\n    name = '';\n    for_rent = false;\n    for_sale = true;\n    floors: any = '';\n    address = '';\n    avg_price = '';\n    cover_image: File;\n    images: any = [];\n    images360: any = [];\n    videos: any = [];\n    building_images: any = [];\n    description = '';\n    amenities = [];\n    lat: any = '';\n    lng: any = '';\n    custom_attributes = [];\n    custom_values = [];\n    configurations = [];\n    developer = {\n        id: '',\n        name: '',\n        email: '',\n        country_code: '',\n        dial_code: '',\n        phone: '',\n        logo: '',\n        image: '',\n        developer_image: ''\n    };\n    developer_id: any;\n    dev_countrycode: any = '';\n    dev_dialcode: any = '';\n    dev_email: any = '';\n    dev_phone: any = '';\n    dev_name: any = '';\n    dev_logo: any = '';\n\n    building_age = '';\n    building_type = '';\n    building_type_id: any = '';\n    possession_status_id: any = '';\n    launch_date: any = '';\n    main_image: any = '';\n    is_completed: any;\n    building_request_id: '';\n    building_towers: Array<Towers>;\n    building_tower_edit_index: any;\n    videoLoader: boolean;\n}\n\n\nexport class Configuration {\n    base_price: any = '';\n    building_id: any = '';\n    carpet_area: any = '';\n    config: any = {\n        created_at: '',\n        created_by: '',\n        id: '',\n        name: '',\n        name_en: '',\n        name_es: '',\n        status: '',\n        updated_at: ''\n    };\n    configuration_id: any = '';\n    created_at: any = '';\n    created_by: any = '';\n    floor_map_image: any = '';\n    id: any = '';\n    other_images: any = [];\n    images_files: any = [];\n    images_path: any = [];\n    images: any = [];\n    updated_at: any = '';\n    name: any = '';\n}\n\nexport class Towers {\n    id?: string;\n    building_id: string;\n    tower_name: string;\n    num_of_floors: number;\n    possession_status_id: string;\n    launch_date: string;\n    amenities: Array<AmenitiesShowObj>;\n    amenitiesId: Array<string>;\n    floor_array?: Array<number>;\n    // amenities: Array<any>;\n    // amenitiesId: Array<any>;\n}\n\nexport class AmenitiesShowObj {\n    id: string;\n    name_en: string;\n    name_es: string;\n    icon: string;\n    name: string;\n    selected: boolean;\n}\n","export class Users {\n    id: string;\n    name: string;\n    country_code: string;\n    dial_code: string;\n    phone: string;\n    image: any;\n    developer_image?: any;      // cover image of dev\n    email: string;\n    interested_in: string;\n    user_type: string;\n    address: string;\n    selected: any;\n    is_developer?: string;\n    developer_company?: string;\n    developer_desc?: string;\n    developer_address?: string;\n    lat?: any;\n    lng?: any;\n    branch_office?: string;\n    branch_lat?: any;\n    branch_lng?: any;\n    page?: number;\n    buildings_sort?: number;\n    images?: Array<any>;\n    videos?: Array<string>;\n}\n"],"sourceRoot":""}