{"version":3,"sources":["webpack:///./node_modules/@agm/core/directives.js","webpack:///./node_modules/@agm/core/index.js","webpack:///./node_modules/@agm/core/services.js","webpack:///./node_modules/@agm/core/services/maps-api-loader/noop-maps-api-loader.js","webpack:///./node_modules/ngx-bootstrap/modal/index.js","webpack:///./node_modules/ngx-bootstrap/modal/modal-backdrop.options.js","webpack:///./src/app/layout/settings/change-password/change-password.component.html","webpack:///./src/app/layout/settings/change-password/change-password.component.ts","webpack:///./src/app/layout/settings/default-settings/default-settings.component.html","webpack:///./src/app/layout/settings/default-settings/default-settings.component.ts","webpack:///./src/app/layout/settings/documents/documents.component.html","webpack:///./src/app/layout/settings/documents/documents.component.ts","webpack:///./src/app/layout/settings/edit-profile/edit-profile.component.html","webpack:///./src/app/layout/settings/edit-profile/edit-profile.component.ts","webpack:///./src/app/layout/settings/locality/locality.component.html","webpack:///./src/app/layout/settings/locality/locality.component.ts","webpack:///./src/app/layout/settings/location/location.component.html","webpack:///./src/app/layout/settings/location/location.component.ts","webpack:///./src/app/layout/settings/profile/profile.component.html","webpack:///./src/app/layout/settings/profile/profile.component.ts","webpack:///./src/app/layout/settings/project/project.component.html","webpack:///./src/app/layout/settings/project/project.component.ts","webpack:///./src/app/layout/settings/property/property.component.html","webpack:///./src/app/layout/settings/property/property.component.ts","webpack:///./src/app/layout/settings/settings.module.ts","webpack:///./src/app/models/document.model.ts","webpack:///./src/app/models/locality.model.ts","webpack:///./src/app/models/location.model.ts","webpack:///./src/app/models/project.model.ts","webpack:///./src/app/models/property.model.ts","webpack:///./src/app/models/settings.model.ts"],"names":[],"mappings":"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","file":"settings-settings-module-ngfactory.js","sourcesContent":["export { AgmMap } from './directives/map';\nexport { AgmCircle } from './directives/circle';\nexport { AgmRectangle } from './directives/rectangle';\nexport { AgmInfoWindow } from './directives/info-window';\nexport { AgmKmlLayer } from './directives/kml-layer';\nexport { AgmDataLayer } from './directives/data-layer';\nexport { AgmMarker } from './directives/marker';\nexport { AgmPolygon } from './directives/polygon';\nexport { AgmPolyline } from './directives/polyline';\nexport { AgmPolylinePoint } from './directives/polyline-point';\nexport { AgmFitBounds } from './directives/fit-bounds';\n//# sourceMappingURL=directives.js.map","export * from './directives';\nexport * from './services';\nexport { AgmCoreModule } from './core.module';\n//# sourceMappingURL=index.js.map","export { GoogleMapsAPIWrapper } from './services/google-maps-api-wrapper';\nexport { CircleManager } from './services/managers/circle-manager';\nexport { RectangleManager } from './services/managers/rectangle-manager';\nexport { InfoWindowManager } from './services/managers/info-window-manager';\nexport { MarkerManager } from './services/managers/marker-manager';\nexport { PolygonManager } from './services/managers/polygon-manager';\nexport { PolylineManager } from './services/managers/polyline-manager';\nexport { KmlLayerManager } from './services/managers/kml-layer-manager';\nexport { DataLayerManager } from './services/managers/data-layer-manager';\nexport { GoogleMapsScriptProtocol, LAZY_MAPS_API_CONFIG, LazyMapsAPILoader } from './services/maps-api-loader/lazy-maps-api-loader';\nexport { MapsAPILoader } from './services/maps-api-loader/maps-api-loader';\nexport { NoOpMapsAPILoader } from './services/maps-api-loader/noop-maps-api-loader';\nexport { FitBoundsAccessor } from './services/fit-bounds';\n//# sourceMappingURL=services.js.map","/**\n * When using the NoOpMapsAPILoader, the Google Maps API must be added to the page via a `<script>`\n * Tag.\n * It's important that the Google Maps API script gets loaded first on the page.\n */\nvar /**\n * When using the NoOpMapsAPILoader, the Google Maps API must be added to the page via a `<script>`\n * Tag.\n * It's important that the Google Maps API script gets loaded first on the page.\n */\nNoOpMapsAPILoader = /** @class */ (function () {\n    function NoOpMapsAPILoader() {\n    }\n    NoOpMapsAPILoader.prototype.load = function () {\n        if (!window.google || !window.google.maps) {\n            throw new Error('Google Maps API not loaded on page. Make sure window.google.maps is available!');\n        }\n        return Promise.resolve();\n    };\n    return NoOpMapsAPILoader;\n}());\n/**\n * When using the NoOpMapsAPILoader, the Google Maps API must be added to the page via a `<script>`\n * Tag.\n * It's important that the Google Maps API script gets loaded first on the page.\n */\nexport { NoOpMapsAPILoader };\n//# sourceMappingURL=noop-maps-api-loader.js.map","export { BsModalRef } from './bs-modal-ref.service';\nexport { ModalBackdropOptions } from './modal-backdrop.options';\nexport { ModalContainerComponent } from './modal-container.component';\nexport { ModalBackdropComponent } from './modal-backdrop.component';\nexport { ModalOptions } from './modal-options.class';\nexport { ModalDirective } from './modal.directive';\nexport { ModalModule } from './modal.module';\nexport { BsModalService } from './bs-modal.service';\n//# sourceMappingURL=index.js.map","var ModalBackdropOptions = (function () {\n    function ModalBackdropOptions(options) {\n        this.animate = true;\n        Object.assign(this, options);\n    }\n    return ModalBackdropOptions;\n}());\nexport { ModalBackdropOptions };\n//# sourceMappingURL=modal-backdrop.options.js.map","\n<ngx-loading [show]=\"parameter.loading\"></ngx-loading>\n<!--content start-->\n<div class=\"container-fluid\">\n    <div class=\"breadcrumb-group\">\n    <h5>Settings</h5>\n    <nav class=\"breadcrumb\">\n        <a class=\"breadcrumb-item\">Home</a>\n        <a class=\"breadcrumb-item\">Settings</a>\n        <span class=\"breadcrumb-item active\">Edit Profile</span>\n    </nav>\n    </div>\n\n    <form class=\"form-horizontal\" novalidate #addForm=\"ngForm\" (ngSubmit)=\"changePassword(addForm)\">\n        \n        <div class=\"form-group-3 row\">\n            <label class=\"col-sm-3 col-form-label\">New Password:</label>\n\n            <div class=\"col-sm-9\">\n                <input autocomplete=\"off\" type=\"password\" class=\"form-control\" placeholder=\"New Password\" minlength=\"6\" id=\"password\" required [(ngModel)]=\"model.password\" name=\"password\" #password=\"ngModel\">\n<!-- \n                <div *ngIf=\"password.errors && (password.dirty || password.touched)\" class=\"show-error\">\n                    <div [hidden]=\"!password.errors.required\">\n                        Old Password is required!\n                    </div>\n                    <div [hidden]=\"!password.errors.minlength\">\n                        Old Password's length must be at least {{6-model.password.length}}.\n                    </div>\n                </div> -->\n            </div>\n        </div>\n\n        <div class=\"form-group-3 row\">\n            <label class=\"col-sm-3 col-form-label\">Confirm Password:</label>\n            <div class=\"col-sm-9\">\n                <input type=\"password\" class=\"form-control\" placeholder=\"Confirm Password\" minlength=\"6\" id=\"c_password\" required [(ngModel)]=\"model.c_password\" name=\"c_password\" #c_password=\"ngModel\">\n\n                <!-- <div *ngIf=\"c_password.errors && (c_password.dirty || c_password.touched)\" class=\"show-error\">\n                    <div [hidden]=\"!c_password.errors.required\">\n                        New Password is required!\n                    </div>\n                    <div [hidden]=\"!c_password.errors.minlength\">\n                        New Password's length must be at least {{6-model.c_password.length}}.\n                    </div>\n                </div> -->\n            </div>\n        </div>\n        <div class=\"form-group btn-cont text-right\">\n            <button [disabled]=\"parameter.loading\" class=\"btn btn-primary apply-btn\" type=\"submit\">Update Settings</button>\n        </div>\n    </form>\n</div>\n      ","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AdminService } from '../../../services/admin.service';\n// import { SweetAlertService } from 'ngx-sweetalert2';\nimport { IProperty } from '../../../common/property';\nimport { NgForm } from '@angular/forms';\ndeclare let swal: any;\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.css']\n})\n\nexport class ChangePasswordComponent implements OnInit {\n\n  public parameter: IProperty = {};\n\n  model = {\n    password: '',\n    c_password: ''\n  };\n\n  constructor(private router: Router, private admin: AdminService) { }\n\n  ngOnInit() {}\n\n  changePassword(formData: NgForm) {\n    this.parameter.loading = true;\n    this.admin.postDataApi('changePassword', this.model)\n      .subscribe(\n        success => {\n          this.parameter.loading = false;\n          swal('Success', 'Password is changed successfully!', 'success');\n          localStorage.removeItem('token');\n          this.router.navigate(['']);\n        },\n        error => {\n          this.parameter.loading = false;\n        });\n  }\n}\n","\n<ngx-loading [show]=\"parameter.loading\"></ngx-loading>\n<!--content start-->\n<div class=\"container-fluid\">\n    <div class=\"breadcrumb-group\">\n    <h5>Settings</h5>\n    <nav class=\"breadcrumb\">\n        <a class=\"breadcrumb-item\">Home</a>\n        <a class=\"breadcrumb-item\">Settings</a>\n        <span class=\"breadcrumb-item active\">Default Settings</span>\n    </nav>\n    </div>\n\n    <form class=\"form-horizontal\" novalidate #addForm=\"ngForm\" (ngSubmit)=\"updateGlobalSetting()\">\n        \n        <div class=\"form-group-3 row\">\n            <label class=\"col-sm-6 col-form-label\">By default, added property will be marked approved:</label>\n            <div class=\"col-sm-6\">\n                <div class=\"clearfix\"></div>\n                <label class=\"cust-radio\">\n                  <input type=\"radio\" (change)=\"setValue('bulk_approve_property', 1)\" value=\"1\" [checked]=\"model.bulk_approve_property == 1 ? 'checked' : ''\" name=\"bulk_approve_property\">\n                  <span class=\"checkmark\">Yes</span>\n                </label>\n                <label class=\"cust-radio\">\n                  <input type=\"radio\" (change)=\"setValue('bulk_approve_property', 0)\" value=\"0\" [checked]=\"model.bulk_approve_property == 0 ? 'checked' : ''\" name=\"bulk_approve_property\">\n                  <span class=\"checkmark\">No</span>\n                </label>\n                <div class=\"clearfix\"></div>\n            </div>\n        </div>\n\n        <div class=\"form-group-3 row\">\n            <label class=\"col-sm-6 col-form-label\">By default, added project will be marked approved:</label>\n            <div class=\"col-sm-6\">\n                <div class=\"clearfix\"></div>\n                <label class=\"cust-radio\">\n                  <input type=\"radio\" (change)=\"setValue('bulk_approve_project', 1)\" value=\"1\" [checked]=\"model.bulk_approve_project == 1 ? 'checked' : ''\" name=\"bulk_approve_project\">\n                  <span class=\"checkmark\">Yes</span>\n                </label>\n                <label class=\"cust-radio\">\n                  <input type=\"radio\" (change)=\"setValue('bulk_approve_project', 0)\" value=\"0\" [checked]=\"model.bulk_approve_project == 0 ? 'checked' : ''\" name=\"bulk_approve_project\">\n                  <span class=\"checkmark\">No</span>\n                </label>\n                <div class=\"clearfix\"></div>\n            </div>\n        </div>\n        <div class=\"form-group btn-cont text-right\">\n            <button [disabled]=\"parameter.loading\" class=\"btn btn-primary apply-btn\" type=\"submit\">Update Settings</button>\n        </div>\n    </form>\n</div>\n      ","import { Component, OnInit } from '@angular/core';\nimport { AdminService } from '../../../services/admin.service';\nimport { IProperty } from '../../../common/property';\nimport { Settings } from '../../../models/settings.model';\ndeclare let swal: any;\n\n@Component({\n  selector: 'app-default-settings',\n  templateUrl: './default-settings.component.html',\n  styleUrls: ['./default-settings.component.css'],\n  providers: [Settings]\n})\nexport class DefaultSettingsComponent implements OnInit {\n\n  public parameter: IProperty = {};\n\n  constructor(private admin: AdminService, public model: Settings) { }\n\n  ngOnInit() {\n    this.getGlobalSetting();\n  }\n\n  setValue(key, value) {\n    this.model[key] = value;\n  }\n\n  getGlobalSetting () {\n    this.admin.postDataApi('getGlobalSetting', {})\n      .subscribe(\n        success => {\n          this.parameter.loading = false;\n          this.model = success.data;\n        },\n        error => {\n          this.parameter.loading = false;\n        });\n  }\n\n  updateGlobalSetting() {\n    this.parameter.loading = true;\n    this.admin.postDataApi('updateGlobalSetting', this.model)\n      .subscribe(\n        success => {\n          this.parameter.loading = false;\n          swal('Success', 'Details updated successfully!', 'success');\n        },\n        error => {\n          this.parameter.loading = false;\n        });\n  }\n}\n","<ngx-loading [show]=\"parameter.loading\"></ngx-loading>\n<div class=\"container-fluid\">\n    <div class=\"breadcrumb-group\">\n        <h5>Settings</h5>\n        <nav class=\"breadcrumb\">\n            <a class=\"breadcrumb-item\">Home</a>\n            <!-- <a class=\"breadcrumb-item\" routerLink=\"/dashboard\">Home</a> -->\n          <a class=\"breadcrumb-item\">Settings</a>\n          <span class=\"breadcrumb-item active\">Documents Listing</span>\n        </nav>\n    </div>\n    <div class=\"white-bg\">\n        <div class=\"page-title\">\n          <h3>Documents</h3>\n        </div>\n  \n        <div class=\"form-outer\">\n            <div class=\"inline-form-group\">\n               <div class=\"row\">\n                  <div class=\"col-md-4\">\n                      <label><strong>Document Name</strong></label>\n                  </div>\n                  <div class=\"col-md-8\" *ngIf=\"admin?.admin_acl['Settings']?.can_create==1\">\n                     <form role=\"form\" novalidate #addForm1=\"ngForm\" (ngSubmit)=\"checkIfSpanishNameEntered(addForm1, '', addForm1.value.name_en, addForm1.value.name_es, 1, 'add');\">\n                        <div class=\"row\">\n                          <div class=\"col-lg-6 col-md-6\">\n                            <input type=\"text\" class=\"form-control\" placeholder=\"Name (English)\" id=\"name_en\" required [(ngModel)]=\"model.name_en\" name=\"name_en\">\n                          </div>\n                          <div class=\"col-lg-6 col-md-6\">\n                              <input type=\"text\" class=\"form-control\" placeholder=\"Name (Spanish)\" [(ngModel)]=\"model.name_es\" name=\"name_es\">\n                          </div>\n                        </div>\n                      <button [disabled]=\"admin?.admin_acl['Settings']?.can_create==0 || addForm1.invalid\" type=\"submit\" class=\"add-btn btn\">\n                         <img src=\"./../../../../assets/img/add.png\" alt=\"img\">\n                       </button>\n                     </form>\n                  </div>\n               </div>\n            </div>\n        </div>\n  \n        <div class=\"tabel-section padding40 paddingT0\">\n            <div class=\"table-responsive\">\n              <table class=\"table table-striped\">\n                  <tr>\n                    <th style=\"width:40%; text-align:left;\">Name (English)</th>\n                    <th style=\"width:40%; text-align:left;\">Name (Spanish)</th>\n                    <!-- <th style=\"width:20%\">Action</th> -->\n                  </tr>\n                  <tr *ngFor=\"let item of parameter.items\">\n                    <td class=\"text-left\">\n                      {{item.name_en}}\n                    </td>\n                    <td class=\"text-left\">\n                      {{item.name_es}}\n                    </td>\n                  </tr>\n  \n                  <div *ngIf=\"parameter.total == 0\">\n                    <p class=\"show-not-found\">\n                      {{constant.errorMsg.NO_POSSESSION_FOUND}}\n                    </p>\n                  </div>\n              </table>\n            </div>\n        </div>\n  \n    </div>\n  </div>\n  ","import { Component, OnInit, TemplateRef, ElementRef } from '@angular/core';\nimport { AdminService } from '../../../services/admin.service';\nimport { IProperty } from '../../../common/property';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { Constant } from './../../../common/constants';\nimport { Document } from './../../../models/document.model';\nimport { NgForm } from '@angular/forms';\ndeclare let swal: any;\n\n\n@Component({\n  selector: 'app-documents',\n  templateUrl: './documents.component.html',\n  styleUrls: ['./documents.component.css'],\n  providers: [Constant, Document]\n})\nexport class DocumentsComponent implements OnInit {\n\n\n  public parameter: IProperty = {};\n  public modalRef: BsModalRef;\n  icon: any;\n\n  constructor(\n    public constant: Constant,\n    private modalService: BsModalService,\n    public admin: AdminService,\n    public model: Document\n  ) {\n  }\n\n  ngOnInit() {\n    this.getDocumentOptions();\n  }\n\n  closeModal() {\n    // this.amenityModel = new Amenities;\n    this.modalRef.hide();\n  }\n\n  // public openPossessionStatusModal(template: TemplateRef<any>, id, name_en, name_es, status) {\n  //   this.project.possession.id = id;\n  //   this.project.possession.name_en = name_en;\n  //   this.project.possession.name_es = name_es == null ? name_en : name_es;\n  //   this.project.possession.status = status;\n  //   this.modalRef = this.modalService.show(template);\n  // }\n\n\n  addDocumentOptions(id, name_en, name_es, status, type) {\n\n    if (type !== 'add') {this.modalRef.hide(); }\n\n    // this.parameter.loading = true;\n    this.parameter.url = 'addDocumentOptions';\n\n    const input = new FormData();\n    input.append('name_en', name_en);\n    input.append('name_es', name_es);\n    input.append('status', status);\n\n    if (id) {input.append('id', id); }\n\n    this.admin.postDataApi(this.parameter.url, input)\n      .subscribe(\n        success => {\n          this.model = new Document();\n          // console.log('addDocumentOptions', success);\n          const text = id ?\n          this.constant.successMsg.DOCUMENT_NAME_UPDATED_SUCCESSFULLY :\n          this.constant.successMsg.DOCUMENT_NAME_ADDED_SUCCESSFULLY;\n          swal('Success', text, 'success');\n          this.parameter.items.push(success.data);\n        }\n      );\n  }\n\n\n  getDocumentOptions() {\n    this.parameter.url = 'getDocumentOptions';\n    this.parameter.loading = true;\n    this.admin.postDataApi(this.parameter.url, {})\n      .subscribe(\n        success => {\n          this.parameter.loading = false;\n          // console.log('getDocumentOptions', success);\n          this.parameter.items = success.data;\n          this.parameter.total = success.data.length;\n        }, error => {\n          this.parameter.loading = false;\n        }\n      );\n  }\n\n\n\n  addPossessionStatusPopup(id, name_en, name_es, status, type) {\n    const text = status === 1 ? this.constant.title.UNBLOCK_PROJECT_POSSESSION : this.constant.title.BLOCK_PROJECT_POSSESSION;\n    swal({\n      // title: this.constant.title.ARE_YOU_SURE,\n      // text: status === 1 ? this.constant.title.UNBLOCK_PROJECT_POSSESSION : this.constant.title.BLOCK_PROJECT_POSSESSION,\n      html: this.constant.title.ARE_YOU_SURE + '<br>' + text,\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: this.constant.confirmButtonColor,\n      cancelButtonColor: this.constant.cancelButtonColor,\n      confirmButtonText: 'Yes'\n    }).then((result) => {\n      if (result.value) {\n        this.addDocumentOptions(id, name_en, name_es, status, type);\n      }\n    });\n  }\n\n\n  checkIfSpanishNameEntered(formdata: NgForm, id, name_en, name_es, status, type) {\n    // console.log('id, name_en, name_es, status, type', id, name_en, name_es, status, type);\n    formdata.reset();\n    const self = this;\n    if (name_es === undefined) {\n      swal({\n        text: this.constant.errorMsg.SAVE_ENGLISH_DOCUMENT_NAME,\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: this.constant.confirmButtonColor,\n        cancelButtonColor: this.constant.cancelButtonColor,\n        confirmButtonText: 'Yes'\n      }).then((result) => {\n        if (result.value) {\n          this.addDocumentOptions(id, name_en, name_en, status, type);\n        }\n      });\n    }else {\n      self.addDocumentOptions(id, name_en, name_es, status, type);\n    }\n  }\n}\n","<ngx-loading [show]=\"parameter.loading\"></ngx-loading>\n<!--content start-->\n<div class=\"container-fluid\">\n    <div class=\"breadcrumb-group\">\n      <h5>Settings</h5>\n      <nav class=\"breadcrumb\">\n          <a class=\"breadcrumb-item\">Home</a>\n          <!-- <a class=\"breadcrumb-item\" routerLink=\"/dashboard\">Home</a> -->\n          <a class=\"breadcrumb-item\">Settings</a>\n          <span class=\"breadcrumb-item active\">Edit Profile</span>\n      </nav>\n    </div>\n\n    <form class=\"form-horizontal\" novalidate #addForm=\"ngForm\" (ngSubmit)=\"updateProfile(addForm)\">\n        \n        <div class=\"form-group row\">\n            <label class=\"col-sm-2 col-form-label\">Image:</label>\n            <div class=\"col-sm-10\">\n                <input required accept=\"image/*\" class=\"image\" (change)=\"changeListner($event)\" type=\"file\">\n            </div>\n          </div>\n            <div class=\"form-group row\">\n              <label class=\"col-sm-2 col-form-label\">Name:</label>\n              <div class=\"col-sm-10\">\n  \n                  <input type=\"text\" class=\"form-control\" placeholder=\"Name\" id=\"name\" required minlength=\"1\" [(ngModel)]=\"model.name\" name=\"name\" #name=\"ngModel\">\n  \n                  <div *ngIf=\"name.errors && (name.dirty || name.touched)\" class=\"show-error\">\n                      <div [hidden]=\"!name.errors.required\">\n                          Name is required!\n                      </div>\n                      <div [hidden]=\"!name.errors.min\">\n                          Name must be at least 1.\n                      </div>\n                  </div>\n  \n              </div>\n            </div>\n              \n            <div class=\"form-group row\">\n              <label class=\"col-sm-2 col-form-label\">Contact Number:</label>\n              <div class=\"col-sm-10\">\n                <input type=\"text\" class=\"form-control\"\n                id=\"phone\" required minlength=\"1\" [(ngModel)]=\"model.phone\" \n                name=\"phone\" #phone=\"ngModel\"\nng2TelInput\n[ng2TelInputOptions]=\"initialCountry\"\n(countryChange)=\"onCountryChange($event)\" />\n\n\n                <div *ngIf=\"phone.errors && (phone.dirty || phone.touched)\" class=\"show-error\">\n                    <div [hidden]=\"!phone.errors.required\">\n                      Contact Phone Number is required!\n                    </div>\n                    <div [hidden]=\"!phone.errors.min\">\n                      Contact Phone Number must be at least 1.\n                    </div>\n                </div>\n              </div>\n            </div>\n\n            <div class=\"form-group btn-cont text-right\">\n              <button [disabled]=\"parameter.loading\" class=\"btn btn-primary apply-btn\" type=\"submit\">Update Settings</button>\n            </div>\n      </form>\n</div>\n","import { Component, OnInit, ElementRef } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AdminService } from '../../../services/admin.service';\n// import { SweetAlertService } from 'ngx-sweetalert2';\nimport { IProperty } from '../../../common/property';\nimport { NgForm } from '@angular/forms';\ndeclare let swal: any;\n\n@Component({\n  selector: 'app-edit-profile',\n  templateUrl: './edit-profile.component.html',\n  styleUrls: ['./edit-profile.component.css']\n})\nexport class EditProfileComponent implements OnInit {\n\n  public parameter: IProperty = {};\n  initialCountry: any;\n  model = {\n    name: '',\n    phone: '',\n    image: ''\n  };\n\n  constructor(private element: ElementRef, private admin: AdminService) { }\n\n  ngOnInit() {}\n\n  onCountryChange(e) {\n    this.parameter.countryCode = e.iso2;\n    this.parameter.dialCode = e.dialCode;\n    this.initialCountry = {initialCountry: e.iso2};\n  }\n\n  changeListner(event) {\n    const reader = new FileReader();\n\n    const image = this.element.nativeElement.querySelector('.image');\n\n    this.parameter.image = event.target.files[0];\n    this.parameter.icon = this.parameter.image;\n\n    reader.onload = function(e) {\n      const src = e.target['result'];\n        image.src = src;\n    };\n\n    reader.readAsDataURL(event.target.files[0]);\n  }\n\n  updateProfile(formData: NgForm) {\n    this.parameter.url = 'updateProfile';\n\n    const input = new FormData();\n    input.append('name', formData.value.name);\n    input.append('phone', formData.value.phone);\n    // input.append(\"country_code\", this.parameter.countryCode);\n    input.append('image', this.parameter.image);\n    this.parameter.loading = true;\n    this.admin.postDataApi(this.parameter.url, input)\n      .subscribe(\n        success => {\n          this.parameter.loading = false;\n          this.admin.login.next(success.data);\n          swal('Success', success.message, 'success');\n        }, error => {\n          this.parameter.loading = false;\n        }\n      );\n  }\n}\n","<ngx-loading [show]=\"parameter.loading\"></ngx-loading>\n<!--content start-->\n<div class=\"container-fluid\">\n  <div class=\"breadcrumb-group\">\n    <h5>Settings</h5>\n    <nav class=\"breadcrumb\">\n        <a class=\"breadcrumb-item\">Home</a>\n        <!-- <a class=\"breadcrumb-item\" routerLink=\"/dashboard\">Home</a> -->\n        <a class=\"breadcrumb-item\">Settings</a>\n        <span class=\"breadcrumb-item active\">Locality</span>\n    </nav>\n  </div>\n    \n  <div class=\"white-bg\">\n    <div class=\"page-title\">\n        <h3>Locality</h3>\n    </div>\n\n    <!-- add city -->\n    <div class=\"form-outer marginT15\">\n      <div class=\"inline-form-group\">\n        <div class=\"row\">\n          <div class=\"col-md-12\">\n            <label><strong>Add Locality</strong></label>\n            <hr>\n          </div>\n          <div class=\"col-lg-3 col-md-3 col-sm-6 col-6\">\n            <div class=\"form-group marginB0\">\n              <label>Country</label>\n              <select title=\"Choose Country\" class=\"form-control\" (change)=\"getStates($event.target.value, '')\">\n                <option value=\"\" disabled>Select Country</option>\n                <option *ngFor=\"let country of parameter.countries\" value=\"{{country.id}}\" [selected]=\"country.id == parameter.country_id\">{{country.name_en}}</option>\n              </select>\n            </div>\n          </div>\n          <div class=\"col-lg-3 col-md-3 col-sm-6 col-6\">\n            <div class=\"form-group marginB0\">\n              <label>State</label>\n              <select title=\"Choose State\" class=\"form-control\" (change)=\"getCities($event.target.value, '')\">\n                <option value=\"\" disabled>Select State</option>\n                <option *ngFor=\"let state of parameter.states\" value=\"{{state.id}}\" [selected]=\"state.id == parameter.state_id\">{{state.name_en}}</option>\n              </select>\n            </div>\n          </div>\n          <div class=\"col-lg-3 col-md-3 col-sm-6 col-6\">\n            <div class=\"form-group marginB0\">\n              <label>City</label>\n              <select title=\"Choose City\" class=\"form-control\" (change)=\"getLocalities($event.target.value)\">\n                <option value=\"\" disabled>Select City</option>\n                <option *ngFor=\"let city of parameter.cities\" value=\"{{city.id}}\" [selected]=\"city.id == parameter.city_id\">{{city.name_en}}</option>\n              </select>\n            </div>\n          </div>\n          <!-- <div class=\"col-lg-3 col-md-3 col-sm-6 col-6\">\n            <div class=\"form-group marginB0\">\n              <label>Search Locality</label>\n              <input autocomplete=\"off\" required placeholder=\"Search Locality\" autocorrect=\"off\" autocapitalize=\"off\"\n                spellcheck=\"off\" type=\"text\" class=\"form-control\" style=\"padding: 8px 25px 8px 15px;\n                height: 40px !important;\" #searchLocality (input)=\"loadPlaces()\">\n            </div>\n          </div> -->\n        </div>\n      </div>\n  </div>\n  <hr>\n  \n  <div class=\"form-outer marginT15 padding40\">\n    <div class=\"row\">\n      <div class=\"col-md-4\">\n        <table class=\"table table-striped\">\n          <tr>\n            <th style=\"width:80%; text-align:left;\">\n                <div class=\"searh-3\">\n                    <input autocomplete=\"off\" type=\"text\" style=\"height:28px; font-size: 14px;\" (keyup.enter)=\"getLocalities(parameter.city_id, $event.target.value)\" name=\"\" placeholder=\"Search here\">\n                    <button (click)=\"getLocalities(parameter.city_id, $event.target.value)\"><i class=\"fa fa-search\"></i></button>\n                </div>\n                <!-- <div class=\"table-search\">\n                <input autocomplete=\"off\" type=\"text\" style=\"height:32px;\" (input)=\"getLocalities(parameter.city_id, $event.target.value)\" name=\"\" placeholder=\"Search here\">\n                </div> -->\n            </th>\n            <th style=\"width:20%\">Action</th>\n          </tr>\n          <tr *ngFor=\"let locality of all_overlays; let index = index\" (click)=\"markLocalityFeatured(index, locality.id, locality.is_featured==1?0:1)\" title=\"{{locality.is_featured==1?'Click to unfeature.':'Click to feature.'}}\">\n            <td class=\"text-left locality-name\" [ngClass]=\"locality.id == selectedLocality ? 'selectedRow' : ''\" (click)=\"setSelection(locality.overlay, locality.id)\">\n              {{locality.name_en}}\n            </td>\n            <!-- <td>\n              <a (click)=\"upadteSelection(locality, index)\" title=\"Unblock State\" class=\"icon-block block-icon\"><img src=\"./../../../../assets/img/top-arrow.png\" alt=\"img\"></a>\n            </td> -->\n            <td [ngClass]=\"locality.id == selectedLocality ? 'selectedRow' : ''\">\n              <a *ngIf=\"locality.status == 0\" (click)=\"blockUnblockLocality(locality, index, 1)\" title=\"Unblock Locality\" class=\"icon-block block-icon unblock-bg\"><img src=\"./../../../../assets/img/block.png\" alt=\"img\"></a>\n              <a *ngIf=\"locality.status == 1\" (click)=\"blockUnblockLocality(locality, index, 0)\" title=\"Block Locality\" class=\"icon-block block-icon\"><img src=\"./../../../../assets/img/unblock.png\" alt=\"img\"></a>\n            </td>\n          </tr>\n        </table>\n\n        <div class=\"error-border\" [ngSwitch]=\"true\">\n          <p class=\"show-not-found\" *ngSwitchCase=\"parameter.states?.length == 0\">{{constant.errorMsg.NO_STATE_FOUND}}</p>\n          <p class=\"show-not-found\" *ngSwitchCase=\"parameter.states?.length != 0 && parameter.cities?.length == 0\">{{constant.errorMsg.NO_CITY_FOUND}}</p>\n          <p class=\"show-not-found\" *ngSwitchCase=\"parameter.states?.length != 0 && parameter.cities?.length != 0 && all_overlays?.length == 0\">{{constant.errorMsg.NO_LOCALITY_FOUND}}</p>\n        </div>\n\n        <!-- <div class=\"error-border\" *ngIf=\"parameter.states?.length == 0; else localityNotFound\">\n          <p class=\"show-not-found\">{{constant.errorMsg.NO_STATE_FOUND}}</p>\n        </div>\n        <ng-template #localityNotFound>\n          <div class=\"error-border\" *ngIf=\"parameter.cities?.length == 0\">\n            <p class=\"show-not-found\">{{constant.errorMsg.NO_LOCALITY_FOUND}}</p>\n          </div>\n          <ng-container *ngIf=\"bar === 99; else elseif2\">bar === 99</ng-container>\n        </ng-template> -->\n        <!-- <div class=\"error-border\" *ngIf=\"all_overlays?.length == 0\">\n          <p class=\"show-not-found\">{{constant.errorMsg.NO_LOCALITY_FOUND}}</p>\n        </div> -->\n\n\n      </div>\n\n      <!-- google map -->\n      <div class=\"col-md-8\">\n\n        <!-- add city -->\n        <div class=\"form-outer marginB10\">\n            <!-- <div class=\"inline-form-group\"> -->\n              <div class=\"row\">\n                <div class=\"offset-lg-3\"></div>\n                <div class=\"col-lg-3 col-md-6 col-sm-6 col-6\">\n                  <div class=\"form-group marginB0\"></div>\n                </div>\n                <div class=\"col-lg-6 col-md-6 col-sm-6 col-6\">\n                  <div class=\"form-group marginB0\">\n                    <!-- <label>Search Locality</label> -->\n                    <input autocomplete=\"off\" required placeholder=\"Search area you want to mark.\" autocorrect=\"off\" autocapitalize=\"off\"\n                      spellcheck=\"off\" type=\"text\" class=\"form-control\" style=\"padding: 8px 25px 8px 15px;\n                      height: 40px !important;\" #searchLocality (input)=\"loadPlaces()\">\n                  </div>\n                </div>\n              </div>\n            <!-- </div> -->\n        </div>\n        <div id=\"mapDiv\" style=\"height: 500px; width: 100%;\" #mapDiv></div>\n      </div>\n\n    </div>\n  </div>\n\n  </div>\n</div>\n<!--content end-->\n\n\n<!-- Trigger the modal with a button -->\n<button type=\"button\" style=\"display: none;\" class=\"btn btn-info\" data-toggle=\"modal\" data-target=\"#myModal\" #localityOpen>Open Modal</button>\n\n<!-- Modal -->\n<div id=\"myModal\" class=\"modal fade\" role=\"dialog\">\n  <div class=\"modal-dialog\">\n\n    <!-- Modal content-->\n    <div class=\"modal-content\">\n      <div class=\"modal-header my-modal-header\">\n        <button type=\"button\" class=\"close\" (click)=\"closeModal()\">&times;</button>\n        <h4 class=\"modal-title\">Add Locality Details</h4>\n      </div>\n      <form class=\"form-horizontal form-model0P\" role=\"form\" novalidate #addForm=\"ngForm\" (ngSubmit)=\"checkIfLocalitySpanishNameEntered(addForm.value.name_en, addForm.value.name_es, addForm.value.price_per_sqft)\">\n        <div class=\"modal-body model-body10P\">\n          <div class=\"form-group\">\n            <input autocomplete=\"off\" type=\"text\" class=\"form-control\" placeholder=\"Locality name (English)\" id=\"name_en\" required [(ngModel)]=\"model.name_en\" name=\"name_en\" #name_en=\"ngModel\">\n            <!-- <div *ngIf=\"name_en.errors && (name_en.dirty || name_en.touched)\" class=\"show-not-found\">\n                <div [hidden]=\"!name_en.errors.required\">\n                  {{constant.errorMsg.COUNTRY_NAME_REQUIRED}}\n                </div>\n            </div> -->\n          </div>\n          <div class=\"form-group\">\n            <input autocomplete=\"off\" type=\"text\" name=\"name_es\" class=\"form-control\" placeholder=\"Locality name (Spanish)\" [(ngModel)]=\"model.name_es\">\n          </div>\n\n          <div class=\"form-group\">\n            <input autocomplete=\"off\" type=\"text\" class=\"form-control\" min=\"1\" placeholder=\"Price per sqft\" id=\"price_per_sqft\" required [(ngModel)]=\"model.price_per_sqft\" name=\"price_per_sqft\" #price_per_sqft=\"ngModel\">\n            <!-- <div *ngIf=\"price_per_sqft.errors && (price_per_sqft.dirty || price_per_sqft.touched)\" class=\"show-not-found\">\n                <div [hidden]=\"!price_per_sqft.errors.required\">\n                  {{constant.errorMsg.PRICE_PER_SQFT_REQUIRED}}\n                </div>\n                <div [hidden]=\"!price_per_sqft.errors.min\">\n                  {{constant.errorMsg.PRICE_PER_SQFT_MIN}}\n                </div>\n            </div> -->\n          </div>\n\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"submit\" [disabled]=\"addForm.invalid\" class=\"btn btn-info\">Submit</button>\n          <button style=\"display:none;\" type=\"button\" class=\"btn btn-default\" #localityClose data-dismiss=\"modal\">Close</button>\n          <button type=\"button\" class=\"btn btn-default\" (click)=\"closeModal()\">Close</button>\n        </div>\n      </form>\n\n    </div>\n\n  </div>\n</div>","import { Component, OnInit, ViewChild, ElementRef, NgZone } from '@angular/core';\nimport { AdminService } from '../../../services/admin.service';\nimport { IProperty } from '../../../common/property';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { MapsAPILoader } from '@agm/core';\nimport { Constant } from './../../../common/constants';\nimport { Locality } from './../../../models/locality.model';\nimport { FormControl } from '@angular/forms';\nimport { Observable } from 'rxjs/Observable';\ndeclare let swal: any;\ndeclare const google;\n\n@Component({\n  selector: 'app-locality',\n  templateUrl: './locality.component.html',\n  styleUrls: ['./locality.component.css'],\n  providers: [Constant, Locality]\n})\n\nexport class LocalityComponent implements OnInit {\n\n  @ViewChild('searchLocality') searchElementRef: ElementRef;\n  @ViewChild('localityOpen') localityOpen: ElementRef;\n  @ViewChild('localityClose') localityClose: ElementRef;\n\n  public latitude: number;\n  public longitude: number;\n  public searchControl: FormControl;\n  public zoom: number;\n  public parameter: IProperty = {};\n  public modalRef: BsModalRef;\n  agm: any;\n  len: any;\n\n  map: any;\n  all_overlays = [];\n  selectedLocality: any;\n  selectedShape: any;\n  shapeName: any;\n\n  showModal = true;\n\n  @ViewChild('mapDiv') mapDiv: ElementRef;\n\n  constructor(\n    private loader: MapsAPILoader,\n    public admin: AdminService,\n    private ngZone: NgZone,\n    private constant: Constant,\n    public model: Locality\n  ) {}\n\n  ngOnInit() {\n    this.parameter.localities = [];\n    this.getCountries('');\n  }\n\n  getCountries(keyword) {\n\n    this.parameter.loading = true;\n    this.parameter.url = 'getCountries';\n    const input = new FormData();\n\n    if (keyword) {\n      input.append('keyword', keyword);\n    }\n\n    this.admin.postDataApi(this.parameter.url, input)\n      .subscribe(\n        success => {\n          this.parameter.loading = false;\n          this.parameter.countries = success.data;\n          if (this.parameter.countries.length !== 0) {\n            this.parameter.country_id = this.parameter.countries[0].id;\n            this.getStates(this.parameter.countries[0].id, '');\n          }\n        }, error => {\n          this.parameter.loading = false;\n        }\n      );\n  }\n\n  getStates(country_id, keyword) {\n    this.parameter.loading = true;\n    this.parameter.url = 'country/getStates';\n    this.parameter.country_id = country_id;\n\n    const input = new FormData();\n    input.append('country_id', country_id);\n\n    if (keyword) {\n      input.append('keyword', keyword);\n    }\n\n    this.admin.postDataApi(this.parameter.url, input)\n      .subscribe(\n        success => {\n          // console.log('states', success);\n          this.parameter.loading = false;\n          this.parameter.states = success.data;\n          if (this.parameter.states.length) {\n            this.parameter.state_id = this.parameter.states[0].id;\n            this.getCities(this.parameter.states[0].id, '');\n          }else {\n            this.parameter.city_id = '0';\n            this.parameter.localityCount = 0;\n            this.parameter.cities = [];\n            this.parameter.localities = [];\n            this.all_overlays = [];\n            this.init();\n          }\n        }, error => {\n          this.parameter.loading = false;\n        });\n  }\n\n  getCities(state_id, keyword) {\n    // console.log('mm', state_id, keyword);\n    this.parameter.loading = true;\n    this.parameter.url = 'getCities';\n    this.parameter.state_id = state_id;\n\n    const input = new FormData();\n    input.append('state_id', state_id);\n\n    if (keyword) {\n      input.append('keyword', keyword);\n    }\n\n    this.admin.postDataApi(this.parameter.url, input)\n      .subscribe(\n        success => {\n          // console.log('cities', success);\n          this.parameter.loading = false;\n          this.parameter.cities = success.data;\n          if (this.parameter.cities.length) {\n            this.parameter.city_id = this.parameter.cities[0].id;\n            // console.log('cityid', this.parameter.city_id);\n            this.getLatLan(this.parameter.cities[0].name_en);\n            this.getLocalities(this.parameter.city_id, '');\n          }else {\n            this.parameter.localityCount = 0;\n            this.parameter.cities = [];\n            this.parameter.localities = [];\n            this.all_overlays = [];\n            this.init();\n          }\n        }, error => {\n          this.parameter.loading = false;\n        });\n  }\n\n  getLatLngFromAddress() {\n    // https://maps.googleapis.com/maps/api/geocode/json?address=adress&key=YOUR_API_KEY\n  }\n\n\n  getLocalities(city_id, keyword= '') {\n    // console.log('mm', city_id, keyword);\n    this.parameter.loading = true;\n    this.parameter.url = 'getLocalities';\n    this.parameter.city_id = city_id;\n\n    const input = new FormData();\n    input.append('city_id', city_id);\n\n    if (keyword) {\n      input.append('keyword', keyword);\n    }\n\n    this.admin.postDataApi(this.parameter.url, input)\n      .subscribe(\n        success => {\n          // console.log('Localities', success);\n          this.parameter.loading = false;\n          this.parameter.localities = success.data;\n          this.all_overlays = this.parameter.localities;\n          this.parameter.localityCount = success.data.length;\n          if (this.parameter.localities.length) {\n            this.selectedLocality = this.parameter.localities[0].id;\n          }else {\n            this.all_overlays = [];\n          }\n          this.init();\n        }, error => {\n          this.parameter.loading = false;\n        });\n  }\n\n\n  init() {\n\n      // Wait for the google maps script to be loaded before using the \"google\" keyword\n      this.loader.load().then(() => {\n      if (navigator.geolocation) {\n      navigator.geolocation.getCurrentPosition(position => {\n          const map = new google.maps.Map(this.mapDiv.nativeElement, {\n              center: {\n                  lat: position.coords.latitude,\n                  lng: position.coords.longitude\n              },\n              zoom: 18\n          });\n          this.map = map;\n\n          let all_overlays_index = 0;\n          this.all_overlays.forEach(locality => {\n\n            const poly_coordinates = JSON.parse(locality.poly_coordinates);\n            // console.log(poly_coordinates);\n            const polygon = poly_coordinates.map(ll => {\n              // console.log(ll);\n              const latlng = ll.split(',');\n              const coord = new google.maps.LatLng(parseFloat(latlng[0]), parseFloat(latlng[1]));\n              // console.log(coord);\n              return coord;\n              }\n            );\n\n\n            // this.setSelection(polygon);\n            const singlePolygon = new google.maps.Polygon({\n              paths: polygon,\n              editable: false,\n              strokeColor: '#FF0000',\n              strokeOpacity: 0.8,\n              strokeWeight: 2,\n              fillColor: '#FF0000',\n              fillOpacity: 0.35\n            });\n            locality.overlay = singlePolygon;\n\n            // showing selected first locality\n            if (all_overlays_index === 0) {this.setSelection(singlePolygon, locality.id); }\n            all_overlays_index++;\n\n            // this.all_overlays.push(singlePolygon);\n            google.maps.event.addListener(singlePolygon, 'click', () => {\n              // console.log('click', singlePolygon, locality.id);\n              this.setSelection(singlePolygon, locality.id);\n            });\n\n            // google.maps.event.addListener(singlePolygon, 'mouseup', function(muEvent) {\n            //         console.log('33')\n            //   this.setSelection(singlePolygon);\n            // });\n\n            singlePolygon.setMap(map);\n\n          });\n\n\n          google.maps.event.addListener(map, 'click', event => {\n              // console.log(event);\n              this.placeMarker(event.latLng);\n              // console.log(event.latLng.toUrlValue(5));\n          });\n\n          const drawingManager = new google.maps.drawing.DrawingManager({\n\n              drawingControl: true,\n              drawingControlOptions: {\n                  position: google.maps.ControlPosition.TOP_CENTER,\n                  drawingModes: [\n                      // google.maps.drawing.OverlayType.MARKER,\n                      // google.maps.drawing.OverlayType.CIRCLE,\n                      google.maps.drawing.OverlayType.POLYGON,\n                      google.maps.drawing.OverlayType.RECTANGLE\n                  ]\n              },\n              polygonOptions: {\n                  clickable: true,\n                  draggable: true,\n                  editable: true,\n                  fillColor: '#00b96e',\n                  fillOpacity: 0.5,\n\n              },\n              rectangleOptions: {\n                  clickable: true,\n                  draggable: true,\n                  editable: true,\n                  fillColor: '#ffff00',\n                  fillOpacity: 0.5,\n              }\n          });\n\n\n          drawingManager.setMap(map);\n\n          google.maps.event.addListener(drawingManager, 'polygoncomplete', event => {\n\n              event.getPath().getLength();\n              google.maps.event.addListener(event.getPath(), 'insert_at', () => {\n                  const len = event.getPath().getLength();\n                  for (let i = 0; i < len; i++) {\n                      console.log(event.getPath().getAt(i).toUrlValue(5));\n                  }\n              });\n              google.maps.event.addListener(event.getPath(), 'set_at', () => {\n                  const len = event.getPath().getLength();\n                  for (let i = 0; i < len; i++) {\n                      console.log(event.getPath().getAt(i).toUrlValue(5));\n                  }\n              });\n          });\n\n          google.maps.event.addListener(drawingManager, 'overlaycomplete', event => {\n\n            this.parameter.overlay = this.getPolygonCoords(event.overlay);\n            this.localityOpen.nativeElement.click();\n\nconsole.log('xx', typeof this.getPolygonCoords(event.overlay));\n            // this.swal.prompt({\n            //   text:''\n            // }).then(f=>{\n\n            //   this.shapeName = f;\n\n            //   var locality = {\n            //     name_en: this.shapeName,\n            //     name_es: this.shapeName,\n            //     coordinates: this.getPolygonCoords(event.overlay),\n            //     poly_coordinates: JSON.stringify(this.getPolygonCoords(event.overlay)),\n            //     status:'1',\n            //     city_id:this.parameter.city_id,\n            //     overlay: event.overlay\n            //   };\n            //   //console.log(locality);\n            //   //this.all_overlays.push(locality);\n            //   //this.all_overlays = this.all_overlays;\n            //   //this.all_overlays.splice(0,2);\n            //   //this.len = this.all_overlays.length;\n            //   console.log(this.all_overlays);\n            //   delete locality.overlay;\n            //   //console.log(locality);\n\n            //   this.admin.postDataApi('addLocality', locality).subscribe(\n            //       r => {\n            //         console.log(r);\n            //         this.all_overlays.push(r.data);\n            //         //this.getLocalities(this.parameter.city_id,'');\n            //       });\n\n            // });\n            // this.all_overlays = this.all_overlays;\n\n\n\n              if (event.type !== google.maps.drawing.OverlayType.MARKER) {\n                  drawingManager.setDrawingMode(null);\n                  // Write code to select the newly selected object.\n\n                  const newShape = event.overlay;\n                  newShape.type = event.type;\n                  google.maps.event.addListener(newShape, 'click', () => {\n                      this.setSelection(newShape);\n                  });\n\n                  this.setSelection(newShape);\n\n              }\n          });\n\n\n          // var centerControlDiv = document.createElement('div');\n          //    var centerControl = new centerControl(centerControlDiv, map);\n          // var centerControl = this.CenterControl(centerControlDiv, map);\n\n          // centerControlDiv.index = 1;\n          // map.controls[google.maps.ControlPosition.BOTTOM_CENTER].push(centerControlDiv);\n      });\n      }\n      });\n  }\n\n\n  checkIfLocalitySpanishNameEntered(name_en, name_es, price_per_sqft) {\n    const self = this;\n    if (name_es === '') {\n      swal({\n        text: this.constant.errorMsg.SAVE_ENGLISH_COUNTRY_NAME,\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: this.constant.confirmButtonColor,\n        cancelButtonColor: this.constant.cancelButtonColor,\n        confirmButtonText: 'Yes'\n      }).then((result) => {\n        if (result.value) {\n          this.addLocality(name_en, name_en, price_per_sqft);\n        }\n      });\n    }else {\n      self.addLocality(name_en, name_es, price_per_sqft);\n    }\n  }\n\n  closeModal() {\n    this.model = new Locality();\n    this.localityClose.nativeElement.click();\n    this.getLocalities(this.parameter.city_id, '');\n  }\n\n  addLocality(name_en, name_es, price_per_sqft) {\n    // this.localityClose.nativeElement.click();\n    const locality = {\n      name_en: name_en,\n      name_es: name_es,\n      price_per_sqft: price_per_sqft,\n      coordinates: this.parameter.overlay,\n      poly_coordinates: JSON.stringify(this.parameter.overlay),\n      status: '1',\n      city_id: this.parameter.city_id,\n      overlay: this.parameter.overlay\n    };\n    delete locality.overlay;\n\n    this.admin.postDataApi('addLocality', locality).subscribe(\n        r => {\n          // this.all_overlays.push(r.data);\n          this.closeModal();\n          // this.init();\n        });\n  }\n\n\n  getPolygonCoords(newShape) {\n    // console.log('new', newShape);\n    // console.log('IN');\n      const coordinates_array = [];\n      const len = newShape.getPath().getLength();\n      for (let i = 0; i < len; i++) {\n          // console.log(newShape.getPath().getAt(i).toUrlValue(6));\n          coordinates_array.push(newShape.getPath().getAt(i).toUrlValue(6));\n      }\n      // console.log(coordinates_array);\n      return coordinates_array;\n  }\n\n  getLatLngFromString(ll) {\n      const latlng = ll.split(/, ?/);\n      return new google.maps.LatLng(parseFloat(latlng[0]), parseFloat(latlng[1]));\n  }\n\n  placeMarker(location) {\n      const marker = new google.maps.Marker({\n          position: location,\n          map: this.map\n      });\n\n  }\n\n  clearSelection() {\n      if (this.selectedShape) {\n          this.selectedShape.setEditable(false);\n          this.selectedShape = null;\n      }\n  }\n\n  setSelection(shape, locality= '') {\nconsole.log('zzzzzzzzzzzz', shape);\n      this.clearSelection();\n      this.selectedLocality = locality;\n\n      this.selectedShape = shape;\n      shape.setEditable(true);\n      const coords = this.getPolygonCoords(shape);\n\n      const latlng = coords[0].split(',');\n      const coord = new google.maps.LatLng(parseFloat(latlng[0]), parseFloat(latlng[1]));\n\n\n      // console.log(coords);\n      // var center = new google.maps.LatLngBounds(shape).getCenter();\n      // let center = shape.my_getBounds().getCenter()\n\n      this.map.setCenter(coord);\n\n      // google.maps.event.addListener(selectedShape.getPath(), 'insert_at', getPolygonCoords(shape));\n      // google.maps.event.addListener(shape.getPath(), 'set_at', this.getPolygonCoords(shape));\n  }\n\n  setSelectionNonEditable(shape, locality= '') {\nconsole.log('zzzzzzzzzzzz', shape);\n      this.clearSelection();\n      this.selectedLocality = locality;\n\n      this.selectedShape = shape;\n      shape.setEditable(false);\n      const coords = this.getPolygonCoords(shape);\n\n      const latlng = coords[0].split(',');\n      const coord = new google.maps.LatLng(parseFloat(latlng[0]), parseFloat(latlng[1]));\n\n\n      // console.log(coords);\n      // var center = new google.maps.LatLngBounds(shape).getCenter();\n      // let center = shape.my_getBounds().getCenter()\n\n      this.map.setCenter(coord);\n\n      // google.maps.event.addListener(selectedShape.getPath(), 'insert_at', getPolygonCoords(shape));\n      // google.maps.event.addListener(shape.getPath(), 'set_at', this.getPolygonCoords(shape));\n  }\n\n  deleteSelectedShape() {\n      if (this.selectedShape) {\n          this.selectedShape.setMap(null);\n      }\n  }\n\n  deleteAllShape() {\n      for (let i = 0; i < this.all_overlays.length; i++) {\n          this.all_overlays[i].overlay.setMap(null);\n      }\n      this.all_overlays = [];\n  }\n\n  getPolygons() {\n    // console.log(this.all_overlays);\n    this.all_overlays.forEach( (item, count) => {\n      // console.log('overlay' + count);\n      this.getPolygonCoords(item.overlay.overlay);\n    });\n  }\n\n  blockUnblockLocality(locality, index, type) {\n    this.parameter.index = index;\n    this.parameter.title = this.constant.title.ARE_YOU_SURE;\n    switch (type) {\n      case 0:\n        this.parameter.text = this.constant.title.BLOCK_LOCALITY;\n        this.parameter.successText = this.constant.successMsg.BLOCKED_SUCCESSFULLY;\n        break;\n      case 1:\n        this.parameter.text = this.constant.title.UNBLOCK_LOCALITY;\n        this.parameter.successText = this.constant.successMsg.UNBLOCKED_SUCCESSFULLY;\n        break;\n    }\n\n    swal({\n      // title: this.parameter.title,\n      // text: this.parameter.text,\n      html: this.parameter.title + '<br>' + this.parameter.text,\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: this.constant.confirmButtonColor,\n      cancelButtonColor: this.constant.cancelButtonColor,\n      confirmButtonText: 'Yes'\n    }).then((result) => {\n      if (result.value) {\n        this.removeSelection(locality, index, type);\n        swal('Success', this.parameter.successText, 'success');\n      }\n    });\n  }\n\n  removeSelection(locality, index, status) {\n      // console.log('Removing...', locality);\n      locality.status = status;\n      // this.all_overlays.splice(index,1);\n      // locality.overlay.setMap(null);\n      delete locality.overlay;\n      this.admin.postDataApi('addLocality', locality).subscribe(\n      r => {\n        // console.log(r);\n        // this.all_overlays.push(r.data);\n        // this.getLocalities(this.parameter.city_id,'');\n      });\n  }\n\n  upadteSelection(locality, index) {\n\n  }\n\n  markLocalityFeatured (index, locality_id, flag) {\n    let title = '';\n    if (flag === 1) {\n      title = 'You want to feature this locality?';\n    } else {\n      title = 'You want to unfeature this locality?';\n    }\n    swal({\n      html: 'Are you sure' + '<br>' + title,\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: this.constant.confirmButtonColor,\n      cancelButtonColor: this.constant.cancelButtonColor,\n      confirmButtonText: 'Yes'\n    }).then((result) => {\n      if (result.value) {\n        this.admin.postDataApi('markLocalityFeatured', {locality_id: locality_id, flag: flag}).subscribe(\n          r => {\n            this.parameter.localities[index] = r.data;\n            swal('Success', this.parameter.successText, 'success');\n          });\n      }\n    });\n  }\n\n  getLatLan(address: string) {\n    console.log('Getting Address - ', address);\n\n    // this.admin.googleApi('https://maps.googleapis.com/maps/api/geocode/json?address=' + address)\n    //   .subscribe(\n    //     success => {\n    //       console.log('-----', success);\n    //     }, error => {\n    //       this.parameter.loading = false;\n    //     });\n\n    this.loader.load().then(() => {\n      console.log('--');\n      const geocoder = new google.maps.Geocoder();\n      console.log('zz');\n      console.log(geocoder);\n      return Observable.create(observer => {\n        geocoder.geocode( { 'address': address}, function(results, status) {\n          console.log('090090');\n          console.log('status', status, google.maps.GeocoderStatus);\n            if (status === google.maps.GeocoderStatus.OK) {\n                observer.next(results[0].geometry.location);\n                observer.complete();\n            } else {\n                console.log('Error - ', results, ' & Status - ', status);\n                observer.next({});\n                observer.complete();\n            }\n        });\n    });\n      // const geocoder = new google.maps.Geocode();\n    });\n  }\n\n  loadPlaces() {\n\n    console.log('locality', this.searchElementRef.nativeElement);\n    // load Places Autocomplete\n    this.loader.load().then(() => {\n      const autocomplete = new google.maps.places.Autocomplete(this.searchElementRef.nativeElement, {\n        types: []\n      });\n      autocomplete.addListener('place_changed', () => {\n        this.ngZone.run(() => {\n          // get the place result\n          // const place: google.maps.places.PlaceResult = autocomplete.getPlace();\n          const place = autocomplete.getPlace();\nconsole.log('place', place);\n          // verify result\n          if (place.geometry === undefined || place.geometry === null) {\n            return;\n          }\n\n          // set latitude, longitude and zoom\n          this.latitude = place.geometry.location.lat();\n          this.longitude = place.geometry.location.lng();\n          this.zoom = 12;\n\n          if (place.formatted_address) {\n            console.log('==', place.formatted_address);\n          }\n\n          const map = new google.maps.Map(this.mapDiv.nativeElement, {\n            center: {\n                lat: this.latitude,\n                lng: this.longitude\n            },\n            zoom: 18\n          });\n          this.map = map;\n\n        });\n      });\n    });\n  }\n\n}\n","<ngx-loading [show]=\"parameter.loading\"></ngx-loading>\n<div class=\"container-fluid\">\n    <div class=\"breadcrumb-group\">\n      <h5>Settings</h5>\n      <nav class=\"breadcrumb\">\n          <a class=\"breadcrumb-item\">Home</a>\n          <a class=\"breadcrumb-item\">Settings</a>\n          <span class=\"breadcrumb-item active\">Location</span>\n      </nav>\n    </div>\n\n    <div class=\"white-bg\">\n      <div class=\"page-title\">\n          <h3>Location</h3>\n      </div>\n\n      <!-- add country -->\n      <div class=\"form-outer\">\n          <div class=\"inline-form-group\">\n          <div class=\"row\">\n              <div class=\"col-md-12\">\n                <label><strong>Country</strong></label>\n              </div>\n\n              <div class=\"col-xl-3 col-lg-3 col-md-3 col-sm-6 col-6 table-search\">\n                  <div class=\"form-group marginB0\">\n                    <div class=\"searh-2\">\n                        <input autocomplete=\"off\" type=\"text\" name=\"keyword\" [(ngModel)]=\"searchCountry\" (keyup.enter)=\"getCountries(searchCountry, 1)\" placeholder=\"Search here\">\n                        <button (click)=\"getCountries(searchCountry, 1)\"><i class=\"fa fa-search\"></i></button>\n                    </div>\n                  </div>\n                </div>\n              <div class=\"col-xl-9 col-lg-3 col-md-3 col-sm-6 col-6\">\n                 <div class=\"form-group marginB0\">\n                    <div class=\"btn-cont text-right\">\n                        <a *ngIf=\"admin?.admin_acl['Settings']?.can_create==1\" class=\"btn btn-primary\" href=\"javascript://\" (click)=\"openCountryModal(addCountryModal, '', '', '', '1', -1)\">+ Add New</a>\n                    </div>\n                 </div>\n              </div>\n           </div>\n           <hr>\n          </div>\n      </div>\n\n      <!-- list country -->\n      <div class=\"tabel-section padding40 paddingT0\">\n          <div class=\"table-responsive\">\n            <table class=\"table table-striped\">\n                <tr>\n                  <th style=\"width:40%; text-align:left;\">Country (English)</th>\n                  <th style=\"width:40%; text-align:left;\">Country (Spanish)</th>\n                  <th style=\"width:20%\">Action</th>\n                </tr>\n                <tr *ngFor=\"let country of parameter.countries1; let c=index\">\n                  <td class=\"text-left\">\n                    {{country.name_en}}\n                  </td>\n                  <td class=\"text-left\">\n                    {{country.name_es}}\n                  </td>\n                  <td>\n                      <button title=\"Edit\" [disabled]=\"admin?.admin_acl['Settings']?.can_update==0\" \n                      (click)=\"openCountryModal(addCountryModal, country.id, country.name_en, country.name_es, country.status, c)\" class=\"action-icon\"><img src=\"./../../../../assets/img/edit.png\" alt=\"img\"></button>\n                    \n                      <!-- status = 1 means unblocked -->\n                      <button [disabled]=\"admin?.admin_acl['Settings']?.can_delete==0\"\n                        (click)=\"blockUnblockCountry(country.id, country.name_en, country.name_es, country.status==1?0:1, c)\" \n                        title=\"{{country.status==1?'Block':'Unblock'}}\" [ngClass]=\"{'unblock-bg':country.status==0}\"\n                        class=\"action-icon\"><img src=\"assets/img/block.png\" alt=\"img\">\n                      </button>\n                  </td>\n                </tr>\n            </table>\n\n            <div class=\"error-border\" *ngIf=\"parameter.countries1?.length == 0\">\n              <p class=\"show-not-found\">\n                {{constant.errorMsg.NO_COUNTRY_FOUND}}\n              </p>\n            </div>\n          </div>\n      </div>\n\n      <!-- add state -->\n        <div class=\"form-outer marginT15\">\n          <div class=\"inline-form-group\">\n          <div class=\"row\">\n              <div class=\"col-md-12\">\n                <label><strong>State</strong></label>\n                <hr>\n              </div>\n              <div class=\"col-lg-3 col-md-3 col-sm-6 col-6\">\n                 <div class=\"form-group marginB0\">\n                    <label>Country</label>\n                    <select class=\"form-control\" (change)=\"getStates($event.target.value, '', 1)\">\n                       <option *ngFor=\"let country of parameter.countries2\" value=\"{{country.id}}\">{{country.name_en}}</option>\n                    </select>\n                 </div>\n              </div>\n              <div class=\"col-lg-3 col-md-3 col-sm-6 col-6 table-search\">\n                <div class=\"form-group marginB0\">\n                  <label>Search</label>\n                  <div class=\"searh-2\">\n                      <input autocomplete=\"off\" type=\"text\" [(ngModel)]=\"searchState\" (keyup.enter)=\"getStates(parameter.country_id, searchState, 1)\" name=\"keyword\" placeholder=\"Search here\">\n                      <button (click)=\"getStates(parameter.country_id, searchState, 1)\"><i class=\"fa fa-search\"></i></button>\n                  </div>\n                </div>\n              </div>\n              <div class=\"col-lg-3 col-md-3 col-sm-6 col-6\"></div>\n              <div class=\"col-lg-3 col-md-3 col-sm-6 col-6\">\n                 <div class=\"form-group marginB0\">\n                    <label style=\"display: block;\">&nbsp;</label>\n                    <div class=\"btn-cont pull-right\">\n                        <a *ngIf=\"admin?.admin_acl['Settings']?.can_create==1\" class=\"btn btn-primary\" href=\"javascript://\" (click)=\"openStateModal(addStateModal, '', '', '', '', '1', -1)\">+ Add New</a>\n                    </div>\n                 </div>\n              </div>\n           </div>\n          </div>\n      </div>\n\n      <!-- list state -->\n      <div class=\"tabel-section padding40 paddingT0\">\n          <div class=\"table-responsive\">\n            <table class=\"table table-striped\">\n                <tr>\n                  <th style=\"width:40%; text-align:left;\">State (English)</th>\n                  <th style=\"width:40%; text-align:left;\">State (Spanish)</th>\n                  <th style=\"width:20%\">Action</th>\n                </tr>\n                <tr *ngFor=\"let state of parameter.states1; let s = index\">\n                  <td class=\"text-left\">\n                    {{state.name_en}}\n                  </td>\n                  <td class=\"text-left\">\n                    {{state.name_es}}\n                  </td>\n                <td>\n                    <button title=\"Edit\" [disabled]=\"admin?.admin_acl['Settings']?.can_update==0\" \n                    (click)=\"openStateModal(addStateModal, state.country_id, state.id, state.name_en, state.name_es, state.status, s)\" class=\"action-icon\"><img src=\"./../../../../assets/img/edit.png\" alt=\"img\"></button>\n                  \n                    <!-- status = 1 means unblocked -->\n                    <button [disabled]=\"admin?.admin_acl['Settings']?.can_delete==0\"\n                      (click)=\"blockUnblockState(state.country_id, state.name_en, state.name_es, state.status==1?0:1, state.id, s)\" \n                      title=\"{{state.status==1?'Block':'Unblock'}}\" [ngClass]=\"{'unblock-bg':state.status==0}\"\n                      class=\"action-icon\"><img src=\"assets/img/block.png\" alt=\"img\">\n                    </button>\n                  </td>\n                </tr>\n            </table>\n\n            <div class=\"error-border\" *ngIf=\"parameter.states1?.length == 0\">\n              <p class=\"show-not-found\">\n                {{constant.errorMsg.NO_STATE_FOUND}}\n              </p>\n            </div>\n          </div>\n      </div>\n      \n\n      <!-- add city -->\n      <div class=\"form-outer marginT15\">\n        <div class=\"inline-form-group\">\n          <div class=\"row\">\n            <div class=\"col-md-12\">\n              <label><strong>City</strong></label>\n              <hr>\n            </div>\n            <div class=\"col-lg-3 col-md-3 col-sm-6 col-6\">\n               <div class=\"form-group marginB0\">\n                  <label>Country</label>\n                  <select class=\"form-control\" (change)=\"getStates($event.target.value, '', 2)\">\n                    <option *ngFor=\"let country of parameter.countries3\" value=\"{{country.id}}\">{{country.name_en}}</option>\n                 </select>\n               </div>\n            </div>\n            <div class=\"col-lg-3 col-md-3 col-sm-6 col-6\">\n               <div class=\"form-group marginB0\">\n                  <label>State</label>\n                  <select class=\"form-control\" (change)=\"getCities($event.target.value, '', 1)\">\n                    <option *ngFor=\"let state of parameter.states2\" value=\"{{state.id}}\">{{state.name_en}}</option>\n                 </select>\n               </div>\n            </div>\n            <div class=\"col-lg-3 col-md-3 col-sm-6 col-6 table-search\">\n              <div class=\"form-group marginB0\">\n                <label>Search</label>\n                <div class=\"searh-2\">\n                    <input autocomplete=\"off\" type=\"text\" [(ngModel)]=\"searchCity\" (keyup.enter)=\"getCities(parameter.state_id, searchCity, 1)\" name=\"keyword\" placeholder=\"Search here\">\n                    <button (click)=\"getCities(parameter.state_id, searchCity, 1)\"><i class=\"fa fa-search\"></i></button>\n                </div>\n              </div>\n            </div>\n            <div class=\"col-lg-3 col-md-3 col-sm-6 col-6\">\n               <div class=\"form-group marginB0\">\n                  <label style=\"display: block;\">&nbsp;</label>\n                  <div class=\"btn-cont pull-right\">\n                      <a *ngIf=\"admin?.admin_acl['Settings']?.can_create==1\" class=\"btn btn-primary\" href=\"javascript://\" (click)=\"openCityModal(addCityModal, '', '', '', '', '', 1, -1)\">+ Add New</a>\n                  </div>\n               </div>\n            </div>\n         </div>\n        </div>\n    </div>\n\n    <!-- list city -->\n    <div class=\"tabel-section padding40 paddingT0\">\n        <div class=\"table-responsive\">\n          <table class=\"table table-striped\">\n              <tr>\n                <th style=\"width:40%; text-align:left;\">City (English)</th>\n                <th style=\"width:40%; text-align:left;\">City (Spanish)</th>\n                <th style=\"width:20%\">Action</th>\n              </tr>\n              <tr *ngFor=\"let city of parameter.cities1; let ci=index\">\n                <td class=\"text-left\">\n                  {{city.name_en}}\n                </td>\n                <td class=\"text-left\">\n                  {{city.name_es}}\n                </td>\n              <td>\n                  <button title=\"Edit\" [disabled]=\"admin?.admin_acl['Settings']?.can_update==0\" \n                  (click)=\"openCityModal(addCityModal, city.country_id, city.state_id, city.id, city.name_en, city.name_es, city.status, ci)\" class=\"action-icon\"><img src=\"./../../../../assets/img/edit.png\" alt=\"img\"></button>\n                \n                  <!-- status = 1 means unblocked -->\n                  <button [disabled]=\"admin?.admin_acl['Settings']?.can_delete==0\"\n                    (click)=\"blockUnblockCity(city.state_id, city.name_en, city.name_es, city.status==1?0:1, city.id, ci)\" \n                    title=\"{{city.status==1?'Block':'Unblock'}}\" [ngClass]=\"{'unblock-bg':city.status==0}\"\n                    class=\"action-icon\"><img src=\"assets/img/block.png\" alt=\"img\">\n                  </button>\n              </td>\n              </tr>\n          </table>\n\n          <div class=\"error-border\" *ngIf=\"parameter.states2?.length == 0; else cityNotFound\">\n            <p class=\"show-not-found\">\n              {{constant.errorMsg.NO_STATE_FOUND}}\n            </p>\n          </div>\n\n          <ng-template #cityNotFound>\n            <div class=\"error-border\" *ngIf=\"parameter.cities1?.length == 0\">\n              <p class=\"show-not-found\">\n                {{constant.errorMsg.NO_CITY_FOUND}}\n              </p>\n            </div>\n          </ng-template>\n        </div>\n    </div>\n    \n    </div>\n</div>\n<!--content end-->\n\n\n<!-- add country modal -->\n<ng-template #addCountryModal>\n  <div class=\"modal-content\">\n    <div class=\"modal-header my-modal-header\">\n      <h4 class=\"modal-title\">Add Country</h4>\n      <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n    <form class=\"form-horizontal my-modal-form\" role=\"form\" novalidate #addForm=\"ngForm\" (ngSubmit)=\"checkIfCountrySpanishNameEntered(addForm.value.name_en, addForm.value.name_es)\">\n      <div class=\"modal-body my-modal-body\">\n        <div class=\"form-group\">\n          <input autocomplete=\"off\" type=\"text\" class=\"form-control\" placeholder=\"Country (English)\" id=\"name_en\" required [(ngModel)]=\"location.countryModel.name_en\" name=\"name_en\" #name_en=\"ngModel\">\n          <!-- <div *ngIf=\"name_en.errors && (name_en.dirty || name_en.touched)\" class=\"show-not-found\">\n              <div [hidden]=\"!name_en.errors.required\">\n                {{constant.errorMsg.COUNTRY_NAME_REQUIRED}}\n              </div>\n          </div> -->\n        </div>\n        <div class=\"form-group\">\n          <input autocomplete=\"off\" type=\"text\" class=\"form-control\" placeholder=\"Country (Spanish)\" [(ngModel)]=\"location.countryModel.name_es\" name=\"name_es\">\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" [disabled]=\"admin?.admin_acl['Settings']?.can_create==0 || addForm.invalid\" class=\"btn btn-info\">Submit</button>\n        <button type=\"button\" class=\"btn btn-default\" aria-label=\"Close\" (click)=\"modalRef.hide()\">Close</button>\n      </div>\n    </form>\n  </div>\n</ng-template>\n\n\n<!-- add state modal -->\n<ng-template #addStateModal>\n  <div class=\"modal-content\">\n    <div class=\"modal-header my-modal-header\">\n      <h4 class=\"modal-title\">Add State</h4>\n      <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n    <form class=\"form-horizontal my-modal-form\" role=\"form\" novalidate #addForm=\"ngForm\" (ngSubmit)=\"checkIfStateSpanishNameEntered(addForm.value.country_id, addForm.value.name_en, addForm.value.name_es)\">\n      <div class=\"modal-body my-modal-body\">\n        <div class=\"form-group\" *ngIf=\"location.stateModel.state_id == ''\">\n          <select title=\"Select Country\" id=\"country_id\" required [(ngModel)]=\"location.stateModel.country_id\" name=\"country_id\" #country_id=\"ngModel\" class=\"form-control\" required>\n            <option value=\"\" disabled>Select Country</option>\n            <option *ngFor=\"let c of parameter.countries4\" value=\"{{c.id}}\">{{c.name}}</option>\n          </select>\n          <!-- <div *ngIf=\"country_id.errors && (country_id.dirty || country_id.touched)\" class=\"show-not-found\">\n            <div [hidden]=\"!country_id.errors.required\">\n              {{constant.errorMsg.COUNTRY_NAME_REQUIRED}}\n            </div>\n          </div> -->\n        </div>\n        <div class=\"form-group\">\n          <input autocomplete=\"off\" type=\"text\" class=\"form-control\" placeholder=\"State (English)\" id=\"name_en\" required [(ngModel)]=\"location.stateModel.name_en\" name=\"name_en\" #name_en=\"ngModel\">\n          <!-- <div *ngIf=\"name_en.errors && (name_en.dirty || name_en.touched)\" class=\"show-not-found\">\n              <div [hidden]=\"!name_en.errors.required\">\n                {{constant.errorMsg.STATE_NAME_REQUIRED}}\n              </div>\n          </div> -->\n        </div>\n        <div class=\"form-group\">\n          <input autocomplete=\"off\" type=\"text\" class=\"form-control\" placeholder=\"State (Spanish)\" [(ngModel)]=\"location.stateModel.name_es\" name=\"name_es\">\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" [disabled]=\"admin?.admin_acl['Settings']?.can_create==0 || addForm.invalid\" class=\"btn btn-info\">Submit</button>\n        <button type=\"button\" class=\"btn btn-default\" aria-label=\"Close\" (click)=\"modalRef.hide()\">Close</button>\n      </div>\n    </form>\n  </div>\n</ng-template>\n\n\n<!-- add city modal -->\n<ng-template #addCityModal>\n  <div class=\"modal-content\">\n    <div class=\"modal-header my-modal-header\">\n      <h4 class=\"modal-title\">Add City</h4>\n      <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n    <form class=\"form-horizontal my-modal-form\" role=\"form\" novalidate #addForm=\"ngForm\" (ngSubmit)=\"checkIfCitySpanishNameEntered(addForm.value.state_id, addForm.value.name_en, addForm.value.name_es)\">\n      <div class=\"modal-body my-modal-body\">\n        <div class=\"form-group\" *ngIf=\"location.cityModel.city_id == ''\">\n          <select title=\"Select Country\" id=\"country_id\" (change)=\"getStates($event.target.value, '', 3)\" required [(ngModel)]=\"location.cityModel.country_id\" name=\"country_id\" #country_id=\"ngModel\" class=\"form-control\" required>\n            <option value=\"\" disabled>Select Country</option>\n            <option *ngFor=\"let c of parameter.countries5\" value=\"{{c.id}}\">{{c.name}}</option>\n          </select>\n          <!-- <div *ngIf=\"country_id.errors && (country_id.dirty || country_id.touched)\" class=\"show-not-found\">\n            <div [hidden]=\"!country_id.errors.required\">\n              {{constant.errorMsg.COUNTRY_NAME_REQUIRED}}\n            </div>\n          </div> -->\n        </div>\n        <div class=\"form-group\" *ngIf=\"location.cityModel.city_id == ''\">\n          <select title=\"Select State\" id=\"state_id\" required [(ngModel)]=\"location.cityModel.state_id\" name=\"state_id\" #state_id=\"ngModel\" class=\"form-control\" required>\n            <option value=\"\" disabled>Select State</option>\n            <option *ngFor=\"let s of parameter.states3\" value=\"{{s.id}}\">{{s.name}}</option>\n          </select>\n          <!-- <div *ngIf=\"state_id.errors && (state_id.dirty || state_id.touched)\" class=\"show-not-found\">\n            <div [hidden]=\"!state_id.errors.required\">\n              {{constant.errorMsg.STATE_NAME_REQUIRED}}\n            </div>\n          </div> -->\n        </div>\n        <div class=\"form-group\">\n          <input autocomplete=\"off\" type=\"text\" class=\"form-control\" placeholder=\"City (English)\" id=\"name_en\" required [(ngModel)]=\"location.cityModel.name_en\" name=\"name_en\" #name_en=\"ngModel\">\n          <!-- <div *ngIf=\"name_en.errors && (name_en.dirty || name_en.touched)\" class=\"show-not-found\">\n              <div [hidden]=\"!name_en.errors.required\">\n                {{constant.errorMsg.CITY_NAME_REQUIRED}}\n              </div>\n          </div> -->\n        </div>\n        <div class=\"form-group\">\n          <input autocomplete=\"off\" type=\"text\" class=\"form-control\" placeholder=\"City (Spanish)\" [(ngModel)]=\"location.cityModel.name_es\" name=\"name_es\">\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" [disabled]=\"admin?.admin_acl['Settings']?.can_create==0 || addForm.invalid\" class=\"btn btn-info\">Submit</button>\n        <button type=\"button\" class=\"btn btn-default\" aria-label=\"Close\" (click)=\"modalRef.hide()\">Close</button>\n      </div>\n    </form>\n  </div>\n</ng-template>\n","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { AdminService } from '../../../services/admin.service';\nimport { IProperty } from '../../../common/property';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { Location } from './../../../models/location.model';\nimport { Constant } from './../../../common/constants';\ndeclare let swal: any;\n\n@Component({\n  selector: 'app-location',\n  templateUrl: './location.component.html',\n  styleUrls: ['./location.component.css'],\n  providers: [Location, Constant]\n})\n\nexport class LocationComponent implements OnInit {\n\n  public parameter: IProperty = {};\n  public modalRef: BsModalRef;\n\n  searchCountry: string;\n  searchState: string;\n  searchCity: string;\n\n  constructor(private location: Location, private constant: Constant,\n    private modalService: BsModalService, public admin: AdminService,\n  ) { }\n\n  ngOnInit() {\n    this.searchCountry = ''; this.searchState = ''; this.searchCity = '';\n    this.getCountries(this.searchCountry, '');\n  }\n\n  public openCountryModal(template: TemplateRef<any>, country_id, name_en, name_es, status, index) {\n    this.parameter.index = index;\n    this.location.countryModel.country_id = country_id;\n    this.location.countryModel.name_en = name_en;\n    this.location.countryModel.name_es = name_es;\n    this.location.countryModel.status = status;\n    this.modalRef = this.modalService.show(template);\n  }\n\n  public openStateModal(template: TemplateRef<any>, country_id, state_id, name_en, name_es, status, index) {\n    this.parameter.index = index;\n    this.location.stateModel.country_id = country_id;\n    this.location.stateModel.state_id = state_id;\n    this.location.stateModel.name_en = name_en;\n    this.location.stateModel.name_es = name_es;\n    this.location.stateModel.status = status;\n    this.modalRef = this.modalService.show(template);\n  }\n\n  public openCityModal(template: TemplateRef<any>, country_id, state_id, city_id, name_en, name_es, status, index) {\n    this.parameter.index = index;\n    this.location.cityModel.country_id = country_id;\n    this.location.cityModel.state_id = state_id;\n    this.location.cityModel.city_id = city_id;\n    this.location.cityModel.name_en = name_en;\n    this.location.cityModel.name_es = name_es;\n    this.location.cityModel.status = status;\n    this.modalRef = this.modalService.show(template);\n  }\n\n  public openModal(template: TemplateRef<any>) {\n    this.modalRef = this.modalService.show(template); // {3}\n  }\n\n\n  // used for country listing and country search\n  getCountries(keyword, keyname) {\n    const input = new FormData();\n    if (keyword) { input.append('keyword', keyword); }\n    this.admin.postDataApi('getCountries', input)\n      .subscribe(\n        success => {\n          // console.log(success.data);\n          // console.log('keyname', keyname);\n          if (keyname === '') {\n            this.parameter.countries1 = success.data.reverse();\n            this.parameter.countries2 = success.data.reverse();\n            this.parameter.countries3 = success.data.reverse();\n            this.parameter.countries4 = success.data.reverse();\n            this.parameter.countries5 = success.data.reverse();\n            this.getStates(this.parameter.countries2[0].id, '', '');\n          } else if (keyname === 1) {\n            this.parameter.countries1 = success.data.reverse();\n          } else if (keyname === 2) {\n            this.parameter.countries2 = success.data.reverse();\n            if (this.parameter.countries2.length > 0) {\n              // this.getStates(this.parameter.countries2[0].id, '', '1');\n            }\n          } else if (keyname === 3) {\n            this.parameter.countries3 = success.data.reverse();\n          } else if (keyname === 4) {\n            this.parameter.countries4 = success.data.reverse();\n          } else if (keyname === 5) {\n            this.parameter.countries5 = success.data.reverse();\n          }\n        }, error => {\n          // this.parameter.loading = false;\n        });\n  }\n\n  // used on click of country -- city\n  getStates(country_id, keyword, keyname) {\n    this.parameter.country_id = country_id;\n\n    const input = new FormData();\n    input.append('country_id', country_id);\n\n    if (keyword) { input.append('keyword', keyword); }\n\n    this.admin.postDataApi('country/getStates', input)\n      .subscribe(\n        success => {\n          if (keyname === '') {\n            this.parameter.country_id1 = country_id;\n            this.parameter.country_id2 = country_id;\n            this.parameter.states1 = success.data.reverse();\n            this.parameter.states2 = success.data.reverse();\n            this.parameter.states3 = success.data.reverse();\n            this.getCities(this.parameter.states1[0].id, '', '');\n          } else if (keyname === 1) {\n            this.parameter.country_id1 = country_id;\n            this.parameter.states1 = success.data.reverse();\n            // this.getCities(this.parameter.states1[0].id, '', '1');\n          } else if (keyname === 2) {\n            this.parameter.country_id2 = country_id;\n            this.parameter.states2 = success.data.reverse();\n            if (this.parameter.states2.length > 0) {\n              this.getCities(this.parameter.states2[0].id, '', 1);\n            } else {\n              this.parameter.cities1 = [];\n            }\n          } else if (keyname === 3) {\n            this.parameter.states3 = success.data.reverse();\n          }\n          // if (this.parameter.states1.length !== 0) {\n          //   this.parameter.state_id = this.parameter.states1[0].id;\n          //   this.getCities(this.parameter.states1[0].id, '', '1');\n          // }else { this.parameter.cities = []; }\n        });\n  }\n\n\n  getCities(state_id, keyword, keyname) {\n    this.parameter.state_id = state_id;\n    this.searchCity = keyword;\n    const input = new FormData();\n    input.append('state_id', state_id);\n    if (keyword) { input.append('keyword', keyword); }\n    this.admin.postDataApi('getCities', input)\n      .subscribe(\n        success => {\n          // this.parameter.cities = success.data.reverse();\n          if (keyname === '') {\n            this.parameter.state_id1 = state_id;\n            this.parameter.cities1 = success.data.reverse();\n            this.parameter.cities2 = success.data.reverse();\n          } else if (keyname === 1) {\n            this.parameter.state_id1 = state_id;\n            this.parameter.cities1 = success.data.reverse();\n            // console.log('cities1', this.parameter.cities1);\n          } else if (keyname === 2) {\n            this.parameter.cities2 = success.data.reverse();\n          }\n        }, error => {\n          // this.parameter.loading = false;\n        });\n  }\n\n\n  checkIfCountrySpanishNameEntered(name_en, name_es= '') {\n    const self = this;\n    if (name_es === '') {\n      swal({\n        text: this.constant.errorMsg.SAVE_ENGLISH_COUNTRY_NAME,\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: this.constant.confirmButtonColor,\n        cancelButtonColor: this.constant.cancelButtonColor,\n        confirmButtonText: 'Yes'\n      }).then((result) => {\n        if (result.value) {\n          this.addCountry(name_en, name_en, self.location.countryModel.status, '');\n        }\n      });\n    }else {\n      self.addCountry(name_en, name_es, self.location.countryModel.status, '');\n    }\n  }\n\n\n  addCountry(name_en: string, name_es: string, status, country_id) {\n    if (country_id === '') {this.modalRef.hide(); }    // hide only when open\n\n    const input = new FormData();\n    input.append('name_es', name_es);\n    input.append('name_en', name_en);\n    input.append('status', status);\n\n    if (this.location.countryModel.country_id) {\n      input.append('country_id', this.location.countryModel.country_id);\n    }else if (country_id) {\n      input.append('country_id', country_id);\n    }\n\n    this.admin.postDataApi('addCountry', input)\n      .subscribe(\n        success => {\n          const text = this.location.countryModel.country_id || country_id ?\n            this.constant.successMsg.COUNTRY_UPDATED_SUCCESSFULLY :\n            this.constant.successMsg.COUNTRY_ADDED_SUCCESSFULLY;\n          swal('Success', text, 'success');\n          this.getCountries('', '');\n          // this.getAllCountries('', 'added-country');   // loading dropdown\n\n\n          // if (this.parameter.index === -1) {\n          //   this.parameter.countries1.push(success.data);\n          // }else {\n          //   this.parameter.countries1[this.parameter.index] = success.data;\n          // }\n        });\n  }\n\n\n  checkIfStateSpanishNameEntered(country_id, name_en, name_es= '') {\n    const self = this;\n    if (name_es === '') {\n      swal({\n        text: this.constant.errorMsg.SAVE_ENGLISH_STATE_NAME,\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: this.constant.confirmButtonColor,\n        cancelButtonColor: this.constant.cancelButtonColor,\n        confirmButtonText: 'Yes'\n      }).then((result) => {\n        if (result.value) {\n          this.addState(country_id, name_en, name_en, self.location.stateModel.status, '');\n        }\n      });\n    }else {\n      self.addState(country_id, name_en, name_es, self.location.stateModel.status, '');\n    }\n  }\n\n\n  addState(country_id, name_en, name_es, status, state_id) {\n\n    if (state_id === '') {this.modalRef.hide(); }\n\n    const input = new FormData();\n    input.append('name_es', name_es);\n    input.append('name_en', name_en);\n    input.append('status', status);\n\n    if (this.location.stateModel.country_id) {\n      input.append('country_id', this.location.stateModel.country_id);  // edit\n    }else {\n      input.append('country_id', country_id);  // add\n    }\n\n    if (this.location.stateModel.state_id) {\n      input.append('state_id', this.location.stateModel.state_id);\n    }else if (state_id) {\n      input.append('state_id', state_id);\n    }\n\n    this.admin.postDataApi('country/addState', input)\n      .subscribe(\n        success => {\n          const text = this.location.stateModel.state_id || state_id ?\n          this.constant.successMsg.STATE_UPDATED_SUCCESSFULLY :\n          this.constant.successMsg.STATE_ADDED_SUCCESSFULLY;\n          swal('Success', text, 'success');\n          this.getStates(this.parameter.country_id1, '', 1);\n          this.getStates(this.parameter.country_id2, '', 2);\n          // this.getStatesWRTCountry(this.parameter.country_id, '');\n          // if (this.parameter.index === -1) {\n          //   this.parameter.states.push(success.data);\n          // }else {\n          //   this.parameter.states[this.parameter.index] = success.data;\n          // }\n        });\n  }\n\n\n  checkIfCitySpanishNameEntered(state_id, name_en, name_es= '') {\n    const self = this;\n    if (name_es === '') {\n      swal({\n        text: this.constant.errorMsg.SAVE_ENGLISH_CITY_NAME,\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: this.constant.confirmButtonColor,\n        cancelButtonColor: this.constant.cancelButtonColor,\n        confirmButtonText: 'Yes'\n      }).then((result) => {\n        if (result.value) {\n          this.addCity(state_id, name_en, name_en, self.location.cityModel.status, '');\n        }\n      });\n    }else {\n      self.addCity(state_id, name_en, name_es, self.location.cityModel.status, '');\n    }\n  }\n\n\n  addCity(state_id, name_en, name_es, status, city_id) {\n    if (city_id === '') {this.modalRef.hide(); }\n    const input = new FormData();\n    input.append('name_es', name_es);\n    input.append('name_en', name_en);\n    input.append('status', status);\n\n    if (this.location.cityModel.state_id) {\n      input.append('state_id', this.location.cityModel.state_id);   // edit\n    }else {\n      input.append('state_id', state_id);   // add\n    }\n\n    if (this.location.cityModel.city_id) {\n      input.append('city_id', this.location.cityModel.city_id);   // edit\n    }else if (city_id) {\n      input.append('city_id', city_id);   // edit\n    }\n\n    this.admin.postDataApi('addCity', input)\n      .subscribe(\n        success => {\n          const text = this.location.cityModel.city_id || city_id ?\n          this.constant.successMsg.CITY_UPDATED_SUCCESSFULLY : this.constant.successMsg.CITY_ADDED_SUCCESSFULLY;\n          swal('Success', text, 'success');\n          this.getCities(this.parameter.state_id1, '', 1);\n\n          // if (this.parameter.index === -1) {\n          //   this.parameter.cities.push(success.data);\n          // }else {\n          //   this.parameter.cities[this.parameter.index] = success.data;\n          // }\n        });\n  }\n\n\n  blockUnblockCountry(country_id, name_en, name_es, type, index) {\n    this.parameter.index = index;\n    this.parameter.title = this.constant.title.ARE_YOU_SURE;\n    switch (type) {\n      case 0:\n        this.parameter.text = this.constant.title.BLOCK_COUNTRY;\n        this.parameter.successText = this.constant.successMsg.BLOCKED_SUCCESSFULLY;\n        break;\n      case 1:\n        this.parameter.text = this.constant.title.UNBLOCK_COUNTRY;\n        this.parameter.successText = this.constant.successMsg.UNBLOCKED_SUCCESSFULLY;\n        break;\n    }\n\n    swal({\n      // title: this.parameter.title,\n      // text: this.parameter.text,\n      html: this.parameter.title + '<br>' + this.parameter.text,\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: this.constant.confirmButtonColor,\n      cancelButtonColor: this.constant.cancelButtonColor,\n      confirmButtonText: 'Yes'\n    }).then((result) => {\n      if (result.value) {\n        this.addCountry(name_en, name_es, type, country_id);\n      }\n    });\n  }\n\n\n  blockUnblockState(country_id, name_en, name_es, type, state_id, index) {\n    this.parameter.index = index;\n    this.parameter.title = this.constant.title.ARE_YOU_SURE;\n    switch (type) {\n      case 0:\n        this.parameter.text = this.constant.title.BLOCK_STATE;\n        this.parameter.successText = this.constant.successMsg.BLOCKED_SUCCESSFULLY;\n        break;\n      case 1:\n        this.parameter.text = this.constant.title.UNBLOCK_STATE;\n        this.parameter.successText = this.constant.successMsg.UNBLOCKED_SUCCESSFULLY;\n        break;\n    }\n\n    // const self = this;\n    swal({\n      // title: this.parameter.title,\n      // text: this.parameter.text,\n      html: this.parameter.title + '<br>' + this.parameter.text,\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: this.constant.confirmButtonColor,\n      cancelButtonColor: this.constant.cancelButtonColor,\n      confirmButtonText: 'Yes'\n    }).then((result) => {\n      if (result.value) {\n        this.addState(country_id, name_en, name_es, type, state_id);\n      }\n    });\n  }\n\n\n  blockUnblockCity(state_id, name_en, name_es, type, city_id, index) {\n    this.parameter.index = index;\n    this.parameter.title = this.constant.title.ARE_YOU_SURE;\n    switch (type) {\n      case 0:\n        this.parameter.text = this.constant.title.BLOCK_CITY;\n        this.parameter.successText = this.constant.successMsg.BLOCKED_SUCCESSFULLY;\n        break;\n      case 1:\n        this.parameter.text = this.constant.title.UNBLOCK_CITY;\n        this.parameter.successText = this.constant.successMsg.UNBLOCKED_SUCCESSFULLY;\n        break;\n    }\n\n    swal({\n      // title: this.parameter.title,\n      // text: this.parameter.text,\n      html: this.parameter.title + '<br>' + this.parameter.text,\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: this.constant.confirmButtonColor,\n      cancelButtonColor: this.constant.cancelButtonColor,\n      confirmButtonText: 'Yes'\n    }).then((result) => {\n      if (result.value) {\n        this.addCity(state_id, name_en, name_es, type, city_id);\n      }\n    });\n  }\n\n}\n","<ngx-loading [show]=\"parameter.loading\"></ngx-loading>\n<div class=\"container-fluid\">\n<div class=\"row\">\n    <div class=\"col-12\">\n      <div class=\"title-group\">\n          <h5>My Profile</h5>\n          <div class=\"spacer30\"></div>\n      </div>\n    </div>\n</div>\n<div class=\"white-bg padding40\">\n    <div class=\"row\">\n    <form role=\"form\" ngNativeValidate #addForm=\"ngForm\">\n      <div class=\"col-xl-12 col-lg-12 col-md-12 col-12\">\n          <div class=\"row\">\n            <div class=\"col-6\">\n                <div class=\"add-img\" style=\"display:flex;\">\n                    <img *ngIf=\"image\" [src]=\"image\" style=\"object-fit: cover; width: 100%;\">\n                    <label *ngIf=\"!image\">No Image</label>\n                </div>\n            </div>\n            <div class=\"col-12\">\n                <div class=\"spacer40\"></div>\n            </div>\n            <div class=\"col-12\">\n                <div class=\"form-group-2\">\n                  <label>Name</label>\n                  <input disabled autocomplete=\"off\" required type=\"text\" class=\"form-control\" [(ngModel)]=\"model.name\" name=\"name\">\n                </div>\n            </div>\n            <div class=\"col-12\">\n                <div class=\"form-group-2\">\n                  <label>Contact number</label>\n                  <input disabled minlength=\"6\" maxlength=\"16\" autocomplete=\"off\" type=\"text\" [pattern]=\"constant.phonePattern\" class=\"form-control\" id=\"phone\" required minlength=\"1\" [(ngModel)]=\"model.phone\" name=\"phone\"\n                        ng2TelInput [ng2TelInputOptions]=\"initialCountry\" />\n                </div>\n            </div>\n            <div class=\"col-12\">\n                <div class=\"form-group-2\">\n                  <label>Email ID</label>\n                  <input disabled autocomplete=\"off\" required [pattern]=\"constant.emailPattern\" type=\"email\" class=\"form-control\" [(ngModel)]=\"model.email\" name=\"email\">\n                </div>\n            </div>\n          </div>\n          <div class=\"access-controls\">\n              <div class=\"select-controls select-controls-1\" *ngFor=\"let permission of model.admin_acl; let i=index\">\n              <label class=\"cust-check-bx2\" [ngClass]=\"{'access-control11':permission.can_create==1 || permission.can_read==1 || permission.can_update==1 || permission.can_delete==1}\">{{permission?.acl?.name}}\n              <input (click)=\"expandBox(i)\" type=\"checkbox\" [checked]=\"permission.can_create == 1 || permission.can_read==1 || permission.can_update==1 || permission.can_delete==1 ? 'checked': ''\">\n              <span class=\"checkmark\"></span>\n              </label>\n              \n              <div class=\"clearfix\"></div>\n              <div *ngIf=\"permission.show\" id=\"broker-seller-dev\" class=\"inner-select\">\n                <label class=\"cust-check-bx\" [ngClass]=\"{'inner-checked':permission.can_create==1}\">Can Create\n                    <input type=\"checkbox\" [checked]=\"permission.can_create == 1 ? 'checked': ''\" >\n                    <span class=\"checkmark\"></span>\n                </label>\n                <label class=\"cust-check-bx\" [ngClass]=\"{'inner-checked':permission.can_read==1}\">Can Read\n                    <input type=\"checkbox\" [checked]=\"permission.can_read == 1 ? 'checked': ''\" >\n                    <span class=\"checkmark\"></span>\n                </label>\n                <label class=\"cust-check-bx\" [ngClass]=\"{'inner-checked':permission.can_update==1}\">Can Update\n                    <input type=\"checkbox\" [checked]=\"permission.can_update == 1 ? 'checked': ''\" >\n                    <span class=\"checkmark\"></span>\n                </label>\n                <label class=\"cust-check-bx\" [ngClass]=\"{'inner-checked':permission.can_delete==1}\">Can Block/Unblock\n                    <input type=\"checkbox\" [checked]=\"permission.can_delete == 1 ? 'checked': ''\" >\n                    <span class=\"checkmark\"></span>\n                </label>\n                <label class=\"cust-check-bx\" [ngClass]=\"{'inner-checked':permission.can_crud==1}\">CRUD\n                    <input type=\"checkbox\" [checked]=\"permission.can_crud == 1 ? 'checked': ''\" >\n                    <span class=\"checkmark\"></span>\n                </label>\n                <br>\n              </div>\n              <div class=\"clearfix\"></div>\n            </div>\n        </div>\n\n\n        <div class=\"row\" *ngFor=\"let add of model.address; let j=index\">\n            <div class=\"col-sm-2 col-12\">\n                <div class=\"form-group-2\">\n                  <label>Country</label>\n                  <select class=\"form-control\">\n                      <option>{{add.countries}}</option>\n                  </select>\n                </div>\n            </div>\n            <div class=\"col-sm-2 col-12\">\n                <div class=\"form-group-2\">\n                  <label>State</label>\n                  <select class=\"form-control\" disabled>\n                      <option>{{add.states}}</option>\n                  </select>\n                </div>\n            </div>\n            <div class=\"col-sm-2 col-12\">\n                <div class=\"form-group-2\">\n                  <label>City</label>\n                  <select class=\"form-control\" disabled>\n                      <option>{{add.cities}}</option>\n                  </select>\n                </div>\n            </div>\n            <div class=\"col-sm-2 col-12\">\n                <div class=\"form-group-2\">\n                  <label>Locality</label>\n                  <select class=\"form-control\" disabled>\n                      <option>{{add.localities}}</option>\n                  </select>\n                </div>\n            </div>\n            <div class=\"col-sm-2 col-12\">\n                <div class=\"form-group-2\">\n                  <label>Building</label>\n                  <select class=\"form-control\" disabled>\n                      <option>{{add.buildings}}</option>\n                  </select>\n                </div>\n            </div>\n          </div>\n                 \n      </div>\n      </form>\n    </div>\n</div>","import { Component, OnInit } from '@angular/core';\nimport { AdminService } from './../../../services/admin.service';\nimport { CommonService } from './../../../services/common.service';\nimport { IProperty } from './../../../common/property';\nimport { ACL } from './../../../models/acl.model';\nimport { Constant } from './../../../common/constants';\ndeclare let swal: any;\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css'],\n  providers: [ACL]\n})\nexport class ProfileComponent implements OnInit {\n\n  image: any;\n  public parameter: IProperty = {};\n  initialCountry: any;\n  show = false;\n  constructor(public constant: Constant, public model: ACL,\n    private admin: AdminService\n  ) { }\n\n  ngOnInit() {\n    this.model.country_code = this.constant.country_code;\n    this.model.dial_code = this.constant.dial_code;\n    this.parameter.itemsPerPage = this.constant.itemsPerPage;\n    this.parameter.p = this.constant.p;\n    this.initialCountry = {initialCountry: this.constant.country_code};\n    // this.model.id = params['id'];\n    this.loginData(this.model.id);\n  }\n\n  loginData(id) {\n    this.parameter.loading = true;\n    this.admin.postDataApi('loginData', {})\n    .subscribe(\n      success => {\n        this.parameter.loading = false;\n        this.model = success.data;\n        this.image = this.model.image;\n        this.model.admin_acl = success.data.admin_acl;\n        this.model.address = [];\n        console.log('success.data.countries.length', success.data.countries, success.data.countries.length);\n        for (let ind = 0; ind < success.data.countries.length; ind++) {\n          console.log('success.data.countries.length', success.data.countries[ind].name_en, success.data.countries.length);\n          const tempAdd = {\n            countries: success.data.countries[ind].name_en,\n            states: success.data.states !== null && success.data.states[ind] ? success.data.states[ind].name_en : 'All',\n            cities: success.data.cities !== null && success.data.cities[ind] ? success.data.cities[ind].name_en : 'All',\n            localities: success.data.localities !== null && success.data.localities[ind] ? success.data.localities[ind].name_en : 'All',\n            buildings: success.data.buildings !== null && success.data.buildings[ind] ? success.data.buildings[ind].name_en : 'All'\n          };\n          console.log('temp', tempAdd);\n          console.log('model', this.model);\n          console.log('in', ind);\n          this.model.address[ind] = tempAdd;\n          console.log('model', this.model);\n        }\n      }, error => {\n        this.parameter.loading = false;\n      });\n  }\n\n  expandBox(index) {\n    this.model.admin_acl[index].show = this.model.admin_acl[index].show === true ? false : true;\n  }\n}\n","<ngx-loading [show]=\"parameter.loading\"></ngx-loading>\n<div class=\"container-fluid\">\n  <div class=\"breadcrumb-group\">\n      <h5>Settings</h5>\n      <nav class=\"breadcrumb\">\n          <a class=\"breadcrumb-item\">Home</a>\n        <!-- <a class=\"breadcrumb-item\" routerLink=\"/dashboard\">Home</a> -->\n        <a class=\"breadcrumb-item\">Settings</a>\n        <span class=\"breadcrumb-item active\">Project</span>\n      </nav>\n  </div>\n  <div class=\"white-bg\">\n      <div class=\"page-title\">\n        <h3>Project</h3>\n      </div>\n\n      <div class=\"form-outer\">\n          <div class=\"inline-form-group\">\n             <div class=\"row\">\n                <div class=\"col-md-4\">\n                    <label><strong>Possession Status</strong></label>\n                </div>\n                <div class=\"col-md-8\" *ngIf=\"admin?.admin_acl['Settings']?.can_create==1\">\n                   <form role=\"form\" novalidate #addPossessionForm=\"ngForm\" (ngSubmit)=\"checkIfPossessionSpanishNameEntered(addPossessionForm, '', addPossessionForm.value.name_en, addPossessionForm.value.name_es, 1, 'add')\">\n                      <div class=\"row\">\n                        <div class=\"col-lg-6 col-md-6\">\n                          <input type=\"text\" class=\"form-control\" placeholder=\"Possession status (English)\" id=\"name_en\" required [(ngModel)]=\"project.possession.name_en\" name=\"name_en\" #name_en=\"ngModel\">\n                          <!-- <div *ngIf=\"name_en.errors && (name_en.dirty || name_en.touched)\" class=\"show-not-found\">\n                            <div [hidden]=\"!name_en.errors.required\">\n                              {{constant.errorMsg.PROPERTY_CONFIG_REQUIRED}}\n                            </div>\n                          </div>       -->\n                        </div>\n                        <div class=\"col-lg-6 col-md-6\">\n                            <input type=\"text\" class=\"form-control\" placeholder=\"Possession status (Spanish)\" [(ngModel)]=\"project.possession.name_es\" name=\"name_es\">\n                        </div>\n                      </div>\n                    <button [disabled]=\"admin?.admin_acl['Settings']?.can_create==0 || addPossessionForm.invalid\" type=\"submit\" class=\"add-btn btn\">\n                       <img src=\"./../../../../assets/img/add.png\" alt=\"img\">\n                     </button>\n                   </form>\n                </div>\n             </div>\n          </div>\n      </div>\n\n      <div class=\"tabel-section padding40 paddingT0\">\n          <div class=\"table-responsive\">\n            <table class=\"table table-striped\">\n                <tr>\n                  <th style=\"width:40%; text-align:left;\">Name (English)</th>\n                  <th style=\"width:40%; text-align:left;\">Name (Spanish)</th>\n                  <th style=\"width:20%\">Action</th>\n                </tr>\n                <tr *ngFor=\"let item of parameter.items; let i=index\">\n                  <td class=\"text-left\">\n                    {{item.name_en}}\n                  </td>\n                  <td class=\"text-left\">\n                    {{item.name_es}}\n                  </td>\n                  <td>\n                      <button title=\"Edit\" [disabled]=\"admin?.admin_acl['Settings']?.can_update==0\" \n                      (click)=\"openPossessionStatusModal(addPossessionStatusModal, i, item.id, item.name_en, item.name_es, item.status)\" class=\"action-icon\"><img src=\"./../../../../assets/img/edit.png\" alt=\"img\"></button>\n                    \n                      <!-- status = 1 means unblocked -->\n                      <button [disabled]=\"admin?.admin_acl['Settings']?.can_delete==0\"\n                        (click)=\"addPossessionStatusPopup(i, item.id, item.name_en, item.name_es, item.status==1?0:1, item.status==1?'block':'unblock')\" \n                        title=\"{{item.status==1?'Block':'Unblock'}}\" [ngClass]=\"{'unblock-bg':item.status==0}\"\n                        class=\"action-icon\"><img src=\"assets/img/block.png\" alt=\"img\">\n                      </button>\n                    <!-- <a title=\"Edit Configuration\" (click)=\"openPossessionStatusModal(addPossessionStatusModal, item.id, item.name_en, item.name_es, item.status)\" class=\"icon-block edit-icon\"><img src=\"./../../../../assets/img/edit.png\" alt=\"img\"></a>\n                    <a *ngIf=\"item.status == 1\" (click)=\"addPossessionStatusPopup(item.id, item.name_en, item.name_es, 0, 'block')\" title=\"Block Configuration\" class=\"icon-block block-icon\"><img src=\"./../../../../assets/img/unblock.png\" alt=\"img\"></a>\n                    <a *ngIf=\"item.status == 0\" (click)=\"addPossessionStatusPopup(item.id, item.name_en, item.name_es, 1, 'unblock')\" title=\"Unblock Configuration\" class=\"icon-block block-icon unblock-bg\"><img src=\"./../../../../assets/img/block.png\" alt=\"img\"></a> -->\n                  </td>\n                </tr>\n\n                <div *ngIf=\"parameter.total == 0\">\n                  <p class=\"show-not-found\">\n                    {{constant.errorMsg.NO_POSSESSION_FOUND}}\n                  </p>\n                </div>\n            </table>\n          </div>\n      </div>\n\n\n      <div class=\"form-outer\">\n        <div class=\"inline-form-group\">\n           <div class=\"row\">\n              <div class=\"col-md-4\">\n                  <label><strong>Project Type</strong></label>\n              </div>\n              <div class=\"col-md-8\" *ngIf=\"admin?.admin_acl['Settings']?.can_create==1\">\n                 <form role=\"form\" novalidate #addTypeForm=\"ngForm\" (ngSubmit)=\"checkIfTypeSpanishNameEntered(addTypeForm, '', addTypeForm.value.name_en, addTypeForm.value.name_es, 1, 'add')\">\n\n                  <div class=\"row\">\n                      <div class=\"col-md-6 col-lg-6\">\n                          <input type=\"text\" class=\"form-control\" placeholder=\"Project type name (English)\" id=\"name_en\" required [(ngModel)]=\"project.type.name_en\" name=\"name_en\" #name_en=\"ngModel\">\n                          <!-- <div *ngIf=\"name_en.errors && (name_en.dirty || name_en.touched)\" class=\"show-not-found\">\n                            <div [hidden]=\"!name_en.errors.required\">\n                              {{constant.errorMsg.PROPERTY_TYPE_REQUIRED}}\n                            </div>\n                        </div> -->\n                      </div>\n                    \n                    <div class=\"col-lg-6 col-md-6\">\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Project type name (Spanish)\" [(ngModel)]=\"project.type.name_es\" name=\"name_es\">\n                    </div>\n  \n                  </div>\n                  <button [disabled]=\"admin?.admin_acl['Settings']?.can_create==0 || addTypeForm.invalid\" type=\"submit\" class=\"add-btn btn\">\n                     <img src=\"./../../../../assets/img/add.png\" alt=\"img\">\n                   </button>\n                 </form>\n              </div>\n           </div>\n        </div>\n    </div>\n\n    <div class=\"tabel-section padding40 paddingT0\">\n        <div class=\"table-responsive\">\n          <table class=\"table table-striped\">\n              <tr>\n                <th style=\"width:40%; text-align:left;\">Name (English)</th>\n                <th style=\"width:40%; text-align:left;\">Name (Spanish)</th>\n                <th style=\"width:20%\">Action</th>\n              </tr>\n              <tr *ngFor=\"let item of parameter.projectTypes; let j=index\">\n                <td class=\"text-left\">\n                  {{item.name_en}}\n                </td>\n                <td class=\"text-left\">\n                  {{item.name_es}}\n                </td>\n                <td>\n                    <button title=\"Edit\" [disabled]=\"admin?.admin_acl['Settings']?.can_update==0\" \n                    (click)=\"openBuildingTypeModal(addBuildingTypeModal, j, item.id, item.name_en, item.name_es, item.status)\" class=\"action-icon\"><img src=\"./../../../../assets/img/edit.png\" alt=\"img\"></button>\n                  \n                    <!-- status = 1 means unblocked -->\n                    <button [disabled]=\"admin?.admin_acl['Settings']?.can_delete==0\"\n                      (click)=\"addBuildingTypePopup(j, item.id, item.name_en, item.name_es, item.status==1?0:1, item.status==1?'block':'unblock')\" \n                      title=\"{{item.status==1?'Block':'Unblock'}}\" [ngClass]=\"{'unblock-bg':item.status==0}\"\n                      class=\"action-icon\"><img src=\"assets/img/block.png\" alt=\"img\">\n                    </button>\n                  <!-- <a title=\"Edit Property Type\" (click)=\"openBuildingTypeModal(addBuildingTypeModal, item.id, item.name_en, item.name_es, item.status)\" class=\"icon-block edit-icon\"><img src=\"./../../../../assets/img/edit.png\" alt=\"img\"></a>\n                  <a *ngIf=\"item.status == 1\" (click)=\"addBuildingTypePopup(item.id, item.name_en, item.name_es, 0, 'block')\" title=\"Block Property Type\" class=\"icon-block block-icon\"><img src=\"./../../../../assets/img/unblock.png\" alt=\"img\"></a>\n                  <a *ngIf=\"item.status == 0\" (click)=\"addBuildingTypePopup(item.id, item.name_en, item.name_es, 1, 'unblock')\" title=\"Unblock Property Type\" class=\"icon-block block-icon unblock-bg\"><img src=\"./../../../../assets/img/block.png\" alt=\"img\"></a> -->\n                </td>\n              </tr>\n\n              <div *ngIf=\"parameter.projectTypesCount == 0\">\n                <p class=\"show-not-found\">\n                  {{constant.errorMsg.NO_PROJECT_TYPE_FOUND}}\n                </p>\n              </div>\n          </table>\n        </div>\n    </div>\n\n\n\n      <div class=\"form-outer\">\n        <div class=\"inline-form-group\">\n            <div class=\"row\">\n              <div class=\"col-md-4\">\n                  <label>Amenities</label>\n              </div>\n              <div class=\"col-md-8\" *ngIf=\"admin?.admin_acl['Settings']?.can_create==1\">\n                 <form role=\"form\" novalidate #addAmenityForm=\"ngForm\" (ngSubmit)=\"checkIfAmenitySpanishNameEntered(addAmenityForm, '', '', addAmenityForm.value.name_en, addAmenityForm.value.name_es, 1, 'add')\">\n                  <div class=\"browse-files\">\n                    <input accept=\"image/*\" (change)=\"changeListner($event)\" type=\"file\" class=\"image form-control\" placeholder=\"Amenity\" id=\"icon\" required [(ngModel)]=\"amenityModel.icon\" name=\"icon\" #icon=\"ngModel\">\n                    <span>Browse</span>\n                  </div>\n                  <!-- <div *ngIf=\"icon.errors && (icon.dirty || icon.touched)\" class=\"show-not-found\">\n                    <div [hidden]=\"!icon.errors.required\">\n                      {{constant.errorMsg.FILE_REQUIRED}}\n                    </div>\n                  </div> -->\n                  \n                  <div class=\"row\">\n                    <div class=\"col-lg-6 col-md-6\">\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Project amenity name (English)\" id=\"name_en\" required [(ngModel)]=\"amenityModel.name_en\" name=\"name_en\" #name_en=\"ngModel\">\n                        <!-- <div *ngIf=\"name_en.errors && (name_en.dirty || name_en.touched)\" class=\"show-not-found\">\n                          <div [hidden]=\"!name_en.errors.required\">\n                            {{constant.errorMsg.PROPERTY_TYPE_REQUIRED}}\n                          </div>\n                      </div>     -->\n                    </div>\n                    <div class=\"col-lg-6 col-md-6\">\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Project amenity name (Spanish)\" [(ngModel)]=\"amenityModel.name_es\" name=\"name_es\">\n                    </div>\n                  </div>\n                  <button [disabled]=\"admin?.admin_acl['Settings']?.can_create==0 || addAmenityForm.invalid\" type=\"submit\" class=\"add-btn btn\">\n                     <img src=\"./../../../../assets/img/add.png\" alt=\"img\">\n                   </button>\n                 </form>\n              </div>\n              <!-- <div class=\"col-md-8\">\n                  <div class=\"browse-files\">\n                    <input type=\"file\" name=\"\">\n                    <span>Browse</span>\n                  </div>\n                  <input type=\"text\" name=\"\">\n                  <button class=\"add-btn\" (click)=\"openAmenitiesModal(addAmenitiesModal, '', '', '', '', 1)\">\n                    <img src=\"./../../../../assets/img/add.png\" alt=\"img\">\n                  </button>\n              </div> -->\n            </div>\n        </div>\n      </div>\n\n      <div class=\"tabel-section padding40\">\n        <div class=\"table-responsive\">\n            <table class=\"table table-striped\">\n              <tr>\n                  <th style=\"width:20%\">Image</th>\n                  <th style=\"width:30%; text-align:left;\">Name (English)</th>\n                  <th style=\"width:30%; text-align:left;\">Name (Spanish)</th>\n                  <th style=\"width:20%\">Action</th>\n              </tr>\n              <tr *ngFor=\"let item of parameter.amenities; let k=index\">\n                  <td>\n                    <!-- <i class=\"fa fa-building\"></i> -->\n                    <img alt=\"image\" height=\"30\" width=\"30\" src=\"{{item.icon}}\">\n                  </td>\n                  <td class=\"text-left\">\n                    {{item.name_en}}\n                  </td>\n                  <td class=\"text-left\">\n                    {{item.name_es}}\n                  </td>\n                  <td>\n                      <button title=\"Edit\" [disabled]=\"admin?.admin_acl['Settings']?.can_update==0\" \n                      (click)=\"openAmenityModal(addAmenityModal, k, item.id, item.icon, item.name_en, item.name_es, item.status)\" class=\"action-icon\"><img src=\"./../../../../assets/img/edit.png\" alt=\"img\"></button>\n                    \n                      <!-- status = 1 means unblocked -->\n                      <button [disabled]=\"admin?.admin_acl['Settings']?.can_delete==0\"\n                        (click)=\"addAmenityPopup(k ,item.id, item.icon, item.name_en, item.name_es, item.status==1?0:1, item.status==1?'block':'unblock')\" \n                        title=\"{{item.status==1?'Block':'Unblock'}}\" [ngClass]=\"{'unblock-bg':item.status==0}\"\n                        class=\"action-icon\"><img src=\"assets/img/block.png\" alt=\"img\">\n                      </button>\n\n                    <!-- <a title=\"Edit Amenity\" (click)=\"openAmenityModal(addAmenityModal, item.id, item.icon, item.name_en, item.name_es, item.status)\" class=\"icon-block edit-icon\"><img src=\"./../../../../assets/img/edit.png\" alt=\"img\"></a>\n                    <a *ngIf=\"item.status == 1\" (click)=\"addAmenityPopup(item.id, item.icon, item.name_en, item.name_es, 0, 'block')\" title=\"Block Amenity\" class=\"icon-block block-icon\"><img src=\"./../../../../assets/img/unblock.png\" alt=\"img\"></a>\n                    <a *ngIf=\"item.status == 0\" (click)=\"addAmenityPopup(item.id, item.icon, item.name_en, item.name_es, 1, 'unblock')\" title=\"Unblock Amenity\" class=\"icon-block block-icon unblock-bg\"><img src=\"./../../../../assets/img/block.png\" alt=\"img\"></a> -->\n                  </td>\n              </tr>\n\n              <div *ngIf=\"parameter.amenitiesCount == 0\">\n                  <p class=\"show-not-found\">\n                    {{constant.errorMsg.NO_PROJECT_AMENITY_FOUND}}\n                  </p>\n                </div>\n            </table>\n        </div>\n      </div>\n      <!-- <div class=\"btn-cont text-right padding40 paddingT0\">\n        <button class=\"btn btn-primary\">Save</button>\n      </div> -->\n  </div>\n</div>\n\n\n<!-- add possession status modal -->\n<ng-template #addPossessionStatusModal>\n  <div class=\"modal-content\">\n    <div class=\"modal-header my-modal-header\">\n      <h4 class=\"modal-title\">Edit Property Configuration</h4>\n      <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n    <form class=\"form-horizontal my-modal-form\" role=\"form\" novalidate #addForm=\"ngForm\" (ngSubmit)=\"checkIfPossessionSpanishNameEntered(addForm, project.possession.id, addForm.value.name_en, addForm.value.name_es, project.possession.status, 'edit')\">\n      <div class=\"modal-body my-modal-body\">\n        <div class=\"form-group\">\n          <input type=\"text\" class=\"form-control\" placeholder=\"Project possession status (English)\" id=\"name_en\" required [(ngModel)]=\"project.possession.name_en\" name=\"name_en\" #name_en=\"ngModel\">\n          <!-- <div *ngIf=\"name_en.errors && (name_en.dirty || name_en.touched)\" class=\"show-not-found\">\n              <div [hidden]=\"!name_en.errors.required\">\n                {{constant.errorMsg.PROPERTY_TYPE_REQUIRED}}\n              </div>\n          </div> -->\n        </div>\n        <div class=\"form-group\">\n          <input type=\"text\" class=\"form-control\" placeholder=\"Project possession status (Spanish)\" [(ngModel)]=\"project.possession.name_es\" name=\"name_es\">\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" [disabled]=\"admin?.admin_acl['Settings']?.can_update==0 || addForm.invalid\" class=\"btn btn-info\">Submit</button>\n        <button type=\"button\" class=\"btn btn-default\" aria-label=\"Close\" (click)=\"modalRef.hide()\">Close</button>\n      </div>\n    </form>\n  </div>\n</ng-template>\n\n\n<!-- add PropertyTypeModal modal -->\n<ng-template #addBuildingTypeModal>\n  <div class=\"modal-content\">\n    <div class=\"modal-header my-modal-header\">\n      <h4 class=\"modal-title\">Edit Property Type</h4>\n      <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n    <form class=\"form-horizontal my-modal-form\" role=\"form\" novalidate #addForm1=\"ngForm\" (ngSubmit)=\"checkIfTypeSpanishNameEntered(addForm1, project.type.id, addForm1.value.name_en, addForm1.value.name_es, project.type.status, 'edit')\">\n      <div class=\"modal-body my-modal-body\">\n        <div class=\"form-group\">\n          <input type=\"text\" class=\"form-control\" placeholder=\"Project type (English)\" id=\"name_en\" required [(ngModel)]=\"project.type.name_en\" name=\"name_en\" #name_en=\"ngModel\">\n          <!-- <div *ngIf=\"name_en.errors && (name_en.dirty || name_en.touched)\" class=\"show-not-found\">\n              <div [hidden]=\"!name_en.errors.required\">\n                {{constant.errorMsg.PROPERTY_TYPE_REQUIRED}}\n              </div>\n          </div> -->\n        </div>\n        <div class=\"form-group\">\n          <input type=\"text\" class=\"form-control\" placeholder=\"Project type (Spanish)\" [(ngModel)]=\"project.type.name_es\" name=\"name_es\">\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" [disabled]=\"admin?.admin_acl['Settings']?.can_update==0 || addForm1.invalid\" class=\"btn btn-info\">Submit</button>\n        <button type=\"button\" class=\"btn btn-default\" aria-label=\"Close\" (click)=\"modalRef.hide()\">Close</button>\n      </div>\n    </form>\n  </div>\n</ng-template>\n\n\n<!-- addAmenitiesModal -->\n<ng-template #addAmenityModal>\n    <div class=\"modal-content\">\n      <div class=\"modal-header my-modal-header\">\n        <h4 class=\"modal-title\">Edit Amenity</h4>\n        <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <form class=\"form-horizontal my-modal-form\" role=\"form\" novalidate #addForm2=\"ngForm\" (ngSubmit)=\"checkIfAmenitySpanishNameEntered(addForm2, amenityModel.id, '', addForm2.value.name_en, addForm2.value.name_es, amenityModel.status, 'edit')\">\n        <div class=\"modal-body my-modal-body\">\n          <div class=\"form-group amenity-img\">\n            <img [src]=\"amenityModel.icon\" class=\"image\" width=\"100\" height=\"100\">\n          </div>\n          <div class=\"form-group\">\n            <input accept=\"image/*\" (change)=\"changeListner($event)\" type=\"file\" class=\"form-control\">\n          </div>\n          \n          <div class=\"form-group\">\n            <input type=\"text\" class=\"form-control\" placeholder=\"Amenity (English)\" id=\"name_en\" required [(ngModel)]=\"amenityModel.name_en\" name=\"name_en\" #name_en=\"ngModel\">\n            <!-- <div *ngIf=\"name_en.errors && (name_en.dirty || name_en.touched)\" class=\"show-not-found\">\n                <div [hidden]=\"!name_en.errors.required\">\n                  {{constant.errorMsg.PROPERTY_TYPE_REQUIRED}}\n                </div>\n            </div> -->\n          </div>\n          <div class=\"form-group\">\n            <input type=\"text\" class=\"form-control\" placeholder=\"Amenity (Spanish)\" [(ngModel)]=\"amenityModel.name_es\" name=\"name_es\">\n          </div>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"submit\" [disabled]=\"admin?.admin_acl['Settings']?.can_update==0 || addForm2.invalid\" class=\"btn btn-info\">Submit</button>\n          <button type=\"button\" class=\"btn btn-default\" aria-label=\"Close\" (click)=\"closeModal()\">Close</button>\n        </div>\n      </form>\n  </div>\n</ng-template>\n  ","import { Component, OnInit, TemplateRef, ElementRef } from '@angular/core';\nimport { AdminService } from '../../../services/admin.service';\nimport { Router } from '@angular/router';\nimport { IProperty } from '../../../common/property';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { Constant } from './../../../common/constants';\nimport { Project, Amenities } from './../../../models/project.model';\nimport { NgForm } from '@angular/forms';\ndeclare let swal: any;\n\n@Component({\n  selector: 'app-project',\n  templateUrl: './project.component.html',\n  styleUrls: ['./project.component.css'],\n  providers: [Constant, Project, Amenities]\n})\n\nexport class ProjectComponent implements OnInit {\n\n  public parameter: IProperty = {};\n  public modalRef: BsModalRef;\n  icon: any;\n\n  constructor(private element: ElementRef, private constant: Constant, public project: Project,\n    private modalService: BsModalService, public admin: AdminService,\n    public amenityModel: Amenities\n  ) {\n    this.parameter.index = -1;\n    this.parameter.countryCount = 0;\n    this.parameter.stateCount = 0;\n    this.parameter.cityCount = 0;\n  }\n\n  ngOnInit() {\n    this.getPossessionStatuses();\n    this.getBuildingTypes();\n    this.getAmenities();\n  }\n\n  closeModal() {\n    this.amenityModel = new Amenities;\n    this.modalRef.hide();\n  }\n\n  public openPossessionStatusModal(template: TemplateRef<any>, index, id, name_en, name_es, status) {\n    this.parameter.index = index;\n    this.project.possession.id = id;\n    this.project.possession.name_en = name_en;\n    this.project.possession.name_es = name_es == null ? name_en : name_es;\n    this.project.possession.status = status;\n    this.modalRef = this.modalService.show(template);\n  }\n\n  public openBuildingTypeModal(template: TemplateRef<any>, index, id, name_en, name_es, status) {\n    this.parameter.index = index;\n    this.project.type.id = id;\n    this.project.type.name_en = name_en;\n    this.project.type.name_es = name_es;\n    this.project.type.status = status;\n    this.modalRef = this.modalService.show(template);\n  }\n\n  public openAmenityModal(template: TemplateRef<any>, index, id, icon, name_en, name_es, status) {\n    this.parameter.index = index;\n    this.amenityModel.id = id;\n    this.amenityModel.icon = icon;\n    this.amenityModel.name_en = name_en;\n    this.amenityModel.name_es = name_es;\n    this.amenityModel.status = status;\n    this.modalRef = this.modalService.show(template);\n  }\n\n\n  addPossessionStatus(id, name_en, name_es, status, type) {\n    if (type === 'edit') {this.modalRef.hide(); }\n    this.parameter.url = 'addPossessionStatus';\n    const input = new FormData();\n    input.append('name_en', name_en);\n    input.append('name_es', name_es);\n    input.append('status', status);\n\n    if (id) {input.append('id', id); }\n    this.parameter.loading = true;\n    this.admin.postDataApi(this.parameter.url, input)\n      .subscribe(\n        success => {\n          this.parameter.loading = false;\n          const text = id ?\n          this.constant.successMsg.PROJECT_POSSESSION_UPDATED_SUCCESSFULLY :\n          this.constant.successMsg.PROJECT_POSSESSION_ADDED_SUCCESSFULLY;\n          swal('Success', text, 'success');\n          this.project.possession.name_en = '';\n          this.project.possession.name_es = '';\n          if (this.parameter.index !== -1) {\n            this.parameter.items[this.parameter.index] = success.data;\n          } else {\n            this.parameter.items.push(success.data);\n          }\n          this.parameter.index = -1;\n          // this.getPossessionStatuses();\n        }, error => {\n          this.parameter.loading = false;\n        });\n  }\n\n  addBuildingType(id, name_en, name_es, status, type) {\n    if (type === 'edit') {this.modalRef.hide(); }\n    this.parameter.url = 'addBuildingType';\n\n    const input = new FormData();\n    input.append('name_en', name_en);\n    input.append('name_es', name_es);\n    input.append('status', status);\n\n    if (id) {input.append('id', id); }\n    this.parameter.loading = true;\n    this.admin.postDataApi(this.parameter.url, input)\n      .subscribe(\n        success => {\n          this.parameter.loading = false;\n          const text = id ?\n            this.constant.successMsg.PROJECT_TYPE_UPDATED_SUCCESSFULLY :\n            this.constant.successMsg.PROJECT_TYPE_ADDED_SUCCESSFULLY;\n            this.project.type.name_en = '';\n            this.project.type.name_es = '';\n          swal('Success', text, 'success');\n          if (this.parameter.index !== -1) {\n            this.parameter.projectTypes[this.parameter.index] = success.data;\n          } else {\n            this.parameter.projectTypes.push(success.data);\n          }\n          this.parameter.index = -1;\n          // this.getBuildingTypes();\n        }, error => {\n          this.parameter.loading = false;\n        });\n  }\n\n\n  addAmenity(id, icon, name_en, name_es, status, type) {\n    if (type === 'edit') {this.modalRef.hide(); }\n    const iconNew = this.icon ? this.icon : this.amenityModel.icon;\n    this.parameter.url = 'addAmenity';\n\n    const input = new FormData();\n\n    input.append('name_en', name_en);\n    input.append('name_es', name_es);\n    input.append('status', status);\n\n    if (this.icon) {input.append('icon', iconNew); }\n\n    if (id) {input.append('id', id); }\n    this.parameter.loading = true;\n    this.admin.postDataApi(this.parameter.url, input)\n      .subscribe(\n        success => {\n          this.parameter.loading = false;\n          const text = id ? this.constant.successMsg.AMENITY_UPDATED_SUCCESSFULLY : this.constant.successMsg.AMENITY_ADDED_SUCCESSFULLY;\n          swal('Success', text, 'success');\n          if (this.parameter.index !== -1) {\n            this.parameter.amenities[this.parameter.index] = success.data;\n          } else {\n            this.parameter.amenities.push(success.data);\n          }\n          this.parameter.index = -1;\n          this.amenityModel = new Amenities;\n          // this.getAmenities();\n        }, error => {\n          this.parameter.loading = false;\n        });\n  }\n\n\n  getPossessionStatuses() {\n    this.parameter.loading = true;\n    this.parameter.url = 'getPossessionStatuses';\n    const input = new FormData();\n    this.admin.postDataApi(this.parameter.url, input)\n      .subscribe(\n        success => {\n          this.parameter.loading = false;\n          this.parameter.items = success.data;\n          this.parameter.total = success.data.length;\n        }, error => {\n          this.parameter.loading = false;\n        }\n      );\n  }\n\n\n  getBuildingTypes() {\n    this.parameter.loading = true;\n    this.parameter.url = 'getBuildingTypes';\n    const input = new FormData();\n    this.admin.postDataApi(this.parameter.url, input)\n      .subscribe(\n        success => {\n          this.parameter.loading = false;\n          this.parameter.projectTypes = success.data;\n          this.parameter.projectTypesCount = success.data.length;\n        }, error => {\n          this.parameter.loading = false;\n        }\n      );\n  }\n\n  getAmenities() {\n    this.parameter.loading = true;\n    this.parameter.url = 'getAmenities';\n    const input = new FormData();\n    this.admin.postDataApi(this.parameter.url, input)\n      .subscribe(\n        success => {\n          this.parameter.loading = false;\n          this.parameter.amenities = success.data;\n          this.parameter.amenitiesCount = success.data.length;\n        }, error => {\n          this.parameter.loading = false;\n        }\n      );\n  }\n\n  addPossessionStatusPopup(index, id, name_en, name_es, status, type) {\n    this.parameter.index = index;\n    const text = status === 1 ? this.constant.title.UNBLOCK_PROJECT_POSSESSION : this.constant.title.BLOCK_PROJECT_POSSESSION;\n    swal({\n      // title: this.constant.title.ARE_YOU_SURE,\n      // text: status === 1 ? this.constant.title.UNBLOCK_PROJECT_POSSESSION : this.constant.title.BLOCK_PROJECT_POSSESSION,\n      html: this.constant.title.ARE_YOU_SURE + '<br>' + text,\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: this.constant.confirmButtonColor,\n      cancelButtonColor: this.constant.cancelButtonColor,\n      confirmButtonText: 'Yes'\n    }).then((result) => {\n      if (result.value) {\n        this.addPossessionStatus(id, name_en, name_es, status, type);\n      }\n    });\n  }\n\n  addBuildingTypePopup(index, id, name_en, name_es, status, type) {\n    this.parameter.index = index;\n    const text = status === 1 ? this.constant.title.UNBLOCK_PROJECT_TYPE : this.constant.title.BLOCK_PROJECT_TYPE;\n    swal({\n      // title: this.constant.title.ARE_YOU_SURE,\n      // text: status === 1 ? this.constant.title.UNBLOCK_PROJECT_TYPE : this.constant.title.BLOCK_PROJECT_TYPE,\n      html: this.constant.title.ARE_YOU_SURE + '<br>' + text,\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: this.constant.confirmButtonColor,\n      cancelButtonColor: this.constant.cancelButtonColor,\n      confirmButtonText: 'Yes'\n    }).then((result) => {\n      if (result.value) {\n        this.addBuildingType(id, name_en, name_es, status, type);\n      }\n    });\n  }\n\n  addAmenityPopup(index, id, icon, name_en, name_es, status, type) {\n    this.parameter.index = index;\n    const text = status === 1 ? this.constant.title.UNBLOCK_AMENITY : this.constant.title.BLOCK_AMENITY;\n    swal({\n      // title: this.constant.title.ARE_YOU_SURE,\n      // text: status === 1 ? this.constant.title.UNBLOCK_AMENITY : this.constant.title.BLOCK_AMENITY,\n      html: this.constant.title.ARE_YOU_SURE + '<br>' + text,\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: this.constant.confirmButtonColor,\n      cancelButtonColor: this.constant.cancelButtonColor,\n      confirmButtonText: 'Yes'\n    }).then((result) => {\n      if (result.value) {\n        this.addAmenity(id, icon, name_en, name_es, status, type);\n      }\n    });\n  }\n\n  checkIfPossessionSpanishNameEntered(formdata: NgForm, id, name_en, name_es, status, type) {\n    const self = this;\n    formdata.reset();\n    if (name_es === '') {\n      swal({\n        text: this.constant.errorMsg.SAVE_ENGLISH_PROJECT_POSSESION,\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: this.constant.confirmButtonColor,\n        cancelButtonColor: this.constant.cancelButtonColor,\n        confirmButtonText: 'Yes'\n      }).then((result) => {\n        if (result.value) {\n          this.addPossessionStatus(id, name_en, name_en, status, type);\n        }\n      });\n    }else {\n      self.addPossessionStatus(id, name_en, name_es, status, type);\n    }\n  }\n\n\n  checkIfTypeSpanishNameEntered(formdata: NgForm, id, name_en, name_es, status, type) {\n    const self = this;\n    formdata.reset();\n    if (name_es === '') {\n      swal({\n        text: this.constant.errorMsg.SAVE_ENGLISH_PROJECT_TYPE,\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: this.constant.confirmButtonColor,\n        cancelButtonColor: this.constant.cancelButtonColor,\n        confirmButtonText: 'Yes'\n      }).then((result) => {\n        if (result.value) {\n          this.addBuildingType(id, name_en, name_en, status, type);\n        }\n      });\n    }else {\n      self.addBuildingType(id, name_en, name_es, status, type);\n    }\n  }\n\n\n  checkIfAmenitySpanishNameEntered(formdata: NgForm, id, icon, name_en, name_es, status, type) {\n    const self = this;\n    formdata.reset();\n    if (name_es === '') {\n      swal({\n        text: this.constant.errorMsg.SAVE_ENGLISH_AMENITY,\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: this.constant.confirmButtonColor,\n        cancelButtonColor: this.constant.cancelButtonColor,\n        confirmButtonText: 'Yes'\n      }).then((result) => {\n        if (result.value) {\n          this.addAmenity(id, icon, name_en, name_en, status, type);\n        }\n      });\n    }else {\n      self.addAmenity(id, icon, name_en, name_es, status, type);\n    }\n  }\n\n\n\n  changeListner(event) {\n    const reader = new FileReader();\n    const image = this.element.nativeElement.querySelector('.image');\n    const fileToUpload = event.target.files[0];\n    this.icon = fileToUpload;\n\n    reader.onload = function(e) {\n      const src = e.target['result'];\n        image.src = src;\n    };\n\n    reader.readAsDataURL(event.target.files[0]);\n  }\n}\n","<ngx-loading [show]=\"parameter.loading\"></ngx-loading>\n<div class=\"container-fluid\">\n  <div class=\"breadcrumb-group\">\n      <h5>Settings</h5>\n      <nav class=\"breadcrumb\">\n          <a class=\"breadcrumb-item\">Home</a>\n          <!-- <a class=\"breadcrumb-item\" routerLink=\"/dashboard\">Home</a> -->\n        <a class=\"breadcrumb-item\">Settings</a>\n        <span class=\"breadcrumb-item active\">Property</span>\n      </nav>\n  </div>\n  <div class=\"white-bg\">\n      <div class=\"page-title\">\n        <h3>Property</h3>\n      </div>\n\n\n      <div class=\"form-outer\">\n          <div class=\"inline-form-group\">\n             <div class=\"row\">\n                <div class=\"col-md-4\">\n                    <label><strong>Property Configuration</strong></label>\n                </div>\n                <div class=\"col-md-8\" *ngIf=\"admin?.admin_acl['Settings']?.can_create==1\" >\n                   <form role=\"form\" novalidate #addConfigForm=\"ngForm\" (ngSubmit)=\"checkIfConfigSpanishNameEntered(addConfigForm, '', addConfigForm.value.name_en, addConfigForm.value.name_es, 1, 'add')\">\n                    <div class=\"row\">\n                        <div class=\"col-lg-6 col-md-6\">\n                            <input type=\"text\" class=\"form-control\" placeholder=\"Configuration name (English)\" id=\"name_en\" required [(ngModel)]=\"property.configuration.name_en\" name=\"name_en\" #name_en=\"ngModel\">\n                            <!-- <div *ngIf=\"name_en.errors && (name_en.dirty || name_en.touched)\" class=\"show-not-found\">\n                              <div [hidden]=\"!name_en.errors.required\">\n                                {{constant.errorMsg.PROPERTY_CONFIG_REQUIRED}}\n                              </div>\n                          </div>       -->\n                        </div>\n                        <div class=\"col-lg-6 col-md-6\">\n                            <input type=\"text\" class=\"form-control\" placeholder=\"Configuration name (Spanish)\" [(ngModel)]=\"property.configuration.name_es\" name=\"name_es\">\n                        </div>\n                      </div>\n                    <button [disabled]=\"admin?.admin_acl['Settings']?.can_create==0 || addConfigForm.invalid\" type=\"submit\" class=\"add-btn btn\">\n                       <img src=\"./../../../../assets/img/add.png\" alt=\"img\">\n                     </button>\n                   </form>\n                </div>\n             </div>\n          </div>\n      </div>\n\n      <div class=\"tabel-section padding40 paddingT0\">\n          <div class=\"table-responsive\">\n            <table class=\"table table-striped\">\n                <tr>\n                  <th style=\"width:40%; text-align:left;\">Name (English)</th>\n                  <th style=\"width:40%; text-align:left;\">Name (Spanish)</th>\n                  <th style=\"width:20%\">Action</th>\n                </tr>\n                <tr *ngFor=\"let item of parameter.items; let i=index\">\n                  <td class=\"text-left\">\n                    {{item.name_en}}\n                  </td>\n                  <td class=\"text-left\">\n                    {{item.name_es}}\n                  </td>\n                  <td>\n                    <button title=\"Edit\" [disabled]=\"admin?.admin_acl['Settings']?.can_update==0\" \n                      (click)=\"openPropertyConfigModal(addPropertyConfigModal, i, item.id, item.name_en, item.name_es, item.status)\" class=\"action-icon\"><img src=\"./../../../../assets/img/edit.png\" alt=\"img\"></button>\n                    \n                      <!-- status = 1 means unblocked -->\n                    <button [disabled]=\"admin?.admin_acl['Settings']?.can_delete==0\"\n                      (click)=\"addPropertyConfigurationPopup(i, item.id, item.name_en, item.name_es, item.status==1?0:1, item.status==1?'block':'unblock')\" \n                      title=\"{{item.status==1?'Block':'Unblock'}}\" [ngClass]=\"{'unblock-bg':item.status==0}\"\n                      class=\"action-icon\"><img src=\"assets/img/block.png\" alt=\"img\">\n                    </button>\n\n                    <!-- <a title=\"Edit Configuration\" (click)=\"openPropertyConfigModal(addPropertyConfigModal, item.id, item.name_en, item.name_es, item.status)\" class=\"icon-block edit-icon\"><img src=\"./../../../../assets/img/edit.png\" alt=\"img\"></a>\n                    <a *ngIf=\"item.status == 1\" (click)=\"addPropertyConfigurationPopup(item.id, item.name_en, item.name_es, 0, 'block')\" title=\"Block Configuration\" class=\"icon-block block-icon\"><img src=\"./../../../../assets/img/unblock.png\" alt=\"img\"></a>\n                    <a *ngIf=\"item.status == 0\" (click)=\"addPropertyConfigurationPopup(item.id, item.name_en, item.name_es, 1, 'unblock')\" title=\"Unblock Configuration\" class=\"icon-block block-icon unblock-bg\"><img src=\"./../../../../assets/img/block.png\" alt=\"img\"></a> -->\n                  </td>\n                </tr>\n\n                <div *ngIf=\"parameter.total == 0\">\n                  <p class=\"show-not-found\">\n                    {{constant.errorMsg.NO_CONFIGURATION_FOUND}}\n                  </p>\n                </div>\n            </table>\n          </div>\n      </div>\n\n\n      <div class=\"form-outer\">\n        <div class=\"inline-form-group\">\n           <div class=\"row\">\n              <div class=\"col-md-4\">\n                  <label><strong>Property Type</strong></label>\n              </div>\n              <div class=\"col-md-8\" *ngIf=\"admin?.admin_acl['Settings']?.can_create==1\">\n                 <form role=\"form\" novalidate #addTypeForm=\"ngForm\" (ngSubmit)=\"checkIfTypeSpanishNameEntered(addTypeForm, '', addTypeForm.value.name_en, addTypeForm.value.name_es, 1, 'add')\">\n                  <div class=\"row\">\n                    <div class=\"col-lg-6 col-md-6\">\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Property type name (English)\" id=\"name_en\" required [(ngModel)]=\"property.type.name_en\" name=\"name_en\" #name_en=\"ngModel\">\n                        <!-- <div *ngIf=\"name_en.errors && (name_en.dirty || name_en.touched)\" class=\"show-not-found\">\n                          <div [hidden]=\"!name_en.errors.required\">\n                            {{constant.errorMsg.PROPERTY_TYPE_REQUIRED}}\n                          </div>\n                      </div>     -->\n                    </div>\n                    <div class=\"col-lg-6 col-md-6\">\n                      <input type=\"text\" class=\"form-control\" placeholder=\"Property type name (Spanish)\" [(ngModel)]=\"property.type.name_es\" name=\"name_es\">\n                    </div>\n                  </div>\n                  <button [disabled]=\"admin?.admin_acl['Settings']?.can_create==0 || addTypeForm.invalid\" type=\"submit\" class=\"add-btn btn\">\n                     <img src=\"./../../../../assets/img/add.png\" alt=\"img\">\n                   </button>\n                 </form>\n              </div>\n           </div>\n        </div>\n    </div>\n\n    <div class=\"tabel-section padding40 paddingT0\">\n        <div class=\"table-responsive\">\n          <table class=\"table table-striped\">\n              <tr>\n                <th style=\"width:40%; text-align:left;\">Name (English)</th>\n                <th style=\"width:40%; text-align:left;\">Name (Spanish)</th>\n                <th style=\"width:20%\">Action</th>\n              </tr>\n              <tr *ngFor=\"let item of parameter.propertyTypes; let j=index\">\n                <td class=\"text-left\">\n                  {{item.name_en}}\n                </td>\n                <td class=\"text-left\">\n                  {{item.name_es}}\n                </td>\n                <td>\n                  <button title=\"Edit\" [disabled]=\"admin?.admin_acl['Settings']?.can_update==0\" \n                  (click)=\"openPropertyTypeModal(addPropertyTypeModal, j, item.id, item.name_en, item.name_es, item.status)\" class=\"action-icon\"><img src=\"./../../../../assets/img/edit.png\" alt=\"img\"></button>\n                \n                  <!-- status = 1 means unblocked -->\n                  <button [disabled]=\"admin?.admin_acl['Settings']?.can_delete==0\"\n                    (click)=\"addPropertyTypePopup(j, item.id, item.name_en, item.name_es, item.status==1?0:1, item.status==1?'block':'unblock')\" \n                    title=\"{{item.status==1?'Block':'Unblock'}}\" [ngClass]=\"{'unblock-bg':item.status==0}\"\n                    class=\"action-icon\"><img src=\"assets/img/block.png\" alt=\"img\">\n                  </button>\n                  <!-- <a title=\"Edit Property Type\" (click)=\"openPropertyTypeModal(addPropertyTypeModal, item.id, item.name_en, item.name_es, item.status)\" class=\"icon-block edit-icon\"><img src=\"./../../../../assets/img/edit.png\" alt=\"img\"></a>\n                  <a *ngIf=\"item.status == 1\" (click)=\"addPropertyTypePopup(item.id, item.name_en, item.name_es, 0, 'block')\" title=\"Block Property Type\" class=\"icon-block block-icon\"><img src=\"./../../../../assets/img/unblock.png\" alt=\"img\"></a>\n                  <a *ngIf=\"item.status == 0\" (click)=\"addPropertyTypePopup(item.id, item.name_en, item.name_es, 1, 'unblock')\" title=\"Unblock Property Type\" class=\"icon-block block-icon unblock-bg\"><img src=\"./../../../../assets/img/block.png\" alt=\"img\"></a> -->\n                </td>\n              </tr>\n\n              <div *ngIf=\"parameter.total == 0\">\n                <p class=\"show-not-found\">\n                  {{constant.errorMsg.NO_PROPERTY_TYPE_FOUND}}\n                </p>\n              </div>\n          </table>\n        </div>\n    </div>\n\n\n      <div class=\"form-outer\">\n        <div class=\"inline-form-group\">\n            <div class=\"row\">\n              <div class=\"col-md-4\">\n                  <label>Amenities</label>\n              </div>\n              <div class=\"col-md-8\" *ngIf=\"admin?.admin_acl['Settings']?.can_create==1\">\n                 <form role=\"form\" novalidate #addAmenityForm=\"ngForm\" (ngSubmit)=\"checkIfAmenitySpanishNameEntered(addAmenityForm, '', '', addAmenityForm.value.name_en, addAmenityForm.value.name_es, 1, 'add')\">\n                  <div class=\"browse-files\">\n                    <input accept=\"image/*\" (change)=\"changeListner($event)\" type=\"file\" class=\"image form-control\" placeholder=\"Amenity\" id=\"icon\" required [(ngModel)]=\"property.amenities.icon\" name=\"icon\" #icon=\"ngModel\">\n                    <span>Browse</span>\n                    <!-- <div *ngIf=\"icon.errors && (icon.dirty || icon.touched)\" class=\"show-not-found\">\n                      <div [hidden]=\"!icon.errors.required\">\n                        {{constant.errorMsg.FILE_REQUIRED}}\n                      </div>\n                  </div> -->\n                  </div>\n                  <!-- <input type=\"file\" class=\"form-control\" placeholder=\"Amenity\" id=\"icon\" required [(ngModel)]=\"property.amenities.icon\" name=\"icon\" #icon=\"ngModel\">\n                    <div *ngIf=\"icon.errors && (icon.dirty || icon.touched)\" class=\"show-not-found\">\n                      <div [hidden]=\"!icon.errors.required\">\n                        {{constant.errorMsg.PROPERTY_TYPE_REQUIRED}}\n                      </div>\n                  </div> -->\n                  \n                  <div class=\"row\">\n                    <div class=\"col-lg-6 col-md-6\">\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Amenity name (English)\" id=\"name_en\" required [(ngModel)]=\"property.amenities.name_en\" name=\"name_en\" #name_en=\"ngModel\">\n                        <!-- <div *ngIf=\"name_en.errors && (name_en.dirty || name_en.touched)\" class=\"show-not-found\">\n                          <div [hidden]=\"!name_en.errors.required\">\n                            {{constant.errorMsg.PROPERTY_TYPE_REQUIRED}}\n                          </div>\n                      </div>     -->\n                    </div>\n                    <div class=\"col-lg-6 col-md-6\">\n                        <input type=\"text\" class=\"form-control\" placeholder=\"Amenity name (Spanish)\" [(ngModel)]=\"property.amenities.name_es\" name=\"name_es\">\n                    </div>\n                  </div>\n                  <button [disabled]=\"admin?.admin_acl['Settings']?.can_create==0 || addAmenityForm.invalid\" type=\"submit\" class=\"add-btn btn\">\n                     <img src=\"./../../../../assets/img/add.png\" alt=\"img\">\n                   </button>\n                 </form>\n              </div>\n              <!-- <div class=\"col-md-8\">\n                  <div class=\"browse-files\">\n                    <input type=\"file\" name=\"\">\n                    <span>Browse</span>\n                  </div>\n                  <input type=\"text\" name=\"\">\n                  <button class=\"add-btn\" (click)=\"openAmenitiesModal(addAmenitiesModal, '', '', '', '', 1)\">\n                    <img src=\"./../../../../assets/img/add.png\" alt=\"img\">\n                  </button>\n              </div> -->\n            </div>\n        </div>\n      </div>\n\n      <div class=\"tabel-section padding40\">\n        <div class=\"table-responsive\">\n            <table class=\"table table-striped\">\n              <tr>\n                  <th style=\"width:20%\">Image</th>\n                  <th style=\"width:30%; text-align:left;\">Name (English)</th>\n                  <th style=\"width:30%; text-align:left;\">Name (Spanish)</th>\n                  <th style=\"width:20%\">Action</th>\n              </tr>\n              <tr *ngFor=\"let item of parameter.amenities; let k=index\">\n                  <td>\n                    <!-- <i class=\"fa fa-building\"></i> -->\n                    <img alt=\"image\" height=\"30\" width=\"30\" src=\"{{item.icon}}\">\n                  </td>\n                  <td class=\"text-left\">\n                    {{item.name_en}}\n                  </td>\n                  <td class=\"text-left\">\n                    {{item.name_es}}\n                  </td>\n                  <td>\n                      <button title=\"Edit\" [disabled]=\"admin?.admin_acl['Settings']?.can_update==0\" \n                      (click)=\"openAmenityModal(addAmenityModal, k, item.id, item.icon, item.name_en, item.name_es, item.status)\" class=\"action-icon\"><img src=\"./../../../../assets/img/edit.png\" alt=\"img\"></button>\n                    \n                      <!-- status = 1 means unblocked -->\n                      <button [disabled]=\"admin?.admin_acl['Settings']?.can_delete==0\"\n                        (click)=\"addAmenityPopup(k, item.id, item.icon, item.name_en, item.name_es, item.status==1?0:1, item.status==1?'block':'unblock')\" \n                        title=\"{{item.status==1?'Block':'Unblock'}}\" [ngClass]=\"{'unblock-bg':item.status==0}\"\n                        class=\"action-icon\"><img src=\"assets/img/block.png\" alt=\"img\">\n                      </button>\n                    <!-- <a title=\"Edit Amenity\" (click)=\"openAmenityModal(addAmenityModal, item.id, item.icon, item.name_en, item.name_es, item.status)\" class=\"icon-block edit-icon\"><img src=\"./../../../../assets/img/edit.png\" alt=\"img\"></a>\n                    <a *ngIf=\"item.status == 1\" (click)=\"addAmenityPopup(item.id, item.icon, item.name_en, item.name_es, 0, 'block')\" title=\"Block Amenity\" class=\"icon-block block-icon\"><img src=\"./../../../../assets/img/unblock.png\" alt=\"img\"></a>\n                    <a *ngIf=\"item.status == 0\" (click)=\"addAmenityPopup(item.id, item.icon, item.name_en, item.name_es, 1, 'unblock')\" title=\"Unblock Amenity\" class=\"icon-block block-icon unblock-bg\"><img src=\"./../../../../assets/img/block.png\" alt=\"img\"></a> -->\n                  </td>\n              </tr>\n            </table>\n        </div>\n      </div>\n      <!-- <div class=\"btn-cont text-right padding40 paddingT0\">\n        <button class=\"btn btn-primary\">Save</button>\n      </div> -->\n  </div>\n</div>\n\n\n<!-- add configuration modal -->\n<ng-template #addPropertyConfigModal>\n  <div class=\"modal-content\">\n    <div class=\"modal-header my-modal-header\">\n      <h4 class=\"modal-title\">Edit Property Configuration</h4>\n      <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n    <form class=\"form-horizontal my-modal-form\" role=\"form\" novalidate #addForm=\"ngForm\" (ngSubmit)=\"checkIfConfigSpanishNameEntered(addForm, property.configuration.id, addForm.value.name_en, addForm.value.name_es, property.configuration.status, 'edit')\">\n      <div class=\"modal-body my-modal-body\">\n        <div class=\"form-group\">\n          <input autocomplete=\"off\" type=\"text\" class=\"form-control\" placeholder=\"Property Configuration (English)\" id=\"name_en\" required [(ngModel)]=\"property.configuration.name_en\" name=\"name_en\" #name_en=\"ngModel\">\n          <!-- <div *ngIf=\"name_en.errors && (name_en.dirty || name_en.touched)\" class=\"show-not-found\">\n              <div [hidden]=\"!name_en.errors.required\">\n                {{constant.errorMsg.PROPERTY_TYPE_REQUIRED}}\n              </div>\n          </div> -->\n        </div>\n        <div class=\"form-group\">\n          <input type=\"text\" class=\"form-control\" placeholder=\"Property Configuration (Spanish)\" [(ngModel)]=\"property.configuration.name_es\" name=\"name_es\">\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" [disabled]=\"admin?.admin_acl['Settings']?.can_update==0 || addForm.invalid\" class=\"btn btn-info\">Submit</button>\n        <button type=\"button\" class=\"btn btn-default\" aria-label=\"Close\" (click)=\"modalRef.hide()\">Close</button>\n      </div>\n    </form>\n  </div>\n</ng-template>\n\n\n<!-- add PropertyTypeModal modal -->\n<ng-template #addPropertyTypeModal>\n  <div class=\"modal-content\">\n    <div class=\"modal-header my-modal-header\">\n      <h4 class=\"modal-title\">Edit Property Type</h4>\n      <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\n        <span aria-hidden=\"true\">&times;</span>\n      </button>\n    </div>\n    <form class=\"form-horizontal my-modal-form\" role=\"form\" novalidate #addForm1=\"ngForm\" (ngSubmit)=\"checkIfTypeSpanishNameEntered(addForm1, property.type.id, addForm1.value.name_en, addForm1.value.name_es, property.type.status, 'edit')\">\n      <div class=\"modal-body my-modal-body\">\n        <div class=\"form-group\">\n          <input type=\"text\" class=\"form-control\" placeholder=\"Property type (English)\" id=\"name_en\" required [(ngModel)]=\"property.type.name_en\" name=\"name_en\" #name_en=\"ngModel\">\n          <!-- <div *ngIf=\"name_en.errors && (name_en.dirty || name_en.touched)\" class=\"show-not-found\">\n              <div [hidden]=\"!name_en.errors.required\">\n                {{constant.errorMsg.PROPERTY_TYPE_REQUIRED}}\n              </div>\n          </div> -->\n        </div>\n        <div class=\"form-group\">\n          <input type=\"text\" class=\"form-control\" placeholder=\"Property type (Spanish)\" [(ngModel)]=\"property.type.name_es\" name=\"name_es\">\n        </div>\n      </div>\n      <div class=\"modal-footer\">\n        <button type=\"submit\" [disabled]=\"admin?.admin_acl['Settings']?.can_update==0 || addForm1.invalid\" class=\"btn btn-info\">Submit</button>\n        <button type=\"button\" class=\"btn btn-default\" aria-label=\"Close\" (click)=\"modalRef.hide()\">Close</button>\n      </div>\n    </form>\n  </div>\n</ng-template>\n\n\n<!-- addAmenitiesModal -->\n<ng-template #addAmenityModal>\n    <div class=\"modal-content\">\n      <div class=\"modal-header my-modal-header\">\n        <h4 class=\"modal-title\">Edit Amenity</h4>\n        <button type=\"button\" class=\"close pull-right\" aria-label=\"Close\" (click)=\"modalRef.hide()\">\n          <span aria-hidden=\"true\">&times;</span>\n        </button>\n      </div>\n      <form class=\"form-horizontal my-modal-form\" role=\"form\" novalidate #addForm2=\"ngForm\" (ngSubmit)=\"checkIfAmenitySpanishNameEntered(addForm2, property.amenities.id, '', addForm2.value.name_en, addForm2.value.name_es, property.amenities.status, 'edit')\">\n        <div class=\"modal-body my-modal-body\">\n          <div class=\"form-group amenity-img\">\n            <img src=\"{{property.amenities.icon}}\" width=\"100\" height=\"100\" class=\"image1\">\n          </div>\n          <div class=\"form-group\">\n            <input accept=\"image/*\" (change)=\"changeListner1($event)\" type=\"file\" class=\"form-control\">\n          </div>\n          <div class=\"form-group\">\n            <input type=\"text\" class=\"form-control\" placeholder=\"Amenity (English)\" id=\"name_en\" required [(ngModel)]=\"property.amenities.name_en\" name=\"name_en\" #name_en=\"ngModel\">\n            <!-- <div *ngIf=\"name_en.errors && (name_en.dirty || name_en.touched)\" class=\"show-not-found\">\n                <div [hidden]=\"!name_en.errors.required\">\n                  {{constant.errorMsg.PROPERTY_TYPE_REQUIRED}}\n                </div>\n            </div> -->\n          </div>\n          <div class=\"form-group\">\n            <input type=\"text\" class=\"form-control\" placeholder=\"Amenity (Spanish)\" [(ngModel)]=\"property.amenities.name_es\" name=\"name_es\">\n          </div>\n        </div>\n        <div class=\"modal-footer\">\n          <button type=\"submit\" [disabled]=\"admin?.admin_acl['Settings']?.can_update==0 || addForm2.invalid\" class=\"btn btn-info\">Submit</button>\n          <button type=\"button\" class=\"btn btn-default\" aria-label=\"Close\" (click)=\"modalRef.hide()\">Close</button>\n        </div>\n      </form>\n  </div>\n</ng-template>\n  ","import { Component, OnInit, TemplateRef, ElementRef } from '@angular/core';\nimport { AdminService } from '../../../services/admin.service';\nimport { Router } from '@angular/router';\nimport { IProperty } from '../../../common/property';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { Constant } from './../../../common/constants';\nimport { Property } from './../../../models/property.model';\nimport { NgForm } from '@angular/forms';\ndeclare let swal: any;\n\n@Component({\n  selector: 'app-property',\n  templateUrl: './property.component.html',\n  styleUrls: ['./property.component.css'],\n  providers: [Constant, Property]\n})\n\nexport class PropertyComponent implements OnInit {\n\n  public parameter: IProperty = {};\n  public modalRef: BsModalRef;\n  icon: any;\n\n  constructor(private element: ElementRef, private constant: Constant, public property: Property,\n    private modalService: BsModalService, public admin: AdminService, private router: Router\n  ) {\n    this.parameter.index = -1;\n    this.parameter.countryCount = 0;\n    this.parameter.stateCount = 0;\n    this.parameter.cityCount = 0;\n  }\n\n  ngOnInit() {\n    this.getConfigurations();\n    this.getPropertyTypes();\n    this.getAmenities();\n  }\n\n  public openPropertyConfigModal(template: TemplateRef<any>, index, id, name_en, name_es, status) {\n    this.parameter.index = index;\n    this.property.configuration.id = id;\n    this.property.configuration.name_en = name_en;\n    this.property.configuration.name_es = name_es == null ? name_en : name_es;\n    this.property.configuration.status = status;\n    this.modalRef = this.modalService.show(template);\n  }\n\n  public openPropertyTypeModal(template: TemplateRef<any>, index, id, name_en, name_es, status) {\n    this.parameter.index = index;\n    this.property.type.id = id;\n    this.property.type.name_en = name_en;\n    this.property.type.name_es = name_es;\n    this.property.type.status = status;\n    this.modalRef = this.modalService.show(template);\n  }\n\n  public openAmenityModal(template: TemplateRef<any>, index, id, icon, name_en, name_es, status) {\n    this.parameter.index = index;\n    this.property.amenities.id = id;\n    this.property.amenities.icon = icon;\n    this.property.amenities.name_en = name_en;\n    this.property.amenities.name_es = name_es;\n    this.property.amenities.status = status;\n    this.modalRef = this.modalService.show(template);\n  }\n\n\n  addPropertyConfiguration(id, name_en, name_es, status, type) {\n    if (type === 'edit') {this.modalRef.hide(); }\n    this.parameter.url = 'addConfiguration';\n    const input = new FormData();\n    input.append('name_en', name_en);\n    input.append('name_es', name_es);\n    input.append('status', status);\n\n    if (id) {input.append('id', id); }\n    this.parameter.loading = true;\n    this.admin.postDataApi(this.parameter.url, input)\n      .subscribe(\n        success => {\n          this.parameter.loading = false;\n          const text = id ?\n            this.constant.successMsg.PROPERTY_CONFIG_UPDATED_SUCCESSFULLY :\n            this.constant.successMsg.PROPERTY_CONFIG_ADDED_SUCCESSFULLY;\n          // this.getConfigurations();\n          this.property.configuration.id = '';\n          this.property.configuration.name_en = '';\n          this.property.configuration.name_es = '';\n          swal('Success', text, 'success');\n          if (this.parameter.index !== -1) {\n            this.parameter.items[this.parameter.index] = success.data;\n          } else {\n            this.parameter.items.push(success.data);\n          }\n          this.parameter.index = -1;\n        }, error => {\n          this.parameter.loading = false;\n        }\n      );\n  }\n\n  addPropertyType(id, name_en, name_es, status, type) {\n    if (type === 'edit') {this.modalRef.hide(); }\n    this.parameter.url = 'addPropertyType';\n    const input = new FormData();\n    input.append('name_en', name_en);\n    input.append('name_es', name_es);\n    input.append('status', status);\n\n    if (id) {input.append('id', id); }\n    this.parameter.loading = true;\n    this.admin.postDataApi(this.parameter.url, input)\n      .subscribe(\n        success => {\n          this.parameter.loading = false;\n          const text = id ?\n            this.constant.successMsg.PROPERTY_TYPE_UPDATED_SUCCESSFULLY :\n            this.constant.successMsg.PROPERTY_TYPE_ADDED_SUCCESSFULLY;\n          swal('Success', text, 'success');\n          this.property.type.id = '';\n          this.property.type.name_en = '';\n          this.property.type.name_es = '';\n          if (this.parameter.index !== -1) {\n            this.parameter.propertyTypes[this.parameter.index] = success.data;\n          } else {\n            this.parameter.propertyTypes.push(success.data);\n          }\n          this.parameter.index = -1;\n        }, error => {\n          this.parameter.loading = false;\n        }\n      );\n  }\n\n\n  addAmenity(id, icon, name_en, name_es, status, type) {\n    if (type === 'edit') {this.modalRef.hide(); }\n    const iconNew = this.icon ? this.icon : this.property.amenities.icon;\n    this.parameter.url = 'addPropertyAmenity';\n    const input = new FormData();\n    input.append('name_en', name_en);\n    input.append('name_es', name_es);\n    input.append('status', status);\n\n    if (this.icon) {input.append('icon', iconNew); }\n\n    if (id) {input.append('id', id); }\n    this.parameter.loading = true;\n    this.admin.postDataApi(this.parameter.url, input)\n      .subscribe(\n        success => {\n          this.parameter.loading = false;\n          const text = id ?\n          this.constant.successMsg.AMENITY_UPDATED_SUCCESSFULLY :\n          this.constant.successMsg.AMENITY_ADDED_SUCCESSFULLY;\n          swal('Success', text, 'success');\n          this.property.amenities.id = '';\n          this.property.amenities.name_en = '';\n          this.property.amenities.name_es = '';\n          this.property.amenities.icon = '';\n          if (this.parameter.index !== -1) {\n            this.parameter.amenities[this.parameter.index] = success.data;\n          } else {\n            this.parameter.amenities.push(success.data);\n          }\n          this.parameter.index = -1;\n        }, error => {\n          this.parameter.loading = false;\n        }\n      );\n  }\n\n\n  getConfigurations() {\n    this.parameter.loading = true;\n    this.parameter.url = 'getConfigurations';\n    const input = new FormData();\n    this.admin.postDataApi(this.parameter.url, input)\n      .subscribe(\n        success => {\n          this.parameter.loading = false;\n          this.parameter.items = success.data;\n          this.parameter.total = success.data.length;\n        },\n        error => {\n          this.parameter.loading = false;\n        }\n      );\n  }\n\n\n  getPropertyTypes() {\n    this.parameter.loading = true;\n    this.parameter.url = 'getPropertyTypes';\n    const input = new FormData();\n    this.admin.postDataApi(this.parameter.url, input)\n      .subscribe(\n        success => {\n          this.parameter.loading = false;\n          this.parameter.propertyTypes = success.data;\n          this.parameter.propertyTypesCount = success.data.length;\n        },\n        error => {\n          this.parameter.loading = false;\n        }\n      );\n  }\n\n  getAmenities() {\n    this.parameter.loading = true;\n    this.parameter.url = 'getPropertyAmenities';\n    const input = new FormData();\n    this.admin.postDataApi(this.parameter.url, input)\n      .subscribe(\n        success => {\n          this.parameter.loading = false;\n          this.parameter.amenities = success.data;\n          this.parameter.amenitiesCount = success.data.length;\n        }, error => {\n          this.parameter.loading = false;\n        }\n      );\n  }\n\n  addPropertyConfigurationPopup(index, id, name_en, name_es, status, type) {\n    this.parameter.index = index;\n    const self = this;\n    const text = status === 1 ? this.constant.title.UNBLOCK_PROPERTY_CONFIG : this.constant.title.BLOCK_PROPERTY_CONFIG;\n    swal({\n      // title: this.constant.title.ARE_YOU_SURE,\n      // text: status === 1 ? this.constant.title.UNBLOCK_PROPERTY_CONFIG : this.constant.title.BLOCK_PROPERTY_CONFIG,\n      html: this.constant.title.ARE_YOU_SURE + '<br>' + text,\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: this.constant.confirmButtonColor,\n      cancelButtonColor: this.constant.cancelButtonColor,\n      confirmButtonText: 'Yes'\n    }).then((result) => {\n      if (result.value) {\n        this.addPropertyConfiguration(id, name_en, name_es, status, type);\n      }\n    });\n  }\n\n  addPropertyTypePopup(index, id, name_en, name_es, status, type) {\n    this.parameter.index = index;\n    const self = this;\n    const text = status === 1 ? this.constant.title.UNBLOCK_PROPERTY_TYPE : this.constant.title.BLOCK_PROPERTY_TYPE;\n    swal({\n      // title: this.constant.title.ARE_YOU_SURE,\n      // text: status === 1 ? this.constant.title.UNBLOCK_PROPERTY_TYPE : this.constant.title.BLOCK_PROPERTY_TYPE,\n      html: this.constant.title.ARE_YOU_SURE + '<br>' + text,\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: this.constant.confirmButtonColor,\n      cancelButtonColor: this.constant.cancelButtonColor,\n      confirmButtonText: 'Yes'\n    }).then((result) => {\n      if (result.value) {\n        this.addPropertyType(id, name_en, name_es, status, type);\n      }\n    });\n  }\n\n  addAmenityPopup(index, id, icon, name_en, name_es, status, type) {\n    this.parameter.index = index;\n    const self = this;\n    const text = status === 1 ? this.constant.title.UNBLOCK_AMENITY : this.constant.title.BLOCK_AMENITY;\n    swal({\n      // title: this.constant.title.ARE_YOU_SURE,\n      // text: status === 1 ? this.constant.title.UNBLOCK_AMENITY : this.constant.title.BLOCK_AMENITY,\n      html: this.constant.title.ARE_YOU_SURE + '<br>' + text,\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: this.constant.confirmButtonColor,\n      cancelButtonColor: this.constant.cancelButtonColor,\n      confirmButtonText: 'Yes'\n    }).then((result) => {\n      if (result.value) {\n        this.addAmenity(id, icon, name_en, name_es, status, type);\n      }\n    });\n  }\n\n  checkIfConfigSpanishNameEntered(formdata: NgForm, id, name_en, name_es, status, type) {\n    const self = this;\n    formdata.reset();\n    if (name_es === '') {\n      swal({\n        text: this.constant.errorMsg.SAVE_ENGLISH_PROPERTY_CONFIG,\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: this.constant.confirmButtonColor,\n        cancelButtonColor: this.constant.cancelButtonColor,\n        confirmButtonText: 'Yes'\n      }).then((result) => {\n        if (result.value) {\n          this.addPropertyConfiguration(id, name_en, name_en, status, type);\n        }\n      });\n    }else {\n      self.addPropertyConfiguration(id, name_en, name_es, status, type);\n    }\n  }\n\n\n  checkIfTypeSpanishNameEntered(formdata: NgForm, id, name_en, name_es, status, type) {\n    const self = this;\n    formdata.reset();\n    if (name_es === '') {\n      swal({\n        text: this.constant.errorMsg.SAVE_ENGLISH_PROPERTY_TYPE,\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: this.constant.confirmButtonColor,\n        cancelButtonColor: this.constant.cancelButtonColor,\n        confirmButtonText: 'Yes'\n      }).then((result) => {\n        if (result.value) {\n          this.addPropertyType(id, name_en, name_en, status, type);\n        }\n      });\n    }else {\n      self.addPropertyType(id, name_en, name_es, status, type);\n    }\n  }\n\n\n  checkIfAmenitySpanishNameEntered(formdata: NgForm, id, icon, name_en, name_es, status, type) {\n    const self = this;\n    formdata.reset();\n    if (name_es === '') {\n      swal({\n        text: this.constant.errorMsg.SAVE_ENGLISH_AMENITY,\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: this.constant.confirmButtonColor,\n        cancelButtonColor: this.constant.cancelButtonColor,\n        confirmButtonText: 'Yes'\n      }).then((result) => {\n        if (result.value) {\n          this.addAmenity(id, icon, name_en, name_en, status, type);\n        }\n      });\n    }else {\n      self.addAmenity(id, icon, name_en, name_es, status, type);\n    }\n  }\n\n\n  changeListner(event) {\n    const reader = new FileReader();\n    const image = this.element.nativeElement.querySelector('.image');\n    const fileToUpload = event.target.files[0];\n    this.icon = fileToUpload;\n\n    reader.onload = function(e) {\n        const src = e.target['result'];\n        image.src = src;\n    };\n\n    reader.readAsDataURL(event.target.files[0]);\n  }\n\n\n  changeListner1(event) {\n    const reader = new FileReader();\n\n    const image = this.element.nativeElement.querySelector('.image1');\n\n    const fileToUpload = event.target.files[0];\n    this.icon = fileToUpload;\n\n    reader.onload = function(e) {\n        const src = e.target['result'];\n        image.src = src;\n    };\n\n    reader.readAsDataURL(event.target.files[0]);\n  }\n}\n","// third party libraries\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxLoadingModule, ngxLoadingAnimationTypes } from 'ngx-loading';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { AgmCoreModule } from '@agm/core';\nimport { Ng2TelInputModule } from 'ng2-tel-input';\nimport { Routes, RouterModule } from '@angular/router';\n\n// components\nimport { LocationComponent } from './location/location.component';\nimport { SettingsComponent } from './settings.component';\nimport { LocalityComponent } from './locality/locality.component';\nimport { PropertyComponent } from './property/property.component';\nimport { ProjectComponent } from './project/project.component';\nimport { EditProfileComponent } from './edit-profile/edit-profile.component';\nimport { DocumentsComponent } from './documents/documents.component';\nimport { AclUserGuard } from '../../guards/acl-user.guard';\nimport { ProfileComponent } from './profile/profile.component';\nimport { ChangePasswordComponent } from './change-password/change-password.component';\nimport { DefaultSettingsComponent } from './default-settings/default-settings.component';\n\nconst routes: Routes = [\n  { path: 'view-profile', component: ProfileComponent },\n  { path: 'change-password', component: ChangePasswordComponent },\n  { path: 'default-settings', component: DefaultSettingsComponent },\n  { path: 'edit-profile', component: EditProfileComponent,\n    canActivate: [AclUserGuard], data: {roles: ['Settings', 'can_read', '']}},\n  { path: 'setting-location', component: LocationComponent,\n    canActivate: [AclUserGuard], data: {roles: ['Settings', 'can_read', '']}},\n  { path: 'setting-locality', component: LocalityComponent,\n    canActivate: [AclUserGuard], data: {roles: ['Settings', 'can_read', '']}},\n  { path: 'setting-property', component: PropertyComponent,\n    canActivate: [AclUserGuard], data: {roles: ['Settings', 'can_read', '']}},\n  { path: 'setting-project', component: ProjectComponent,\n    canActivate: [AclUserGuard], data: {roles: ['Settings', 'can_read', '']}},\n  { path: 'documents-listing', component: DocumentsComponent,\n    canActivate: [AclUserGuard], data: {roles: ['Settings', 'can_read', '']}}\n];\n\n\n@NgModule({\n\n  declarations: [\n    EditProfileComponent,\n    LocationComponent,\n    LocalityComponent,\n    PropertyComponent,\n    ProjectComponent,\n    SettingsComponent,\n    DocumentsComponent,\n    ProfileComponent,\n    ChangePasswordComponent,\n    DefaultSettingsComponent\n  ],\n  imports: [\n    RouterModule.forChild(routes),\n    CommonModule,\n    TranslateModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ModalModule.forRoot(),      // modal\n    NgxLoadingModule.forRoot({\n      animationType: ngxLoadingAnimationTypes.rectangleBounce,\n      primaryColour: '#00B96F'\n    }),\n    AgmCoreModule.forRoot({\n        apiKey: 'AIzaSyCYv_zELZGVo2Ehzgp8eh8UeSIidhMCmH8',\n        libraries: ['drawing', 'places']\n      }),\n    Ng2TelInputModule\n  ],\n  exports: [RouterModule]\n})\n\nexport class SettingsModule { }\n","export class Document {\n    id: number;\n    status: number;\n    name_en: string;\n    name_es: string;\n}\n","export class Locality {\n    id: any;\n    name_es: string;\n    name_en: string;\n    status: any;\n    city_id: any;\n    poly_coordinates: any;\n    price_per_sqft: any;\n    // public localityModel = {\n    //     id: '',\n    //     name_es: '',\n    //     name_en: '',\n    //     status: 0,\n    //     city_id: '',\n    //     poly_coordinates: [],\n    //     price_per_sqft: ''\n    // };\n}\n","export class Location {\n    public countryModel = {\n        country_id: '',\n        name_es: '',\n        name_en: '',\n        status: 0\n    };\n\n    public stateModel = {\n        country_id: '',\n        state_id: '',\n        name_es: '',\n        name_en: '',\n        status: 0\n    };\n\n    public cityModel = {\n        country_id: '',\n        state_id: '',\n        city_id: '',\n        name_es: '',\n        name_en: '',\n        status: 0\n    };\n\n    public localityModel = {\n        city_id: '',\n        locality_id: '',\n        name_es: '',\n        name_en: '',\n        status: 0,\n        poly_coordinates: []\n    };\n}\n","export class Project {\n    public possession = {\n        id: '',\n        name_es: '',\n        name_en: '',\n        status: 0\n    };\n\n    public type = {\n        id: '',\n        name_es: '',\n        name_en: '',\n        status: 0\n    };\n\n    public amenities = {\n        id: '',\n        icon: '',\n        name_es: '',\n        name_en: '',\n        status: 0\n    };\n}\n\nexport class Amenities {\n    id: string;\n    icon: string;\n    name_es: string;\n    name_en: string;\n    status: string;\n}\n","export class Property {\n    public configuration = {\n        id: '',\n        name_es: '',\n        name_en: '',\n        status: 0\n    };\n\n    public type = {\n        id: '',\n        name_es: '',\n        name_en: '',\n        status: 0\n    };\n\n    public amenities = {\n        id: '',\n        icon: '',\n        name_es: '',\n        name_en: '',\n        status: 0\n    };\n}\n","export class Settings {\n    bulk_approve_project: any;\n    bulk_approve_property: any;\n}\n"],"sourceRoot":""}