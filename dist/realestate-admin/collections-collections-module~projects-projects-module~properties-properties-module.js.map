{"version":3,"sources":["webpack:///./src/app/common/videoUpload.ts","webpack:///./src/app/models/addProject.model.ts"],"names":[],"mappings":"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","file":"collections-collections-module~projects-projects-module~properties-properties-module.js","sourcesContent":["export class VideoUpload {\n\n  http: any; env: any; us: any;\n\n  single = true;\n  file: any;\n  image: any;\n  files: any;\n  loading = false;\n  backupArray: any;\n\n  constructor(single: any, us) {\n    this.us = us;\n    this.single = single;\n    if (this.single != true) {\n      this.files = [];\n    }\n  }\n\n  // upload = true means upload file just after reading\n  onSelectFile(event, upload = false) {\n\n    if (event.target.files && event.target.files[0]) {\n      const total = event.target.files.length;\n      for (let index = 0; index < event.target.files.length; index++) {\n        this.loading = true;\n        const reader = new FileReader();\n        reader.onload = (e: any) => {\n          const src = e.target['result'];\n          // videoTest.src = src;\n          const timer = setInterval(() => {\n            // find duration of video only of video is in ready state\n            // if (videoTest.readyState === 4) {\n            //   setTimeout(() => {\n            //     // create canvas at middle of video\n            //     this.newcanvas(videoTest, event.target.files[0]);\n            //   }, 3000);\n            //   clearInterval(timer);\n            // }\n          }, 100);\n          if (this.single == true) {\n            this.image = e.target.result;\n            this.file = event.target.files[index];\n          } else {\n            const model: any = {};\n            model.image = e.target.result;\n            model.video = event.target.files[index];\n            model.thumb = event.target.files[index];\n            model.loading = false;\n            this.files.push(model);\n          }\n\n          this.loading = false;\n          if (index == (event.target.files.length - 1) && upload == true) {\n            this.upload().then(r => {\n              this.loading = false;\n            });\n          }\n        };\n        reader.readAsDataURL(event.target.files[index]);\n      }\n    }\n  }\n\n\n  newcanvas(video: any, videoFile: File) {\n    const canvas = document.getElementById('canvas') as HTMLCanvasElement;\n    const ss = canvas.getContext('2d').drawImage(video, 0, 0, video.videoWidth, video.videoHeight,\n      0, 0, canvas.width, canvas.height);\n    const ImageURL = canvas.toDataURL('image/jpeg');\n    // model.image = ImageURL;\n    const fileToUpload = this.dataURLtoFile(ImageURL, 'tempFile.png');\n    this.us.saveVideo(videoFile, fileToUpload).subscribe(\n      success => {\n        // const videoObj = {\n        //   video: '', thumb: ''\n        // };\n        // videoObj.video = success['data'].video;\n        // videoObj.thumb = success['data'].thumb;\n        // this.model.videos = [videoObj];\n      }, error => {\n        // console.log(error);\n      }\n    );\n  }\n\n  dataURLtoFile(dataurl: any, filename: string) {\n    const arr = dataurl.split(',');\n    const mime = arr[0].match(/:(.*?);/)[1];\n    const bstr = atob(arr[1]);\n    let n = bstr.length;\n    const u8arr = new Uint8Array(n);\n    while (n--) {\n      u8arr[n] = bstr.charCodeAt(n);\n    }\n    return new File([u8arr], filename, { type: mime });\n  }\n\n  getFile() {\n    return this.file;\n  }\n\n  getFiles() {\n    return this.files;\n  }\n\n  upload(): Promise<any> {\n    return new Promise((resolve, reject) => {\n      if (this.single == false) {\n        const total = this.files.length;\n        let i = 1;\n        this.files.map(async (item) => {\n          if (item.fileToUpload) {\n            const formData = new FormData();\n            formData.append('video', item);\n            // formData.append('thumb', item.fileToUpload);\n            item.loading = true;\n            await this.us.postDataApi('saveVideo', formData).subscribe(res => {\n              delete item.fileToUpload;\n              item.video = res['data'].video;\n              item.thumb = res['data'].thumb;\n              item.loading = false;\n              if (i == total) { resolve(); }/* resolve on last loop */\n              i++;\n            }, error => {\n              if (i === total) { reject(error); }/* reject on last loop */\n              i++;\n            });\n          } else {\n            if (i >= total) { resolve(); }\n            i++;\n          }\n        });\n      }\n      if (this.single === true && this.file) {\n        // const formData = new FormData();\n        // formData.append('video', this.file);\n        // formData.append('thumb', this.file);\n        // this.image.loading = true;\n        // this.us.postDataApi('saveImage', formData).subscribe(res => {\n        //   this.file = '';\n        //   this.image = res['data'].image;\n        //   this.image.loading = false;\n        //   resolve();\n        // },\n        //   error => {\n        //     reject(error);\n        //   });\n      } else {\n        resolve();\n      }\n    });\n  }\n\n  remove(index: any) {\n    this.files.splice(index, 1);\n  }\n\n  backup(files: any) {\n    this.backupArray = files;\n    this.files = files;\n  }\n\n  reset() {\n    this.files = JSON.parse(JSON.stringify(this.backup));\n  }\n\n}\n","import {City} from './location.model';\nimport { Manager, Company } from './company.model';\n\nexport class CarpetAreas {\n  carpet_areas: Array<object> = [\n    {\n      area: 0,\n      price: 0\n    }\n  ];\n}\n\nexport class AddProjectModel {\n  id = '';\n  building_id = '';\n  country_id = '';\n  state_id = '';\n  city_id = '';\n  locality_id = '';\n  name = '';\n  for_rent = false;\n  for_sale = true;\n  floors: any = '';\n  address = '';\n  avg_price = '';\n  cover_image: File;\n  images: any = [];\n  images360: any = [];\n  videos: any = [];\n  amenvideos: any = [];\n  allAmenvideos: any = [];\n  building_images: any = [];\n  description = '';\n  amenities = [];\n  lat: any = '';\n  lng: any = '';\n  custom_attributes = [];\n  custom_values = [];\n  configurations = [];\n  // configurations: Array<Configuration>;\n  // Preferable buyers\n  pets = 1;\n  kids_friendly = 1;\n  students_friendly = 1;\n  lgtb_friendly = 1;\n  mature_people_friendly = 1;\n  marital_status: any = [1];\n\n  developer = {\n    id: '',\n    name: '',\n    email: '',\n    country_code: '',\n    dial_code: '',\n    phone: '',\n    logo: '',\n    image: '',\n    developer_image: '',\n    developer_company: '',\n    developer_desc: ''\n  };\n  developer_id: any;\n  dev_countrycode: any = '';\n  dev_dialcode: any = '';\n  dev_email: any = '';\n  dev_phone: any = '';\n  dev_name: any = '';\n  dev_logo: any = '';\n\n  building_age = '';\n  building_type = '';\n  building_type_id: any = '';\n  possession_status_id: any = '';\n  launch_date: any = '';\n  main_image: any = '';\n  is_completed: any;\n  building_request_id: '';\n  building_towers: Array<Towers>;\n  building_tower_edit_index: any;\n  videoLoader: boolean;\n  locality: LocalityToCountry;\n  manager?: Manager;\n  manager_id: number;\n  company?: Company;\n  company_id: number;\n  selected?: boolean;\n  policies?: string;\n  maintenance_cost?: string;\n  maintenance?: string;\n}\n\n\nexport class Configuration {\n  base_price: any = '';\n  building_id: any = '';\n  carpet_area: any = '';\n  config: any = {\n    created_at: '',\n    created_by: '',\n    id: '',\n    name: '',\n    name_en: '',\n    name_es: '',\n    bedroom: 0,\n    bathroom: 0,\n    half_bathroom: 0,\n    status: '',\n    updated_at: ''\n  };\n  configuration_id: any = '';\n  building_configuration_id: any = '';\n  created_at: any = '';\n  created_by: any = '';\n  floor_map_image: any = '';\n  id: any = '';\n  other_images: any = [];\n  images_files: any = [];\n  images_path: any = [];\n  images: any = [];\n  images360: any = [];\n  videos: any = [];\n  updated_at: any = '';\n  name: any = '';\n}\n\nexport class Towers {\n  id?: string;\n  building_id: string;\n  tower_name: string;\n  num_of_floors: number;\n  possession_status_id: string;\n  launch_date: string;\n  amenities: Array<AmenitiesShowObj>;\n  amenitiesId: Array<string>;\n  floor_array?: Array<number>;\n  amenitiesCount?: number;\n  // amenities: Array<any>;\n  // amenitiesId: Array<any>;\n}\n\nexport class AmenitiesShowObj {\n  id: string;\n  name_en: string;\n  name_es: string;\n  icon: string;\n  name: string;\n  selected: boolean;\n  images: Array<string>;\n  images_360: Array<string>;\n  videos: Array<string>;\n}\n\nexport class LocalityToCountry {\n  id: any;\n  name_es: string;\n  name_en: string;\n  status: any;\n  city_id: any;\n  poly_coordinates: any;\n  price_per_sqft: any;\n  city: City;\n}\n"],"sourceRoot":""}