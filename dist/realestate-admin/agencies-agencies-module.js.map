{"version":3,"sources":["webpack:///./src/app/layout/agencies/add-agency/add-agency.component.css","webpack:///./src/app/layout/agencies/add-agency/add-agency.component.html","webpack:///./src/app/layout/agencies/add-agency/add-agency.component.ts","webpack:///./src/app/layout/agencies/agencies.component.css","webpack:///./src/app/layout/agencies/agencies.component.html","webpack:///./src/app/layout/agencies/agencies.component.ts","webpack:///./src/app/layout/agencies/agencies.module.ts"],"names":[],"mappings":"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","file":"agencies-agencies-module.js","sourcesContent":["module.exports = \"\"","module.exports = \"<ngx-loading [show]=\\\"parameter.loading\\\"></ngx-loading>\\n<div class=\\\"container-fluid\\\">\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n      <div class=\\\"title-group\\\">\\n          <h5>{{model.id ? 'Edit' : 'Add'}} Agency</h5>\\n          <div class=\\\"spacer30\\\"></div>\\n      </div>\\n    </div>\\n</div>\\n\\n<div class=\\\"white-bg padding40\\\">\\n    <div class=\\\"row\\\">\\n    <form role=\\\"form\\\" ngNativeValidate #addForm=\\\"ngForm\\\" (ngSubmit)=\\\"add(addForm)\\\">\\n      <div class=\\\"col-xl-12 col-lg-12 col-md-12 col-12\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-2\\\">\\n                <div class=\\\"add-img\\\" style=\\\"display:flex;\\\">\\n                    <img *ngIf=\\\"image\\\" [src]=\\\"image\\\" style=\\\"object-fit: cover; width: 100%;\\\">\\n                    <label *ngIf=\\\"model?.image\\\">\\n                      <input accept=\\\"image/*\\\" name=\\\"image\\\" class=\\\"image\\\" (change)=\\\"changeListner($event, 'image')\\\" type=\\\"file\\\">\\n                    </label>\\n                    <label *ngIf=\\\"!image\\\">+ Add Image</label>\\n                    <input *ngIf=\\\"!image\\\" accept=\\\"image/*\\\" name=\\\"image\\\" class=\\\"image\\\" (change)=\\\"changeListner($event, 'image')\\\" type=\\\"file\\\">\\n                </div>\\n            </div>\\n            <!-- <div class=\\\"col-2\\\">\\n                <div class=\\\"add-img\\\" style=\\\"display:flex;\\\">\\n                    <img *ngIf=\\\"developer_image\\\" [src]=\\\"developer_image\\\" style=\\\"object-fit: cover; width: 100%;\\\">\\n                    <label *ngIf=\\\"model?.developer_image\\\">\\n                      <input accept=\\\"image/*\\\" name=\\\"image\\\" class=\\\"image\\\" (change)=\\\"changeListner($event, 'developer_image')\\\" type=\\\"file\\\">\\n                    </label>\\n                    <label *ngIf=\\\"!developer_image\\\">+ Add Cover Image</label>\\n                    <input *ngIf=\\\"!developer_image\\\" accept=\\\"image/*\\\" name=\\\"image\\\" class=\\\"image\\\" (change)=\\\"changeListner($event, 'developer_image')\\\" type=\\\"file\\\">\\n                </div>\\n            </div> -->\\n            <div class=\\\"col-8\\\">\\n                <div class=\\\"btn-cont text-right\\\">\\n                    <button *ngIf=\\\"!model?.id\\\" type=\\\"submit\\\" [disabled]=\\\"!addForm.valid\\\" class=\\\"btn btn-primary\\\">ADD</button>\\n                    <button *ngIf=\\\"model?.id\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">UPDATE</button>\\n                </div>\\n            </div>\\n            <div class=\\\"col-12\\\">\\n                <div class=\\\"spacer40\\\"></div>\\n            </div>\\n            <div class=\\\"col-12\\\">\\n                <div class=\\\"form-group-2\\\">\\n                  <label>Company Name <span class=\\\"color-red\\\">*</span></label>\\n                  <input autocomplete=\\\"off\\\" required type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"model.name\\\" name=\\\"name\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"col-12\\\">\\n                <div class=\\\"form-group-2\\\">\\n                  <label>Contact number <span class=\\\"color-red\\\">*</span></label>\\n                  <input minlength=\\\"6\\\" maxlength=\\\"16\\\" autocomplete=\\\"off\\\" type=\\\"text\\\" [pattern]=\\\"constant.phonePattern\\\" class=\\\"form-control\\\" id=\\\"phone\\\" required minlength=\\\"1\\\" [(ngModel)]=\\\"model.phone\\\" name=\\\"phone\\\"\\n                        ng2TelInput [ng2TelInputOptions]=\\\"initialCountry\\\" (countryChange)=\\\"onCountryCodeChange($event)\\\" />\\n                </div>\\n            </div>\\n            <div class=\\\"col-12\\\">\\n                <div class=\\\"form-group-2\\\">\\n                  <label>Email ID <span class=\\\"color-red\\\">*</span></label>\\n                  <input (keydown.space)=\\\"$event.preventDefault();\\\" autocomplete=\\\"off\\\" required [pattern]=\\\"constant.emailPattern\\\" type=\\\"email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"model.email\\\" name=\\\"email\\\">\\n                </div>\\n            </div>\\n            <!-- <div class=\\\"col-12\\\">\\n                <div class=\\\"form-group-2\\\">\\n                  <label>Company Name <span class=\\\"color-red\\\">*</span></label>\\n                  <input autocomplete=\\\"off\\\" required type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"model.developer_company\\\" name=\\\"developer_company\\\">\\n                </div>\\n            </div> -->\\n\\n            <div class=\\\"col-12\\\">\\n                <div class=\\\"form-group-2\\\">\\n                  <label>Address <span class=\\\"color-red\\\">*</span></label>\\n                  <input placeholder=\\\"Search for address\\\" autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" spellcheck=\\\"off\\\" type=\\\"text\\\" class=\\\"form-control\\\" #search (input)=\\\"loadPlaces('address', 'lat', 'lng', 'searchElementRef')\\\" name=\\\"address\\\" [(ngModel)]=\\\"model.address\\\" autocomplete=\\\"off\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"col-12\\\">\\n              <div class=\\\"form-group-2\\\">\\n                  <label>Location Pin on Map<span class=\\\"color-red\\\">*</span></label>\\n                  <agm-map class=\\\"height200\\\" [latitude]=\\\"model.lat\\\" [longitude]=\\\"model.lng\\\" [scrollwheel]=\\\"false\\\" (mapClick)=\\\"placeMarker($event, 'lat', 'lng')\\\" [zoom]=\\\"constant.zoom\\\">\\n                    <agm-marker [latitude]=\\\"model.lat\\\" [longitude]=\\\"model.lng\\\"></agm-marker>\\n                  </agm-map>\\n              </div>\\n            </div>\\n            <div class=\\\"col-12\\\">\\n              <div class=\\\"form-group-2\\\">\\n                <label>Description <span class=\\\"color-red\\\">*</span></label>\\n                <textarea autocomplete=\\\"off\\\" required rows=\\\"3\\\" class=\\\"form-control\\\" name=\\\"description\\\" [(ngModel)]=\\\"model.description\\\"></textarea>\\n              </div>\\n            </div>\\n            <div class=\\\"col-12\\\">\\n              <div class=\\\"form-group-2\\\">\\n                <label>Branch Office</label>\\n                <input placeholder=\\\"Search for branch office\\\" autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\" spellcheck=\\\"off\\\" type=\\\"text\\\" class=\\\"form-control\\\" #search1 (input)=\\\"loadPlaces('branch_office', 'branch_lat', 'branch_lng', 'search1ElementRef')\\\" name=\\\"branch_office\\\" [(ngModel)]=\\\"model.branch_office\\\" autocomplete=\\\"off\\\">\\n              </div>\\n            </div>\\n            <div class=\\\"col-12\\\">\\n              <div class=\\\"form-group-2\\\">\\n                  <label>Location Pin on Map</label>\\n                  <agm-map class=\\\"height200\\\" [latitude]=\\\"model.branch_lat\\\" [longitude]=\\\"model.branch_lng\\\" [scrollwheel]=\\\"false\\\" (mapClick)=\\\"placeMarker($event, 'branch_lat', 'branch_lng')\\\" [zoom]=\\\"constant.zoom\\\">\\n                    <agm-marker [latitude]=\\\"model.branch_lat\\\" [longitude]=\\\"model.branch_lng\\\"></agm-marker>\\n                  </agm-map>\\n              </div>\\n            </div>\\n            \\n\\n\\n          </div>\\n      </div>\\n      </form>\\n    </div>\\n</div>\\n\"","import { Component, OnInit, NgZone, ViewChild, ElementRef } from '@angular/core';\nimport { AdminService } from './../../../services/admin.service';\nimport { CommonService } from './../../../services/common.service';\nimport { IProperty } from './../../../common/property';\nimport { ACL, Permission } from './../../../models/acl.model';\nimport { ActivatedRoute } from '@angular/router';\nimport { Constant } from './../../../common/constants';\nimport { NgForm } from '@angular/forms';\nimport { Users } from 'src/app/models/users.model';\nimport { MapsAPILoader } from '@agm/core';\nimport { Agency } from 'src/app/models/agency.model';\ndeclare const google: any;\ndeclare let swal: any;\n\n@Component({\n  selector: 'app-add-agency',\n  templateUrl: './add-agency.component.html',\n  styleUrls: ['./add-agency.component.css']\n})\nexport class AddAgencyComponent implements OnInit {\n\n  @ViewChild('mapDiv') mapDiv: ElementRef;\n  @ViewChild('search') searchElementRef: ElementRef;\n  @ViewChild('search1') search1ElementRef: ElementRef;\n  public parameter: IProperty = {};\n  initialCountry: any;\n  show = false;\n  image: any;\n  developer_image: any;\n  model: Agency;\n  constructor(\n    public constant: Constant,\n    private cs: CommonService,\n    private mapsAPILoader: MapsAPILoader,\n    private ngZone: NgZone,\n    private admin: AdminService,\n    private route: ActivatedRoute\n  ) { }\n\n  ngOnInit() {\n    this.model = new Agency();\n    this.setCurrentPosition();\n    this.model.country_code = this.constant.country_code;\n    this.model.dial_code = this.constant.dial_code;\n    this.parameter.itemsPerPage = this.constant.itemsPerPage;\n    this.parameter.p = this.constant.p;\n    this.initialCountry = {initialCountry: this.constant.country_code};\n      this.parameter.sub = this.route.params.subscribe(params => {\n        if (params['id'] !== '0') {\n          console.log('aaa', this.model);\n          this.model.id = params['id'];\n          this.getAgencyById(this.model.id);\n        } else {\n          console.log('aaa', this.model);\n          this.model.id = '';\n        }\n      });\n  }\n\n  getAgencyById(id: string) {\n    this.parameter.loading = true;\n    this.admin.postDataApi('getAgencyById', {'id': id})\n    .subscribe(\n      success => {\n        this.parameter.loading = false;\n        this.model = success.data;\n        this.image = this.model.image;\n        console.log('==', this.model);\n      }, error => {\n        this.parameter.loading = false;\n      });\n  }\n\n  set() {\n    this.show = true;\n  }\n\n  changeListner(event: any, param: any) {\n    const reader = new FileReader();\n    reader.onload = (e: any) => {\n      this[param] = e.target.result;\n      this.parameter.loading = true;\n      this.cs.saveImage(event.target.files[0]).subscribe(\n        success => {\n          this.parameter.loading = false;\n          this.model[param] = success['data'].image;\n        }\n      );\n    };\n    reader.readAsDataURL(event.target.files[0]);\n    console.log(this.model);\n  }\n\n  onCountryCodeChange(e) {\n    this.model.country_code = e.iso2;\n    this.model.dial_code = '+' + e.dialCode;\n    this.initialCountry = {initialCountry: e.iso2};\n  }\n\n  add(formData: NgForm) {\n    const modelSave: Users = JSON.parse(JSON.stringify(this.model));\n    if (!modelSave.lat || !modelSave.lng) {\n      swal('Error', 'Please choose address from dropdown.', 'error');\n      return;\n    }\n    this.parameter.loading = true;\n    this.admin.postDataApi('addAgency', modelSave)\n      .subscribe(\n        success => {\n          this.parameter.loading = false;\n          if (success.success === '0') {\n            swal('Error', success.message, 'error');\n            return;\n          } else {\n            const text = this.model.id === '' ? 'Added successfully.' : 'Updated successfully.';\n            swal('Success', text, 'success');\n            if (this.model.id === '') {\n              formData.reset();\n              this.image = ''; this.developer_image = '';\n            }\n          }\n        }, error => {\n          this.parameter.loading = false;\n        });\n  }\n\n\n  loadPlaces(paramAdd: string, paramLat: string, paramLng: string, searchRef: any) {\n    // load Places Autocomplete\n    this.model[paramLat] = null;\n    this.model[paramLng] = null;\n    this.mapsAPILoader.load().then(() => {\n      const autocomplete = new google.maps.places.Autocomplete(this[searchRef].nativeElement, {\n        types: []\n      });\n      autocomplete.addListener('place_changed', () => {\n        this.ngZone.run(() => {\n          // get the place result\n          // const place: google.maps.places.PlaceResult = autocomplete.getPlace();\n          const place = autocomplete.getPlace();\n\n          // verify result\n          if (place.geometry === undefined || place.geometry === null) {\n            return;\n          }\n\n          // set latitude, longitude and zoom\n          this.model[paramLat] = place.geometry.location.lat();\n          this.model[paramLng] = place.geometry.location.lng();\n          if (place.formatted_address) {\n            this.model[paramAdd] = place.formatted_address;\n          }\n        });\n      });\n    });\n  }\n\n  setCurrentPosition() {\n    if ('geolocation' in navigator) {\n      navigator.geolocation.getCurrentPosition((position) => {\n        // setting address lat lng\n        this.model.lat = position.coords.latitude;\n        this.model.lng = position.coords.longitude;\n\n        // setting branch office lat lng\n        this.model.branch_lat = position.coords.latitude;\n        this.model.branch_lng = position.coords.longitude;\n      });\n    }\n  }\n\n  placeMarker($event: any, paramLat: string, paramLng: string) {\n    this.model[paramLat] = $event.coords.lat;\n    this.model[paramLng] = $event.coords.lng;\n    this.getGeoLocation(this.model[paramLat], this.model[paramLng]);\n  }\n\n\n  getGeoLocation(lat: number, lng: number) {\n    if (navigator.geolocation) {\n      const geocoder = new google.maps.Geocoder();\n      const latlng = new google.maps.LatLng(lat, lng);\n      const request = { latLng: latlng };\n\n      geocoder.geocode(request, (results, status) => {\n        if (status === google.maps.GeocoderStatus.OK) {\n          const result = results[0];\n          if (result != null) {\n            this.model.address = result.formatted_address;\n          } else {\n            this.model.address = lat + ',' + lng;\n          }\n        }\n      });\n    }\n  }\n}\n","module.exports = \"\"","module.exports = \"<ngx-loading [show]=\\\"parameter.loading\\\"></ngx-loading>\\n<div class=\\\"container-fluid\\\">\\n  <div class=\\\"row\\\">\\n      <div class=\\\"col-md-4 col-6\\\">\\n        <div class=\\\"title-group\\\">\\n            <h5>Agencies</h5>\\n            <p>Showing {{parameter.items?.length}} out of {{parameter.total}}</p>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-5 col-6\\\">\\n        <div class=\\\"btn-cont upload-excel pull-right\\\">\\n            <a title=\\\"Download Sample File\\\" href=\\\"assets/docx/Sozu_Agencies_Sample.xlsx\\\" class=\\\"btn\\\"><span class=\\\"fa fa-download\\\"></span></a>\\n            <label title=\\\"Choose Excel File\\\" class=\\\"img_label\\\">{{label}}\\n                <input type=\\\"file\\\" #fileInput accept=\\\".xls,.xlsx\\\" (change)=\\\"getFileName()\\\">\\n            </label>\\n            <a title=\\\"Upload Selected File\\\" (click)=\\\"importAgency()\\\" href=\\\"javascript://\\\" class=\\\"btn\\\"><span class=\\\"fa fa-upload\\\"></span></a>\\n        </div>\\n      </div>\\n      <div class=\\\"col-md-3 col-6\\\">\\n        <div class=\\\"btn-cont text-right\\\">\\n            <a *ngIf=\\\"admin?.admin_acl['Developers Management']?.can_create==1\\\" class=\\\"btn btn-primary\\\" href=\\\"javascript://\\\" routerLink=\\\"/dashboard/agencies/add-agency/0\\\">+Add New</a>\\n        </div>\\n      </div>\\n  </div>\\n\\n  <div class=\\\"white-bg\\\">\\n      <div class=\\\"tabel-section\\\">\\n        <div class=\\\"table-responsive\\\">\\n          <table class=\\\"table table-striped table-align-left\\\">\\n            <tr>\\n              <th style=\\\"width:6%\\\">&nbsp;</th>\\n              <th style=\\\"width:25%\\\">\\n                <div class=\\\"table-search\\\">\\n                    <label>Company Name</label>\\n                    <div class=\\\"searh-3\\\">\\n                      <input type=\\\"text\\\" [(ngModel)]=\\\"model.name\\\" (keyup.enter)=\\\"getAgencies()\\\" name=\\\"\\\">\\n                      <button *ngIf=\\\"model.name\\\" (click)=\\\"getAgencies()\\\"><i class=\\\"fa fa-search\\\"></i></button>\\n                    </div>\\n                </div>\\n              </th>\\n              <th style=\\\"width:20%; text-align:left;\\\">\\n                <div class=\\\"table-search\\\">\\n                    <label>Contact Number</label>\\n                    <div class=\\\"searh-3\\\">\\n                      <input type=\\\"text\\\" [(ngModel)]=\\\"model.phone\\\" (keyup.enter)=\\\"getAgencies()\\\" name=\\\"\\\">\\n                      <button *ngIf=\\\"model.phone\\\" (click)=\\\"getAgencies()\\\"><i class=\\\"fa fa-search\\\"></i></button>\\n                    </div>\\n                </div>\\n              </th>\\n              <th style=\\\"width:20%\\\">\\n                <div class=\\\"table-search\\\">\\n                    <label>Email</label>\\n                    <div class=\\\"searh-3\\\">\\n                      <input type=\\\"text\\\" [(ngModel)]=\\\"model.email\\\" (keyup.enter)=\\\"getAgencies()\\\" name=\\\"\\\">\\n                      <button *ngIf=\\\"model.email\\\" (click)=\\\"getAgencies()\\\"><i class=\\\"fa fa-search\\\"></i></button>\\n                    </div>\\n                </div>\\n              </th>\\n              <th style=\\\"width:15%; vertical-align: top;\\\">\\n                  Agent Count\\n                  <a (click)=\\\"setBuildingsSort(model.buildings_sort==1?2:1)\\\" href=\\\"javascript://\\\"><img [ngClass]=\\\"{'upsidedown':model.buildings_sort==2}\\\" src=\\\"assets/img/top-arrow.png\\\" alt=\\\"img\\\"></a>\\n              </th>\\n              <th style=\\\"width:20%\\\">\\n                &nbsp;\\n              </th>\\n            </tr>\\n      \\n            <tr *ngFor=\\\"let item of parameter.items| paginate: { itemsPerPage: parameter.itemsPerPage, currentPage: parameter.page, totalItems: parameter.total }; let i=index\\\">\\n              <td> \\n                  <img [src]=\\\"item.developer_image| img:'small'\\\" class=\\\"rounded-circle\\\" onerror='src=\\\"assets/img/default_img.png\\\"' alt=\\\"img\\\">\\n              </td>\\n              <td class=\\\"text-left\\\">\\n                <span class=\\\"name\\\">\\n                  <a data-toggle=\\\"popover\\\" data-placement=\\\"top\\\" title=\\\"{{item.name}}\\\">{{item.name | titlecase}}</a>\\n                </span>\\n              </td>\\n              <td class=\\\"text-left\\\" *ngIf=\\\"item.phone\\\">{{item.dial_code ? item.dial_code : constant.dial_code}}-{{item.phone}}</td>\\n              <td class=\\\"text-left\\\" *ngIf=\\\"!item.phone\\\">NA</td>\\n              <td class=\\\"text-left\\\">{{item.email}}</td>\\n              <td class=\\\"text-left\\\">{{item.buildings_count}}</td>\\n              <td>\\n                <button title=\\\"Edit Details\\\" [disabled]=\\\"admin?.admin_acl['Developers Management']?.can_update==0\\\" (click)=\\\"editUser(item)\\\" class=\\\"action-icon\\\"><img src=\\\"assets/img/edit.png\\\" alt=\\\"img\\\"></button>\\n                <button [disabled]=\\\"admin?.admin_acl['Developers Management']?.can_delete==0\\\"\\n                  (click)=\\\"blockUnblockPopup(i, item.id, item.is_blocked==1?0:1)\\\" \\n                  title=\\\"{{item.is_blocked==1?'Unblock Developer':'Block Developer'}}\\\" [ngClass]=\\\"{'unblock-bg':item.is_blocked==1}\\\"\\n                  class=\\\"action-icon\\\"><img src=\\\"assets/img/block.png\\\" alt=\\\"img\\\">\\n                </button>\\n\\n              </td>\\n            </tr>\\n\\n          </table>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"center\\\" *ngIf=\\\"parameter.total == 0\\\">\\n        <img src=\\\"assets/img/404-error.png\\\">\\n      </div>\\n  </div>\\n  \\n  <div class=\\\"btn-cont text-right marginT15\\\" *ngIf=\\\"parameter.total\\\">\\n    <pagination-controls class=\\\"my-pagination\\\" (pageChange)=\\\"getPage($event)\\\"></pagination-controls>\\n  </div>\\n  \\n</div>\\n\"","import { Component, OnInit, ViewChild, ElementRef } from '@angular/core';\nimport { AdminService } from '../../services/admin.service';\nimport { IProperty } from '../../common/property';\nimport { Users } from './../../models/users.model';\nimport { Constant } from './../../common/constants';\nimport { NgForm } from '@angular/forms';\nimport { Router } from '@angular/router';\ndeclare let swal: any;\n\n@Component({\n  selector: 'app-agencies',\n  templateUrl: './agencies.component.html',\n  styleUrls: ['./agencies.component.css']\n})\nexport class AgenciesComponent implements OnInit {\n\n  @ViewChild('fileInput') fileInput: ElementRef;\n  public parameter: IProperty = {};\n  model: Users;\n  label: string;\n  constructor(public constant: Constant, public admin: AdminService, private router: Router) { }\n\n  ngOnInit() {\n    this.label = 'Choose Agencies File';\n    this.model = new Users();\n    this.model.buildings_sort = 2;  // 2 means desc\n    this.parameter.itemsPerPage = this.constant.itemsPerPage;\n    this.parameter.page = this.constant.p;\n    this.getAgencies();\n  }\n\n  getPage(page: number) {\n    this.parameter.page = page;\n    this.getAgencies();\n  }\n\n  getFileName() {\n    const fi = this.fileInput.nativeElement;\n    const uploadedFile = fi.files[0];\n    this.label = uploadedFile.name;\n  }\n\n  setBuildingsSort(buildings_sort: number) {\n    this.model.buildings_sort = buildings_sort;\n    this.getAgencies();\n  }\n\n  getAgencies() {\n    this.model.page = this.parameter.page;\n    // this.parameter.loading = true;\n    this.admin.postDataApi('getAgencies', this.model)\n      .subscribe(\n        success => {\n          // this.parameter.loading = false;\n          this.parameter.items = success.data;\n          this.parameter.total = success.total_count;\n        }, error => {\n          // this.parameter.loading = false;\n        });\n  }\n\n  editUser(item: Users) {\n    this.router.navigate(['/dashboard/agencies/add-agency', item.id]);\n  }\n\n  blockUnblockPopup(index: any, id: string, flag: number) {\n    this.parameter.index = index;\n    this.parameter.title = this.constant.title.ARE_YOU_SURE;\n    switch (flag) {\n      case 0:\n        this.parameter.text = this.constant.title.UNBLOCK_AGENCY;\n        this.parameter.successText = this.constant.successMsg.UNBLOCKED_SUCCESSFULLY;\n        break;\n      case 1:\n        this.parameter.text = this.constant.title.BLOCK_AGENCY;\n        this.parameter.successText = this.constant.successMsg.BLOCKED_SUCCESSFULLY;\n        break;\n    }\n\n    swal({\n      html: this.parameter.title + '<br>' + this.parameter.text,\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: this.constant.confirmButtonColor,\n      cancelButtonColor: this.constant.cancelButtonColor,\n      confirmButtonText: 'Yes'\n    }).then((result) => {\n      if (result.value) {\n        this.blockAgency(index, id, flag);\n      }\n    });\n  }\n\n\n  blockAgency(index: number, id: any, flag: any) {\n    this.parameter.index = index;\n    this.parameter.url = 'blockAgency';\n    const input = new FormData();\n    input.append('agency_id', id);\n    input.append('flag', flag);\n\n    this.admin.postDataApi(this.parameter.url, input)\n      .subscribe(\n        success => {\n          console.log('success', success);\n          swal('Success', this.parameter.successText, 'success');\n          this.parameter.items[this.parameter.index] = success.data;\n        });\n  }\n\n\n  importAgency() {\n    const file = this.fileInput.nativeElement;\n    let attachment: File;\n    if (file.files && file.files[0]) {\n      attachment = file.files[0];\n      if (attachment.size > this.constant.fileSizeLimit) {\n        swal('Error', 'File size is more than 25MB.', 'error');\n        return false;\n      }\n    this.parameter.loading = true;\n    const input = new FormData();\n    input.append('attachment', attachment);\n    this.admin.postDataApi('importAgency', input)\n      .subscribe(\n        success => {\n          this.parameter.loading = false;\n          this.fileInput.nativeElement.value = '';\n          this.label = 'Choose Agencies File';\n          swal('Success', 'Imported successfully.', 'success');\n          this.getAgencies();\n        }, error => {\n          this.parameter.loading = false;\n        });\n    } else {\n      swal('Error', 'Please choose file', 'error');\n      return false;\n    }\n  }\n}\n","// third party libraries\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NgxLoadingModule, ngxLoadingAnimationTypes } from 'ngx-loading';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Ng2TelInputModule } from 'ng2-tel-input';\nimport { AgmCoreModule } from '@agm/core';\n\nimport { AclUserGuard } from '../../guards/acl-user.guard';\nimport { SharedModule } from '../../modules/shared.module';\nimport { AgenciesComponent } from './agencies.component';\nimport { AddAgencyComponent } from './add-agency/add-agency.component';\n\nconst routes: Routes = [\n  { path: '', component: AgenciesComponent,\n    canActivate: [AclUserGuard], data: {roles: ['User Management', 'can_read', '']}},\n  { path: 'add-agency/:id', component: AddAgencyComponent,\n    canActivate: [AclUserGuard], data: {roles: ['User Management', 'can_read', '']}}\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes),\n    CommonModule,\n    NgxLoadingModule.forRoot({\n      animationType: ngxLoadingAnimationTypes.rectangleBounce,\n      primaryColour: '#00B96F'\n    }),\n\n    AgmCoreModule.forRoot({\n      apiKey: 'AIzaSyDykCJGMqHIwJluSmSiqKTJBVN2KauM_uQ',\n      libraries: ['drawing', 'places']\n    }),\n    NgxPaginationModule,\n    FormsModule,\n    ReactiveFormsModule,\n    Ng2TelInputModule,\n    SharedModule\n  ],\n  declarations: [\n    AgenciesComponent,\n    AddAgencyComponent\n  ]\n})\n\nexport class AgenciesModule { }\n"],"sourceRoot":""}