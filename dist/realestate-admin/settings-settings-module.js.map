{"version":3,"sources":["webpack:///./src/app/directives/match-value.directive.ts","webpack:///./src/app/directives/match-value.validator.ts","webpack:///./src/app/layout/settings/change-password/change-password.component.css","webpack:///./src/app/layout/settings/change-password/change-password.component.html","webpack:///./src/app/layout/settings/change-password/change-password.component.ts","webpack:///./src/app/layout/settings/default-settings/default-settings.component.css","webpack:///./src/app/layout/settings/default-settings/default-settings.component.html","webpack:///./src/app/layout/settings/default-settings/default-settings.component.ts","webpack:///./src/app/layout/settings/documents/documents.component.css","webpack:///./src/app/layout/settings/documents/documents.component.html","webpack:///./src/app/layout/settings/documents/documents.component.ts","webpack:///./src/app/layout/settings/edit-profile/edit-profile.component.css","webpack:///./src/app/layout/settings/edit-profile/edit-profile.component.html","webpack:///./src/app/layout/settings/edit-profile/edit-profile.component.ts","webpack:///./src/app/layout/settings/locality/locality.component.css","webpack:///./src/app/layout/settings/locality/locality.component.html","webpack:///./src/app/layout/settings/locality/locality.component.ts","webpack:///./src/app/layout/settings/location/location.component.css","webpack:///./src/app/layout/settings/location/location.component.html","webpack:///./src/app/layout/settings/location/location.component.ts","webpack:///./src/app/layout/settings/profile/profile.component.css","webpack:///./src/app/layout/settings/profile/profile.component.html","webpack:///./src/app/layout/settings/profile/profile.component.ts","webpack:///./src/app/layout/settings/project/project.component.css","webpack:///./src/app/layout/settings/project/project.component.html","webpack:///./src/app/layout/settings/project/project.component.ts","webpack:///./src/app/layout/settings/property/property.component.css","webpack:///./src/app/layout/settings/property/property.component.html","webpack:///./src/app/layout/settings/property/property.component.ts","webpack:///./src/app/layout/settings/settings.component.css","webpack:///./src/app/layout/settings/settings.component.html","webpack:///./src/app/layout/settings/settings.component.ts","webpack:///./src/app/layout/settings/settings.module.ts","webpack:///./src/app/models/locality.model.ts","webpack:///./src/app/models/location.model.ts","webpack:///./src/app/models/project.model.ts","webpack:///./src/app/models/property.model.ts","webpack:///./src/app/models/settings.model.ts"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;AAAiD;AAMzB;AAC6B;AAOrD;IAEE;QADwB,kBAAa,GAAa,EAAE,CAAC;IACtC,CAAC;4BAFL,mBAAmB;IAG9B,sCAAQ,GAAR,UAAS,SAAoB;QAC3B,MAAM,CAAC,yEAAU,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,EAAE,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC,CAC7D,SAAS,CACV,CAAC;IACJ,CAAC;IANuB;QAAvB,2DAAK,CAAC,eAAe,CAAC;;8DAA8B;IAD1C,mBAAmB;QAN/B,+DAAS,CAAC;YACT,QAAQ,EAAE,iBAAiB;YAC3B,SAAS,EAAE;gBACT,EAAE,OAAO,EAAE,4DAAa,EAAE,WAAW,EAAE,qBAAmB,EAAE,KAAK,EAAE,IAAI,EAAE;aAC1E;SACF,CAAC;;OACW,mBAAmB,CAQ/B;IAAD,0BAAC;;CAAA;AAR+B;;;;;;;;;;;;;ACbhC;AAAA;AAAA,kDAAkD;AAC3C,oBACH,gBAAwB,EACxB,iBAAyB;IAEzB,MAAM,CAAC,UAAC,SAAoB;QACxB,IAAM,YAAY,GAAG,SAAS,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC;QAC1D,IAAM,aAAa,GAAG,SAAS,CAAC,QAAQ,CAAC,iBAAiB,CAAC,CAAC;QAC5D,kDAAkD;QAClD,EAAE,CAAC,CACC,CAAC,YAAY;YACb,CAAC,aAAa;YACd,CAAC,YAAY,CAAC,KAAK;YACnB,CAAC,aAAa,CAAC,KACnB,CAAC,CAAC,CAAC;YACC,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QACD,EAAE,CAAC,CAAC,aAAa,CAAC,MAAM,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,eAAe,CAAC,CAAC,CAAC;YAChE,MAAM,CAAC,IAAI,CAAC;QAChB,CAAC;QACD,EAAE,CAAC,CAAC,YAAY,CAAC,KAAK,KAAK,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;YAC7C,aAAa,CAAC,SAAS,CAAC,EAAE,eAAe,EAAE,IAAI,EAAE,CAAC,CAAC;QACvD,CAAC;QAAC,IAAI,CAAC,CAAC;YACJ,aAAa,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;QAClC,CAAC;IACL,CAAC,CAAC;AACN,CAAC;;;;;;;;;;;;AC3BD,+DAA+D,2L;;;;;;;;;;;ACA/D,2HAA2H,8BAA8B,8EAA8E,6BAA6B,6CAA6C,8BAA8B,uDAAuD,gCAAgC,mTAAmT,sCAAsC,wJAAwJ,+CAA+C,iUAAiU,2CAA2C,2HAA2H,4CAA4C,GAAG,yBAAyB,8LAA8L,0CAA0C,iIAAiI,mDAAmD,iVAAiV,kDAAkD,6HAA6H,kDAAkD,GAAG,2BAA2B,oIAAoI,iDAAiD,2PAA2P,qCAAqC,uD;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAp4F;AACT;AACqB;AAGd;AACO;AASvD;IASE,iCAAoB,MAAc,EAAU,KAAmB,EAAU,OAA0B,EACzF,SAA2B;QADjB,WAAM,GAAN,MAAM,CAAQ;QAAU,UAAK,GAAL,KAAK,CAAc;QAAU,YAAO,GAAP,OAAO,CAAmB;QACzF,cAAS,GAAT,SAAS,CAAkB;QAR9B,cAAS,GAAc,EAAE,CAAC;QAEjC,UAAK,GAAG;YACN,QAAQ,EAAE,EAAE;YACZ,UAAU,EAAE,EAAE;SACf,CAAC;IAGuC,CAAC;IAE1C,0CAAQ,GAAR,cAAY,CAAC;IAEb,gDAAc,GAAd,UAAe,QAAgB;QAA/B,iBAaC;QAZC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,gBAAgB,EAAE,IAAI,CAAC,KAAK,CAAC;aACjD,SAAS,CACR,iBAAO;YACL,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,IAAI,CAAC,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,qCAAqC,CAAC,EAAE,SAAS,CAAC,CAAC;YACvH,YAAY,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;YACjC,KAAI,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;QAC7B,CAAC,EACD,eAAK;YACH,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IACT,CAAC;IA3BU,uBAAuB;QANnC,+DAAS,CAAC;YACT,QAAQ,EAAE,qBAAqB;;;SAGhC,CAAC;yCAW4B,sDAAM,EAAiB,2EAAY,EAAmB,6DAAiB;YAC9E,oEAAgB;OAV1B,uBAAuB,CA4BnC;IAAD,8BAAC;CAAA;AA5BmC;;;;;;;;;;;;ACfpC,+DAA+D,2L;;;;;;;;;;;ACA/D,2HAA2H,8BAA8B,4EAA4E,6BAA6B,6CAA6C,8BAA8B,uDAAuD,qCAAqC,wPAAwP,2DAA2D,oYAAoY,mCAAmC,sUAAsU,kCAAkC,0NAA0N,0DAA0D,iYAAiY,mCAAmC,mUAAmU,kCAAkC,0NAA0N,yCAAyC,6WAA6W,8CAA8C,uD;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACApnG;AACY;AAEL;AACT;AACO;AASvD;IAIE,kCAAoB,KAAmB,EAAS,KAAe,EAAU,OAA0B,EACzF,SAA2B;QADjB,UAAK,GAAL,KAAK,CAAc;QAAS,UAAK,GAAL,KAAK,CAAU;QAAU,YAAO,GAAP,OAAO,CAAmB;QACzF,cAAS,GAAT,SAAS,CAAkB;QAH9B,cAAS,GAAc,EAAE,CAAC;IAGQ,CAAC;IAE1C,2CAAQ,GAAR;QACE,IAAI,CAAC,gBAAgB,EAAE,CAAC;IAC1B,CAAC;IAED,2CAAQ,GAAR,UAAS,GAAG,EAAE,KAAK;QACjB,IAAI,CAAC,KAAK,CAAC,GAAG,CAAC,GAAG,KAAK,CAAC;IAC1B,CAAC;IAED,mDAAgB,GAAhB;QAAA,iBAQC;QAPC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,kBAAkB,EAAE,EAAE,CAAC;aAC3C,SAAS,CACR,iBAAO;YACL,KAAI,CAAC,KAAK,GAAG,OAAO,CAAC,IAAI,CAAC;QAC5B,CAAC,EACD,eAAK;QACL,CAAC,CAAC,CAAC;IACT,CAAC;IAED,sDAAmB,GAAnB;QAAA,iBAYC;QAXC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,qBAAqB,EAAE,IAAI,CAAC,KAAK,CAAC;aACtD,SAAS,CACR,iBAAO;YACL,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,KAAI,CAAC,KAAK,CAAC,cAAc,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAC7C,IAAI,CAAC,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,qCAAqC,CAAC,EAAE,SAAS,CAAC,CAAC;QACzH,CAAC,EACD,eAAK;YACH,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IACT,CAAC;IArCU,wBAAwB;QANpC,+DAAS,CAAC;YACT,QAAQ,EAAE,sBAAsB;;;YAGhC,SAAS,EAAE,CAAC,sEAAQ,CAAC;SACtB,CAAC;yCAK2B,2EAAY,EAAgB,sEAAQ,EAAmB,6DAAiB;YAC9E,oEAAgB;OAL1B,wBAAwB,CAsCpC;IAAD,+BAAC;CAAA;AAtCoC;;;;;;;;;;;;ACdrC,+DAA+D,2K;;;;;;;;;;;ACA/D,uGAAuG,8BAA8B,oFAAoF,6BAA6B,+CAA+C,8BAA8B,yDAAyD,+BAA+B,uHAAuH,mCAAmC,qOAAqO,8BAA8B,uUAAuU,4NAA4N,0CAA0C,0RAA0R,0CAA0C,2sBAA2sB,iBAAiB,KAAK,+BAA+B,iDAAiD,iBAAiB,KAAK,+BAA+B,qDAAqD,sCAAsC,2FAA2F,uFAAuF,cAAc,mGAAmG,cAAc,6FAA6F,uCAAuC,6jBAA6jB,0FAA0F,gBAAgB,4BAA4B,6TAA6T,6CAA6C,qUAAqU,0CAA0C,6JAA6J,sbAAsb,0CAA0C,gPAAgP,0CAA0C,6c;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAnzK;AACD;AAEG;AACb;AACK;AAET;AACO;AASvD;IAME,4BACS,QAAkB,EACjB,YAA4B,EAC7B,KAAmB,EACnB,KAAe,EAAU,OAA0B,EAClD,SAA2B;QAJ5B,aAAQ,GAAR,QAAQ,CAAU;QACjB,iBAAY,GAAZ,YAAY,CAAgB;QAC7B,UAAK,GAAL,KAAK,CAAc;QACnB,UAAK,GAAL,KAAK,CAAU;QAAU,YAAO,GAAP,OAAO,CAAmB;QAClD,cAAS,GAAT,SAAS,CAAkB;QAT9B,cAAS,GAAc,EAAE,CAAC;IAWjC,CAAC;IAED,qCAAQ,GAAR;QACE,IAAI,CAAC,kBAAkB,EAAE,CAAC;IAC5B,CAAC;IAED,uCAAU,GAAV;QACE,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;IAEM,sCAAS,GAAhB,UAAiB,QAA0B,EAAE,EAAU,EAAE,OAAe,EAAE,OAAe,EAAE,MAAc,EAAE,KAAa;QACtH,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;QAC7B,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;QAC7B,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;QAC3B,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACnD,CAAC;IAGD,+CAAkB,GAAlB,UAAmB,EAAU,EAAE,OAAe,EAAE,OAAe,EAAE,MAAc,EAAE,IAAY;QAA7F,iBA2BC;QAzBC,EAAE,CAAC,CAAC,IAAI,KAAK,KAAK,CAAC,CAAC,CAAC;YAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;QAAC,CAAC;QAE7C,uBAAuB;QACvB,IAAM,KAAK,GAAG,IAAI,QAAQ,EAAE,CAAC;QAC7B,KAAK,CAAC,MAAM,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QACjC,KAAK,CAAC,MAAM,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QACjC,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,QAAQ,EAAE,CAAC,CAAC;QAE1C,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAAC,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;QAAC,CAAC;QAEnC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,oBAAoB,EAAE,KAAK,CAAC;aAChD,SAAS,CACR,iBAAO;YACL,KAAI,CAAC,KAAK,GAAG,IAAI,sEAAQ,EAAE,CAAC;YAC5B,IAAM,IAAI,GAAG,EAAE,CAAC,CAAC;gBACjB,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,qCAAqC,CAAC,CAAC,CAAC;gBAC/D,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,mCAAmC,CAAC,CAAC;YAC5D,IAAI,CAAC,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;YAC9D,EAAE,CAAC,CAAC,EAAE,KAAK,EAAE,CAAC,CAAC,CAAC;gBACd,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAC1C,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC;YAC5D,CAAC;QACH,CAAC,CACF,CAAC;IACN,CAAC;IAGD,+CAAkB,GAAlB;QAAA,iBAaC;QAZC,IAAI,CAAC,SAAS,CAAC,GAAG,GAAG,oBAAoB,CAAC;QAC1C,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,EAAE,CAAC;aAC3C,SAAS,CACR,iBAAO;YACL,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,KAAI,CAAC,SAAS,CAAC,KAAK,GAAG,OAAO,CAAC,IAAI,CAAC;YACpC,KAAI,CAAC,SAAS,CAAC,KAAK,GAAG,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC;QAC7C,CAAC,EAAE,eAAK;YACN,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC,CACF,CAAC;IACN,CAAC;IAID,yGAAyG;IACzG,+HAA+H;IAC/H,WAAW;IACX,kDAAkD;IAClD,6HAA6H;IAC7H,gFAAgF;IAChF,uBAAuB;IACvB,8BAA8B;IAC9B,4DAA4D;IAC5D,0DAA0D;IAC1D,+BAA+B;IAC/B,0BAA0B;IAC1B,0BAA0B;IAC1B,qEAAqE;IACrE,QAAQ;IACR,QAAQ;IACR,IAAI;IAGJ,sDAAyB,GAAzB,UAA0B,QAAgB,EAAE,EAAU,EAAE,OAAe,EAAE,OAAe,EAAE,MAAc,EAAE,IAAY;QAAtH,iBAmBC;QAlBC,QAAQ,CAAC,KAAK,EAAE,CAAC;QACjB,IAAM,IAAI,GAAG,IAAI,CAAC;QAClB,EAAE,CAAC,CAAC,OAAO,KAAK,SAAS,CAAC,CAAC,CAAC;YAC1B,IAAI,CAAC;gBACH,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,mCAAmC,CAAC;gBACjE,IAAI,EAAE,SAAS;gBACf,gBAAgB,EAAE,IAAI;gBACtB,kBAAkB,EAAE,IAAI,CAAC,QAAQ,CAAC,kBAAkB;gBACpD,iBAAiB,EAAE,IAAI,CAAC,QAAQ,CAAC,iBAAiB;gBAClD,iBAAiB,EAAE,KAAK;aACzB,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;gBACb,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,kBAAkB,CAAC,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;gBAC9D,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,kBAAkB,CAAC,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;QAC9D,CAAC;IACH,CAAC;IAED,yCAAY,GAAZ,UAAa,EAAU,EAAE,OAAe,EAAE,OAAe,EAAE,MAAc,EAAE,KAAa;QAAxF,iBAyBC;QAxBC,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC;QAC7B,MAAM,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC;YACf,KAAK,CAAC;gBACJ,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,mCAAmC,CAAC,CAAC;gBAClF,IAAI,CAAC,SAAS,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,qCAAqC,CAAC,CAAC;gBAC3F,KAAK,CAAC;YACR,KAAK,CAAC;gBACJ,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,qCAAqC,CAAC,CAAC;gBACpF,IAAI,CAAC,SAAS,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,uCAAuC,CAAC,CAAC;gBAC7F,KAAK,CAAC;QACV,CAAC;QAED,IAAI,CAAC;YACH,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,0BAA0B,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI;YACvF,IAAI,EAAE,SAAS;YACf,gBAAgB,EAAE,IAAI;YACtB,kBAAkB,EAAE,IAAI,CAAC,QAAQ,CAAC,kBAAkB;YACpD,iBAAiB,EAAE,IAAI,CAAC,QAAQ,CAAC,iBAAiB;YAClD,iBAAiB,EAAE,KAAK;SACzB,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;YACb,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;gBACjB,KAAI,CAAC,kBAAkB,CAAC,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,KAAK,CAAC,CAAC;YAC/D,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAjJU,kBAAkB;QAN9B,+DAAS,CAAC;YACT,QAAQ,EAAE,eAAe;;;YAGzB,SAAS,EAAE,CAAC,iEAAQ,EAAE,sEAAQ,CAAC;SAChC,CAAC;yCAQmB,iEAAQ;YACH,kEAAc;YACtB,2EAAY;YACZ,sEAAQ,EAAmB,6DAAiB;YACvC,oEAAgB;OAX1B,kBAAkB,CAkJ9B;IAAD,yBAAC;CAAA;AAlJ8B;;;;;;;;;;;;ACjB/B,+DAA+D,mL;;;;;;;;;;;ACA/D,6HAA6H,8BAA8B,gFAAgF,6BAA6B,6CAA6C,8BAA8B,yDAAyD,iCAAiC,yXAAyX,oGAAoG,aAAa,6RAA6R,6BAA6B,0fAA0f,8BAA8B,wGAAwG,iCAAiC,4PAA4P,4BAA4B,wWAAwW,qCAAqC,8hBAA8hB,+BAA+B,kIAAkI,2kF;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACApqG;AACY;AAGd;AACI;AACY;AACjB;AACQ;AAQvD;IAME,8BACS,QAAkB,EACjB,KAAmB,EACnB,EAAiB,EACjB,OAA0B,EAC1B,SAA2B;QAJ5B,aAAQ,GAAR,QAAQ,CAAU;QACjB,UAAK,GAAL,KAAK,CAAc;QACnB,OAAE,GAAF,EAAE,CAAe;QACjB,YAAO,GAAP,OAAO,CAAmB;QAC1B,cAAS,GAAT,SAAS,CAAkB;QAT9B,cAAS,GAAc,EAAE,CAAC;IASQ,CAAC;IAE1C,uCAAQ,GAAR;QAAA,iBAaC;QAZC,IAAI,CAAC,KAAK,GAAG,IAAI,4DAAG,EAAE,CAAC;QACvB,IAAI,CAAC,KAAK,CAAC,UAAU,GAAG,KAAK,CAAC;QAC9B,IAAI,CAAC,KAAK,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC;QACrD,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC;QAC/C,IAAI,CAAC,cAAc,GAAG,EAAC,cAAc,EAAE,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAC,CAAC;QACnE,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,SAAS,CAAC,iBAAO;YACrC,EAAE,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC;gBAClB,KAAI,CAAC,KAAK,GAAG,OAAO,CAAC;YACvB,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,SAAS,EAAE,CAAC;YACnB,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,wCAAS,GAAT;QAAA,iBAWC;QAVC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,WAAW,EAAE,EAAE,CAAC;aACtC,SAAS,CACR,iBAAO;YACL,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,KAAI,CAAC,KAAK,GAAG,OAAO,CAAC,IAAI,CAAC;YAC1B,KAAI,CAAC,KAAK,GAAG,KAAI,CAAC,KAAK,CAAC,KAAK,CAAC;QAChC,CAAC,EAAE,eAAK;YACN,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,8CAAe,GAAf,UAAgB,CAAC;QACf,IAAI,CAAC,KAAK,CAAC,YAAY,GAAG,CAAC,CAAC,IAAI,CAAC;QACjC,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,GAAG,GAAG,CAAC,CAAC,QAAQ,CAAC;QACxC,IAAI,CAAC,cAAc,GAAG,EAAC,cAAc,EAAE,CAAC,CAAC,IAAI,EAAC,CAAC;IACjD,CAAC;IAED,4CAAa,GAAb,UAAc,KAAU,EAAE,WAAmB,EAAE,KAAU;QAAzD,iBAiBC;QAhBC,EAAE,CAAC,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,CAAC,CAAC;YAC7D,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,+BAA+B,CAAC,EAAE,OAAO,CAAC,CAAC;YAC7G,MAAM,CAAC,KAAK,CAAC;QACf,CAAC;QACD,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,IAAI,CAAC;QAC/B,IAAM,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;QAChC,MAAM,CAAC,MAAM,GAAG,UAAC,CAAM;YACrB,KAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,MAAM,CAAC,MAAM,CAAC;YACpC,KAAI,CAAC,EAAE,CAAC,SAAS,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,SAAS,CAChD,iBAAO;gBACL,KAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,KAAK,CAAC;gBAChC,KAAI,CAAC,KAAK,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,MAAM,CAAC,CAAC,KAAK,CAAC;YAC5C,CAAC,CACF,CAAC;QACJ,CAAC,CAAC;QACF,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9C,CAAC;IAED,4CAAa,GAAb,UAAc,QAAgB;QAA9B,iBAuBC;QAtBC,EAAE,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,UAAU,CAAC,CAAC,CAAC;YAC1B,IAAI,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,8BAA8B,CAAC,EAAE,OAAO,CAAC,CAAC;YAC5G,MAAM,CAAC;QACT,CAAC;QAED,IAAM,KAAK,GAAG,IAAI,QAAQ,EAAE,CAAC;QAC7B,KAAK,CAAC,MAAM,CAAC,MAAM,EAAE,QAAQ,CAAC,KAAK,CAAC,IAAI,CAAC,CAAC;QAC1C,KAAK,CAAC,MAAM,CAAC,OAAO,EAAE,QAAQ,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC5C,KAAK,CAAC,MAAM,CAAC,cAAc,EAAE,IAAI,CAAC,KAAK,CAAC,YAAY,CAAC,CAAC;QACtD,KAAK,CAAC,MAAM,CAAC,WAAW,EAAE,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,CAAC;QAChD,KAAK,CAAC,MAAM,CAAC,OAAO,EAAE,IAAI,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QACxC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,eAAe,EAAE,KAAK,CAAC;aAC3C,SAAS,CACR,iBAAO;YACL,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,KAAI,CAAC,KAAK,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YACpC,IAAI,CAAC,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE,OAAO,CAAC,OAAO,EAAE,SAAS,CAAC,CAAC;QAC3E,CAAC,EAAE,eAAK;YACN,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC,CACF,CAAC;IACN,CAAC;IAzFU,oBAAoB;QALhC,+DAAS,CAAC;YACT,QAAQ,EAAE,kBAAkB;;;SAG7B,CAAC;yCAQmB,iEAAQ;YACV,2EAAY;YACf,6EAAa;YACR,6DAAiB;YACf,oEAAgB;OAX1B,oBAAoB,CA0FhC;IAAD,2BAAC;CAAA;AA1FgC;;;;;;;;;;;;AChBjC,+BAA+B,uCAAuC,iBAAiB,sBAAsB,GAAG,gBAAgB,8BAA8B,GAAG,iBAAiB,+BAA+B,GAAG,mBAAmB,sBAAsB,GAAG,6CAA6C,uuB;;;;;;;;;;;ACA7S,uHAAuH,8BAA8B,4EAA4E,6BAA6B,2CAA2C,8BAA8B,qDAAqD,iCAAiC,yGAAyG,iCAAiC,8NAA8N,oCAAoC,2LAA2L,wCAAwC,0CAA0C,8CAA8C,0HAA0H,8CAA8C,2FAA2F,YAAY,0EAA0E,iBAAiB,8MAA8M,sCAAsC,0CAA0C,4CAA4C,0HAA0H,4CAA4C,sFAAsF,UAAU,sEAAsE,eAAe,8MAA8M,qCAAqC,0CAA0C,2CAA2C,0HAA0H,2CAA2C,qFAAqF,SAAS,oEAAoE,cAAc,8MAA8M,+CAA+C,6EAA6E,+CAA+C,sIAAsI,0CAA0C,+VAA+V,iBAAiB,4EAA4E,+BAA+B,4IAA4I,iBAAiB,0aAA0a,iBAAiB,4EAA4E,+BAA+B,qFAAqF,iBAAiB,4EAA4E,iCAAiC,yFAAyF,sCAAsC,kLAAkL,oOAAoO,kBAAkB,4JAA4J,kBAAkB,4JAA4J,4BAA4B,6jBAA6jB,wCAAwC,yTAAyT,0CAA0C,gvBAAgvB,uCAAuC,mJAAmJ,kCAAkC,8TAA8T,0CAA0C,2JAA2J,yCAAyC,uLAAuL,6CAA6C,8xBAA8xB,gDAAgD,ybAAyb,4DAA4D,wJAAwJ,wCAAwC,iIAAiI,aAAa,mLAAmL,gaAAga,+CAA+C,uGAAuG,kbAAkb,uCAAuC,iTAAiT,yCAAyC,uOAAuO,uCAAuC,wiBAAwiB,8BAA8B,kDAAkD,kGAAkG,6BAA6B,kGAAkG,6BAA6B,2E;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA37Y;AACnB;AAGpB;AACU;AACK;AAEZ;AACG;AACO;AAWvD;IA2BE,2BACU,MAAqB,EACtB,KAAmB,EAClB,MAAc,EACd,QAAkB,EACnB,KAAe,EACd,OAA0B,EAC1B,SAA2B;QAN3B,WAAM,GAAN,MAAM,CAAe;QACtB,UAAK,GAAL,KAAK,CAAc;QAClB,WAAM,GAAN,MAAM,CAAQ;QACd,aAAQ,GAAR,QAAQ,CAAU;QACnB,UAAK,GAAL,KAAK,CAAU;QACd,YAAO,GAAP,OAAO,CAAmB;QAC1B,cAAS,GAAT,SAAS,CAAkB;QAxB9B,cAAS,GAAc,EAAE,CAAC;QAMjC,iBAAY,GAAG,EAAE,CAAC;QAKlB,cAAS,GAAG,IAAI,CAAC;QACT,gBAAW,GAAO,IAAI,CAAC;QACvB,qBAAgB,GAAW,KAAK,CAAC;IAYrC,CAAC;IAEL,oCAAQ,GAAR;QACE,IAAI,CAAC,SAAS,CAAC,UAAU,GAAG,EAAE,CAAC;QAC/B,IAAI,CAAC,YAAY,CAAC,EAAE,CAAC,CAAC;IACxB,CAAC;IAED,wCAAY,GAAZ,UAAa,OAAO;QAApB,iBAuBC;QArBC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,CAAC,SAAS,CAAC,GAAG,GAAG,cAAc,CAAC;QACpC,IAAM,KAAK,GAAG,IAAI,QAAQ,EAAE,CAAC;QAE7B,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACZ,KAAK,CAAC,MAAM,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QACnC,CAAC;QAED,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,KAAK,CAAC;aAC9C,SAAS,CACR,iBAAO;YACL,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,KAAI,CAAC,SAAS,CAAC,SAAS,GAAG,OAAO,CAAC,IAAI,CAAC;YACxC,EAAE,CAAC,CAAC,KAAI,CAAC,SAAS,CAAC,SAAS,CAAC,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC;gBAC1C,KAAI,CAAC,SAAS,CAAC,UAAU,GAAG,KAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;gBAC3D,KAAI,CAAC,SAAS,CAAC,KAAI,CAAC,SAAS,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;YACrD,CAAC;QACH,CAAC,EAAE,eAAK;YACN,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC,CACF,CAAC;IACN,CAAC;IAED,qCAAS,GAAT,UAAU,UAAU,EAAE,OAAO;QAA7B,iBA+BC;QA9BC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,CAAC,SAAS,CAAC,GAAG,GAAG,mBAAmB,CAAC;QACzC,IAAI,CAAC,SAAS,CAAC,UAAU,GAAG,UAAU,CAAC;QAEvC,IAAM,KAAK,GAAG,IAAI,QAAQ,EAAE,CAAC;QAC7B,KAAK,CAAC,MAAM,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;QAEvC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACZ,KAAK,CAAC,MAAM,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QACnC,CAAC;QAED,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,KAAK,CAAC;aAC9C,SAAS,CACR,iBAAO;YACL,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,KAAI,CAAC,SAAS,CAAC,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC;YACrC,EAAE,CAAC,CAAC,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;gBACjC,KAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;gBACtD,KAAI,CAAC,SAAS,CAAC,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;YAClD,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,SAAS,CAAC,OAAO,GAAG,GAAG,CAAC;gBAC7B,KAAI,CAAC,SAAS,CAAC,aAAa,GAAG,CAAC,CAAC;gBACjC,KAAI,CAAC,SAAS,CAAC,MAAM,GAAG,EAAE,CAAC;gBAC3B,KAAI,CAAC,SAAS,CAAC,UAAU,GAAG,EAAE,CAAC;gBAC/B,KAAI,CAAC,YAAY,GAAG,EAAE,CAAC;gBACvB,KAAI,CAAC,IAAI,EAAE,CAAC;YACd,CAAC;QACH,CAAC,EAAE,eAAK;YACN,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IACT,CAAC;IAED,qCAAS,GAAT,UAAU,QAAQ,EAAE,OAAO;QAA3B,iBA+BC;QA9BC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,CAAC,SAAS,CAAC,GAAG,GAAG,WAAW,CAAC;QACjC,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAEnC,IAAM,KAAK,GAAG,IAAI,QAAQ,EAAE,CAAC;QAC7B,KAAK,CAAC,MAAM,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;QAEnC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACZ,KAAK,CAAC,MAAM,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QACnC,CAAC;QAED,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,KAAK,CAAC;aAC9C,SAAS,CACR,iBAAO;YACL,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,KAAI,CAAC,SAAS,CAAC,MAAM,GAAG,OAAO,CAAC,IAAI,CAAC;YACrC,EAAE,CAAC,CAAC,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC;gBACjC,KAAI,CAAC,SAAS,CAAC,OAAO,GAAG,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;gBACrD,KAAI,CAAC,SAAS,CAAC,KAAI,CAAC,SAAS,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC;gBACjD,KAAI,CAAC,aAAa,CAAC,KAAI,CAAC,SAAS,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;YACjD,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,SAAS,CAAC,aAAa,GAAG,CAAC,CAAC;gBACjC,KAAI,CAAC,SAAS,CAAC,MAAM,GAAG,EAAE,CAAC;gBAC3B,KAAI,CAAC,SAAS,CAAC,UAAU,GAAG,EAAE,CAAC;gBAC/B,KAAI,CAAC,YAAY,GAAG,EAAE,CAAC;gBACvB,KAAI,CAAC,IAAI,EAAE,CAAC;YACd,CAAC;QACH,CAAC,EAAE,eAAK;YACN,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IACT,CAAC;IAED,gDAAoB,GAApB;QACE,oFAAoF;IACtF,CAAC;IAGD,yCAAa,GAAb,UAAc,OAAO,EAAE,OAAY;QAAnC,iBA4BC;QA5BsB,sCAAY;QACjC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,CAAC,SAAS,CAAC,GAAG,GAAG,eAAe,CAAC;QACrC,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,OAAO,CAAC;QAEjC,IAAM,KAAK,GAAG,IAAI,QAAQ,EAAE,CAAC;QAC7B,KAAK,CAAC,MAAM,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QAEjC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACZ,KAAK,CAAC,MAAM,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QACnC,CAAC;QAED,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,KAAK,CAAC;aAC9C,SAAS,CACR,iBAAO;YACL,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,KAAI,CAAC,SAAS,CAAC,UAAU,GAAG,OAAO,CAAC,IAAI,CAAC;YACzC,KAAI,CAAC,YAAY,GAAG,KAAI,CAAC,SAAS,CAAC,UAAU,CAAC;YAC9C,KAAI,CAAC,SAAS,CAAC,aAAa,GAAG,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC;YACnD,EAAE,CAAC,CAAC,KAAI,CAAC,SAAS,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC;gBACrC,KAAI,CAAC,gBAAgB,GAAG,KAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,CAAC;YAC1D,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,YAAY,GAAG,EAAE,CAAC;YACzB,CAAC;YACD,KAAI,CAAC,IAAI,EAAE,CAAC;QACd,CAAC,EAAE,eAAK;YACN,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IACT,CAAC;IAGD,gCAAI,GAAJ;QAAA,iBA+MC;QA7MC,iFAAiF;QACjF,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC;YACtB,EAAE,CAAC,CAAC,SAAS,CAAC,WAAW,CAAC,CAAC,CAAC;gBAC1B,SAAS,CAAC,WAAW,CAAC,kBAAkB,CAAC,kBAAQ;oBAC/C,IAAM,GAAG,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,aAAa,EAAE;wBACzD,MAAM,EAAE;4BACN,GAAG,EAAE,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,KAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,QAAQ;4BAC7D,GAAG,EAAE,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,KAAI,CAAC,SAAS,CAAC,CAAC,CAAC,QAAQ,CAAC,MAAM,CAAC,SAAS;yBACjE;wBACD,IAAI,EAAE,EAAE;qBACT,CAAC,CAAC;oBACH,KAAI,CAAC,GAAG,GAAG,GAAG,CAAC;oBAEf,6BAA6B;oBAC7B,KAAI,CAAC,YAAY,CAAC,OAAO,CAAC,UAAC,QAAQ,EAAC,cAAc;wBAEhD,IAAM,gBAAgB,GAAG,IAAI,CAAC,KAAK,CAAC,QAAQ,CAAC,gBAAgB,CAAC,CAAC;wBAC/D,IAAM,OAAO,GAAG,gBAAgB,CAAC,GAAG,CAAC,YAAE;4BACrC,IAAM,MAAM,GAAG,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;4BAC7B,IAAM,KAAK,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;4BACnF,MAAM,CAAC,KAAK,CAAC;wBACf,CAAC,CACA,CAAC;wBAGF,8BAA8B;wBAC9B,IAAM,aAAa,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC;4BAC5C,KAAK,EAAE,OAAO;4BACd,QAAQ,EAAE,IAAI;4BACd,WAAW,EAAE,SAAS;4BACtB,aAAa,EAAE,GAAG;4BAClB,YAAY,EAAE,CAAC;4BACf,SAAS,EAAE,SAAS;4BACpB,WAAW,EAAE,IAAI;yBAClB,CAAC,CAAC;wBACH,QAAQ,CAAC,OAAO,GAAG,aAAa,CAAC;wBAEjC,kCAAkC;wBAClC,EAAE,EAAC,KAAI,CAAC,gBAAgB,CAAC,EAAC;4BACxB,EAAE,EAAC,CAAC,cAAc,GAAG,CAAC,CAAC,KAAK,KAAI,CAAC,YAAY,CAAC,MAAM,CAAC,EAAC;gCACpD,KAAI,CAAC,YAAY,CAAC,aAAa,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC;4BAChD,CAAC;4BAAA,IAAI,EAAC;gCACJ,aAAa,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;4BACnC,CAAC;wBACH,CAAC;wBAAA,IAAI,CAAC,EAAE,EAAC,KAAI,CAAC,WAAW,CAAC,EAAC;4BACvB,EAAE,EAAC,QAAQ,CAAC,EAAE,KAAK,KAAI,CAAC,WAAW,CAAC,EAAE,CAAC,EAAC;gCACtC,KAAI,CAAC,YAAY,CAAC,aAAa,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC;4BAChD,CAAC;4BAAA,IAAI,EAAC;gCACJ,aAAa,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;4BACnC,CAAC;wBACL,CAAC;wBAAA,IAAI,CAAC,CAAC;4BACL,EAAE,CAAC,CAAC,cAAc,KAAK,CAAC,CAAC,CAAC,CAAC;gCACzB,KAAI,CAAC,YAAY,CAAC,aAAa,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC;4BAChD,CAAC;4BACD,IAAI,EAAC;gCACF,aAAa,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;4BACpC,CAAC;wBACH,CAAC;wBACD,uBAAuB;wBAGvB,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,aAAa,EAAE,OAAO,EAAE;4BACpD,KAAI,CAAC,YAAY,CAAC,aAAa,EAAE,QAAQ,CAAC,EAAE,CAAC,CAAC;wBAChD,CAAC,CAAC,CAAC;wBACJ,IAAI,IAAI,GAAG,KAAI,CAAC;wBACf,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,aAAa,EAAE,SAAS,EAAE,UAAS,OAAO;4BACtE,8BAA8B;4BAC9B,uFAAuF;4BACvF,IAAI,OAAO,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,WAAC,IAAI,QAAC,CAAC,EAAE,IAAI,IAAI,CAAC,gBAAgB,EAA7B,CAA6B,CAAC;4BACxE,IAAI,CAAC,WAAW,GAAG,OAAO,CAAC;4BAC3B,kDAAkD;4BAClD,uFAAuF;4BACvF,gDAAgD;4BAChD,2BAA2B;4BAC3B,+CAA+C;4BAC/C,6BAA6B;4BAC7B,0DAA0D;4BAC1D,KAAK;4BACL,sDAAsD;4BACtD,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,EAAE,EAAE,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,OAAO,EAAE,OAAO,CAAC,cAAc,EAAE,OAAO,CAAC,MAAM,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,gBAAgB,CAAC,aAAa,CAAC,CAAC,CAAC,CAAC;4BAC/J,8HAA8H;4BAC9H,qIAAqI;4BACpI,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;wBAC1C,CAAC,CAAC,CAAC;wBAEH,aAAa,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;oBAC5B,CAAC,CAAC,CAAC;oBAGH,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,GAAG,EAAE,OAAO,EAAE,eAAK;wBAC/C,KAAI,CAAC,WAAW,CAAC,KAAK,CAAC,MAAM,CAAC,CAAC;oBACjC,CAAC,CAAC,CAAC;oBAEH,IAAM,cAAc,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,cAAc,CAAC;wBAE5D,cAAc,EAAE,IAAI;wBACpB,qBAAqB,EAAE;4BACrB,QAAQ,EAAE,MAAM,CAAC,IAAI,CAAC,eAAe,CAAC,UAAU;4BAChD,YAAY,EAAE;gCACZ,0CAA0C;gCAC1C,0CAA0C;gCAC1C,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,OAAO;gCACvC,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,SAAS;6BAC1C;yBACF;wBACD,cAAc,EAAE;4BACd,SAAS,EAAE,IAAI;4BACf,SAAS,EAAE,IAAI;4BACf,QAAQ,EAAE,IAAI;4BACd,SAAS,EAAE,SAAS;4BACpB,WAAW,EAAE,GAAG;yBAEjB;wBACD,gBAAgB,EAAE;4BAChB,SAAS,EAAE,IAAI;4BACf,SAAS,EAAE,IAAI;4BACf,QAAQ,EAAE,IAAI;4BACd,SAAS,EAAE,SAAS;4BACpB,WAAW,EAAE,GAAG;yBACjB;qBACF,CAAC,CAAC;oBAGH,cAAc,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;oBAE3B,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,cAAc,EAAE,iBAAiB,EAAE,eAAK;wBAEpE,KAAK,CAAC,OAAO,EAAE,CAAC,SAAS,EAAE,CAAC;wBAC5B,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,EAAE,EAAE,WAAW,EAAE;4BAC1D,IAAM,GAAG,GAAG,KAAK,CAAC,OAAO,EAAE,CAAC,SAAS,EAAE,CAAC;4BACxC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;gCAC7B,uDAAuD;4BACzD,CAAC;wBACH,CAAC,CAAC,CAAC;wBACH,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,OAAO,EAAE,EAAE,QAAQ,EAAE;4BACvD,IAAM,GAAG,GAAG,KAAK,CAAC,OAAO,EAAE,CAAC,SAAS,EAAE,CAAC;4BACxC,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;gCAC7B,uDAAuD;4BACzD,CAAC;wBACH,CAAC,CAAC,CAAC;oBACL,CAAC,CAAC,CAAC;oBAEH,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,cAAc,EAAE,iBAAiB,EAAE,eAAK;wBAEpE,KAAI,CAAC,SAAS,CAAC,OAAO,GAAG,KAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC;wBAC9D,KAAI,CAAC,KAAK,CAAC,MAAM,GAAG,GAAG,CAAC;wBACxB,KAAI,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;wBAExC,qBAAqB;wBACrB,YAAY;wBACZ,eAAe;wBAEf,wBAAwB;wBAExB,qBAAqB;wBACrB,+BAA+B;wBAC/B,+BAA+B;wBAC/B,yDAAyD;wBACzD,8EAA8E;wBAC9E,kBAAkB;wBAClB,sCAAsC;wBACtC,6BAA6B;wBAC7B,OAAO;wBACP,wCAAwC;wBACxC,6CAA6C;wBAC7C,qCAAqC;wBACrC,2CAA2C;wBAC3C,6BAA6B;wBAE7B,+DAA+D;wBAC/D,eAAe;wBACf,0CAA0C;wBAC1C,2DAA2D;wBAC3D,YAAY;wBAEZ,MAAM;wBACN,yCAAyC;wBAIzC,EAAE,CAAC,CAAC,KAAK,CAAC,IAAI,KAAK,MAAM,CAAC,IAAI,CAAC,OAAO,CAAC,WAAW,CAAC,MAAM,CAAC,CAAC,CAAC;4BAC1D,cAAc,CAAC,cAAc,CAAC,IAAI,CAAC,CAAC;4BACpC,kDAAkD;4BAElD,IAAM,UAAQ,GAAG,KAAK,CAAC,OAAO,CAAC;4BAC/B,UAAQ,CAAC,IAAI,GAAG,KAAK,CAAC,IAAI,CAAC;4BAC3B,MAAM,CAAC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,UAAQ,EAAE,OAAO,EAAE;gCAC/C,KAAI,CAAC,YAAY,CAAC,UAAQ,CAAC,CAAC;4BAC9B,CAAC,CAAC,CAAC;4BAEH,KAAI,CAAC,YAAY,CAAC,UAAQ,CAAC,CAAC;wBAE9B,CAAC;oBACH,CAAC,CAAC,CAAC;oBAGH,wDAAwD;oBACxD,mEAAmE;oBACnE,iEAAiE;oBAEjE,8BAA8B;oBAC9B,kFAAkF;gBACpF,CAAC,CAAC,CAAC;YACL,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,wCAAY,GAAZ,UAAa,EAAU,EAAE,OAAe,EAAE,OAAe,EAAE,cAAsB,EAAE,MAAc,EAAE,gBAAwB;QACzH,IAAI,CAAC,KAAK,CAAC,EAAE,GAAG,EAAE,CAAC;QACnB,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;QAC7B,IAAI,CAAC,KAAK,CAAC,OAAO,GAAG,OAAO,CAAC;QAC7B,IAAI,CAAC,KAAK,CAAC,cAAc,GAAG,cAAc,CAAC;QAC3C,IAAI,CAAC,KAAK,CAAC,MAAM,GAAG,MAAM,CAAC;QAC3B,IAAI,CAAC,SAAS,CAAC,OAAO,GAAG,IAAI,CAAC,KAAK,CAAC,gBAAgB,CAAC,CAAC;QACtD,IAAI,CAAC,YAAY,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;IAC1C,CAAC;IAED,6DAAiC,GAAjC,UAAkC,OAAe,EAAE,OAAe,EAAE,cAAsB;QAA1F,iBAkBC;QAjBC,IAAM,IAAI,GAAG,IAAI,CAAC;QAClB,EAAE,CAAC,CAAC,OAAO,KAAK,EAAE,CAAC,CAAC,CAAC;YACnB,IAAI,CAAC;gBACH,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,kCAAkC,CAAC;gBAChE,IAAI,EAAE,SAAS;gBACf,gBAAgB,EAAE,IAAI;gBACtB,kBAAkB,EAAE,IAAI,CAAC,QAAQ,CAAC,kBAAkB;gBACpD,iBAAiB,EAAE,IAAI,CAAC,QAAQ,CAAC,iBAAiB;gBAClD,iBAAiB,EAAE,KAAK;aACzB,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;gBACb,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,cAAc,CAAC,CAAC;gBACrD,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,WAAW,CAAC,OAAO,EAAE,OAAO,EAAE,cAAc,CAAC,CAAC;QACrD,CAAC;IACH,CAAC;IAED,sCAAU,GAAV;QACE,IAAI,CAAC,KAAK,GAAG,IAAI,sEAAQ,EAAE,CAAC;QAC5B,IAAI,CAAC,aAAa,CAAC,aAAa,CAAC,KAAK,EAAE,CAAC;QACzC,IAAI,CAAC,aAAa,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,EAAE,EAAE,CAAC,CAAC;IACjD,CAAC;IAED,uCAAW,GAAX,UAAY,OAAe,EAAE,OAAe,EAAE,cAAsB;QAApE,iBA8BC;QA7BC,4CAA4C;QAC5C,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAC9B,EAAE,EAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,EAAC;YAChB,IAAI,CAAC,gBAAgB,GAAG,KAAK,CAAC;QAChC,CAAC;QAAA,IAAI,EAAC;YACJ,IAAI,CAAC,gBAAgB,GAAG,IAAI,CAAC;QAC/B,CAAC;QACD,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAM,QAAQ,GAAG;YACf,OAAO,EAAE,OAAO;YAChB,OAAO,EAAE,OAAO;YAChB,cAAc,EAAE,cAAc;YAC9B,WAAW,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO;YACnC,gBAAgB,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC;YACxD,MAAM,EAAE,IAAI,CAAC,KAAK,CAAC,MAAM;YACzB,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO;YAC/B,OAAO,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO;YAC/B,EAAE,EAAE,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,EAAE,CAAC,CAAC,CAAC,EAAE;SACvC,CAAC;QACF,OAAO,QAAQ,CAAC,OAAO,CAAC;QACxB,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC,SAAS,CACvD,WAAC;YACC,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,KAAI,CAAC,UAAU,EAAE,CAAC;YAClB,KAAI,CAAC,IAAI,EAAE,CAAC;QACd,CAAC,EAAE,eAAK;YACN,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IACP,CAAC;IAGD,4CAAgB,GAAhB,UAAiB,QAAQ;QACvB,IAAM,iBAAiB,GAAG,EAAE,CAAC;QAC7B,IAAM,GAAG,GAAG,QAAQ,CAAC,OAAO,EAAE,CAAC,SAAS,EAAE,CAAC;QAC3C,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,EAAE,CAAC,EAAE,EAAE,CAAC;YAC7B,iBAAiB,CAAC,IAAI,CAAC,QAAQ,CAAC,OAAO,EAAE,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,CAAC;QACpE,CAAC;QACD,MAAM,CAAC,iBAAiB,CAAC;IAC3B,CAAC;IAED,+CAAmB,GAAnB,UAAoB,EAAE;QACpB,IAAM,MAAM,GAAG,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC;QAC/B,MAAM,CAAC,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9E,CAAC;IAED,uCAAW,GAAX,UAAY,QAAQ;QAClB,IAAM,MAAM,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC;YACpC,QAAQ,EAAE,QAAQ;YAClB,GAAG,EAAE,IAAI,CAAC,GAAG;SACd,CAAC,CAAC;IAEL,CAAC;IAED,0CAAc,GAAd;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;YACvB,IAAI,CAAC,aAAa,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;YACtC,IAAI,CAAC,aAAa,GAAG,IAAI,CAAC;QAC5B,CAAC;IACH,CAAC;IAED,wCAAY,GAAZ,UAAa,KAAK,EAAE,QAAa;QAAb,wCAAa;QAC/B,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC;QAEjC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,CAAC;QACxB,IAAM,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;QAE5C,IAAI,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QAClC,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC;YACpC,MAAM,GAAG,CAAC,IAAI,CAAC,QAAQ,EAAE,IAAI,CAAC,SAAS,CAAC,CAAC;QAC3C,CAAC;QACD,IAAM,KAAK,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAEnF,gEAAgE;QAChE,gDAAgD;QAEhD,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QAE1B,gGAAgG;QAChG,0FAA0F;IAC5F,CAAC;IAED,mDAAuB,GAAvB,UAAwB,KAAK,EAAE,QAAa;QAAb,wCAAa;QAC1C,IAAI,CAAC,cAAc,EAAE,CAAC;QACtB,IAAI,CAAC,gBAAgB,GAAG,QAAQ,CAAC;QAEjC,IAAI,CAAC,aAAa,GAAG,KAAK,CAAC;QAC3B,KAAK,CAAC,WAAW,CAAC,KAAK,CAAC,CAAC;QACzB,IAAM,MAAM,GAAG,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,CAAC;QAE5C,IAAM,MAAM,GAAG,MAAM,CAAC,CAAC,CAAC,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;QACpC,IAAM,KAAK,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,EAAE,UAAU,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;QAGnF,gEAAgE;QAChE,gDAAgD;QAEhD,IAAI,CAAC,GAAG,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC;QAE1B,gGAAgG;QAChG,0FAA0F;IAC5F,CAAC;IAED,+CAAmB,GAAnB;QACE,EAAE,CAAC,CAAC,IAAI,CAAC,aAAa,CAAC,CAAC,CAAC;YACvB,IAAI,CAAC,aAAa,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAClC,CAAC;IACH,CAAC;IAED,0CAAc,GAAd;QACE,GAAG,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,IAAI,CAAC,YAAY,CAAC,MAAM,EAAE,CAAC,EAAE,EAAE,CAAC;YAClD,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC;QAC5C,CAAC;QACD,IAAI,CAAC,YAAY,GAAG,EAAE,CAAC;IACzB,CAAC;IAED,uCAAW,GAAX;QAAA,iBAIC;QAHC,IAAI,CAAC,YAAY,CAAC,OAAO,CAAC,UAAC,IAAI,EAAE,KAAK;YACpC,KAAI,CAAC,gBAAgB,CAAC,IAAI,CAAC,OAAO,CAAC,OAAO,CAAC,CAAC;QAC9C,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gDAAoB,GAApB,UAAqB,QAAQ,EAAE,KAAK,EAAE,IAAI;QAA1C,iBA0BC;QAzBC,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC;QAC7B,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YACb,KAAK,CAAC;gBACJ,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,mCAAmC,CAAC,CAAC;gBAClF,IAAI,CAAC,SAAS,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,qCAAqC,CAAC,CAAC;gBAC3F,KAAK,CAAC;YACR,KAAK,CAAC;gBACJ,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,qCAAqC,CAAC,CAAC;gBACpF,IAAI,CAAC,SAAS,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,uCAAuC,CAAC,CAAC;gBAC7F,KAAK,CAAC;QACV,CAAC;QAED,IAAI,CAAC;YACH,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,0BAA0B,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI;YACvF,IAAI,EAAE,SAAS;YACf,gBAAgB,EAAE,IAAI;YACtB,kBAAkB,EAAE,IAAI,CAAC,QAAQ,CAAC,kBAAkB;YACpD,iBAAiB,EAAE,IAAI,CAAC,QAAQ,CAAC,iBAAiB;YAClD,iBAAiB,EAAE,KAAK;SACzB,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;YACb,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;gBACjB,KAAI,CAAC,eAAe,CAAC,QAAQ,EAAE,KAAK,EAAE,IAAI,CAAC,CAAC;gBAC5C,IAAI,CAAC,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE,KAAI,CAAC,SAAS,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;YACtF,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,0CAAc,GAAd,UAAe,QAAQ,EAAE,KAAa;QAAtC,iBAmBC;QAlBC,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,oCAAoC,CAAC,CAAC;QACnF,IAAI,CAAC;YACH,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,0BAA0B,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI;YACvF,IAAI,EAAE,SAAS;YACf,gBAAgB,EAAE,IAAI;YACtB,kBAAkB,EAAE,IAAI,CAAC,QAAQ,CAAC,kBAAkB;YACpD,iBAAiB,EAAE,IAAI,CAAC,QAAQ,CAAC,iBAAiB;YAClD,iBAAiB,EAAE,KAAK;SACzB,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;YACb,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;gBACjB,KAAI,CAAC,KAAK,CAAC,WAAW,CAAC,gBAAgB,EAAE,EAAE,EAAE,EAAE,QAAQ,CAAC,EAAE,EAAE,CAAC,CAAC,SAAS,CACrE,WAAC;oBACC,KAAI,CAAC,SAAS,CAAC,UAAU,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;oBAC3C,IAAI,CAAC,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,qCAAqC,CAAC,EAAE,SAAS,CAAC,CAAC;gBACzH,CAAC,CAAC,CAAC;YACP,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,2CAAe,GAAf,UAAgB,QAAQ,EAAE,KAAK,EAAE,MAAM;QACrC,QAAQ,CAAC,MAAM,GAAG,MAAM,CAAC;QACzB,qCAAqC;QACrC,iCAAiC;QACjC,OAAO,QAAQ,CAAC,OAAO,CAAC;QACxB,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,aAAa,EAAE,QAAQ,CAAC,CAAC,SAAS,CACvD,WAAC;YACC,kCAAkC;YAClC,iDAAiD;QACnD,CAAC,CAAC,CAAC;IACP,CAAC;IAED,2CAAe,GAAf,UAAgB,QAAQ,EAAE,KAAK;IAE/B,CAAC;IAED,gDAAoB,GAApB,UAAqB,KAAK,EAAE,WAAW,EAAE,IAAI;QAA7C,iBAuBC;QAtBC,IAAI,KAAK,GAAG,EAAE,CAAC;QACf,EAAE,CAAC,CAAC,IAAI,KAAK,CAAC,CAAC,CAAC,CAAC;YACf,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,qCAAqC,CAAC,CAAC;QACxE,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,KAAK,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,uCAAuC,CAAC,CAAC;QAC1E,CAAC;QACD,IAAI,CAAC;YACH,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,0BAA0B,CAAC,GAAG,MAAM,GAAG,KAAK;YACzE,IAAI,EAAE,SAAS;YACf,gBAAgB,EAAE,IAAI;YACtB,kBAAkB,EAAE,IAAI,CAAC,QAAQ,CAAC,kBAAkB;YACpD,iBAAiB,EAAE,IAAI,CAAC,QAAQ,CAAC,iBAAiB;YAClD,iBAAiB,EAAE,KAAK;SACzB,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;YACb,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;gBACjB,KAAI,CAAC,KAAK,CAAC,WAAW,CAAC,sBAAsB,EAAE,EAAE,WAAW,EAAE,WAAW,EAAE,IAAI,EAAE,IAAI,EAAE,CAAC,CAAC,SAAS,CAChG,WAAC;oBACC,KAAI,CAAC,SAAS,CAAC,UAAU,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC;oBAC1C,IAAI,CAAC,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE,KAAI,CAAC,SAAS,CAAC,WAAW,EAAE,SAAS,CAAC,CAAC;gBACtF,CAAC,CAAC,CAAC;YACP,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,qCAAS,GAAT,UAAU,OAAe;QAEvB,+FAA+F;QAC/F,gBAAgB;QAChB,mBAAmB;QACnB,uCAAuC;QACvC,oBAAoB;QACpB,6BAA6B;QAC7B,UAAU;QAEV,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC;YACtB,IAAM,QAAQ,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,QAAQ,EAAE,CAAC;YAC5C,MAAM,CAAC,0DAAU,CAAC,MAAM,CAAC,kBAAQ;gBAC/B,QAAQ,CAAC,OAAO,CAAC,EAAE,SAAS,EAAE,OAAO,EAAE,EAAE,UAAU,OAAO,EAAE,MAAM;oBAChE,EAAE,CAAC,CAAC,MAAM,KAAK,MAAM,CAAC,IAAI,CAAC,cAAc,CAAC,EAAE,CAAC,CAAC,CAAC;wBAC7C,QAAQ,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,QAAQ,CAAC,QAAQ,CAAC,CAAC;wBAC5C,QAAQ,CAAC,QAAQ,EAAE,CAAC;oBACtB,CAAC;oBAAC,IAAI,CAAC,CAAC;wBACN,QAAQ,CAAC,IAAI,CAAC,EAAE,CAAC,CAAC;wBAClB,QAAQ,CAAC,QAAQ,EAAE,CAAC;oBACtB,CAAC;gBACH,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;YACH,8CAA8C;QAChD,CAAC,CAAC,CAAC;IACL,CAAC;IAED,sCAAU,GAAV;QAAA,iBAqCC;QApCC,2BAA2B;QAC3B,IAAI,CAAC,MAAM,CAAC,IAAI,EAAE,CAAC,IAAI,CAAC;YACtB,IAAM,YAAY,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,MAAM,CAAC,YAAY,CAAC,KAAI,CAAC,gBAAgB,CAAC,aAAa,EAAE;gBAC5F,KAAK,EAAE,EAAE;aACV,CAAC,CAAC;YACH,YAAY,CAAC,WAAW,CAAC,eAAe,EAAE;gBACxC,KAAI,CAAC,MAAM,CAAC,GAAG,CAAC;oBACd,uBAAuB;oBACvB,yEAAyE;oBACzE,IAAM,KAAK,GAAG,YAAY,CAAC,QAAQ,EAAE,CAAC;oBACtC,gBAAgB;oBAChB,EAAE,CAAC,CAAC,KAAK,CAAC,QAAQ,KAAK,SAAS,IAAI,KAAK,CAAC,QAAQ,KAAK,IAAI,CAAC,CAAC,CAAC;wBAC5D,MAAM,CAAC;oBACT,CAAC;oBAED,mCAAmC;oBACnC,KAAI,CAAC,QAAQ,GAAG,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;oBAC9C,KAAI,CAAC,SAAS,GAAG,KAAK,CAAC,QAAQ,CAAC,QAAQ,CAAC,GAAG,EAAE,CAAC;oBAC/C,KAAI,CAAC,IAAI,GAAG,EAAE,CAAC;oBAEf,EAAE,CAAC,CAAC,KAAK,CAAC,iBAAiB,CAAC,CAAC,CAAC;wBAC5B,8CAA8C;oBAChD,CAAC;oBAED,IAAM,GAAG,GAAG,IAAI,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,KAAI,CAAC,MAAM,CAAC,aAAa,EAAE;wBACzD,MAAM,EAAE;4BACN,GAAG,EAAE,KAAI,CAAC,QAAQ;4BAClB,GAAG,EAAE,KAAI,CAAC,SAAS;yBACpB;wBACD,IAAI,EAAE,EAAE;qBACT,CAAC,CAAC;oBACH,KAAI,CAAC,GAAG,GAAG,GAAG,CAAC;oBACf,KAAI,CAAC,IAAI,EAAE,CAAC;gBACd,CAAC,CAAC,CAAC;YACL,CAAC,CAAC,CAAC;QACL,CAAC,CAAC,CAAC;IACL,CAAC;IAnrB4B;QAA5B,+DAAS,CAAC,gBAAgB,CAAC;kCAAmB,wDAAU;+DAAC;IAC/B;QAA1B,+DAAS,CAAC,cAAc,CAAC;kCAAe,wDAAU;2DAAC;IACxB;QAA3B,+DAAS,CAAC,eAAe,CAAC;kCAAgB,wDAAU;4DAAC;IAqBjC;QAApB,+DAAS,CAAC,QAAQ,CAAC;kCAAS,wDAAU;qDAAC;IAzB7B,iBAAiB;QAP7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;YAGxB,SAAS,EAAE,CAAC,iEAAQ,EAAE,sEAAQ,CAAC;SAChC,CAAC;yCA8BkB,uDAAa;YACf,2EAAY;YACV,oDAAM;YACJ,iEAAQ;YACZ,sEAAQ;YACL,6DAAiB;YACf,oEAAgB;OAlC1B,iBAAiB,CAsrB7B;IAAD,wBAAC;CAAA;AAtrB6B;;;;;;;;;;;;ACrB9B,+DAA+D,uK;;;;;;;;;;;ACA/D,iGAAiG,8BAA8B,4EAA4E,6BAA6B,2CAA2C,8BAA8B,qDAAqD,iCAAiC,yGAAyG,iCAAiC,uNAAuN,wCAAwC,iaAAia,8CAA8C,wiBAAwiB,+BAA+B,uVAAuV,iBAAiB,KAAK,kCAAkC,yCAAyC,iBAAiB,KAAK,kCAAkC,6CAA6C,sCAAsC,mFAAmF,uEAAuE,iBAAiB,2EAA2E,iBAAiB,uEAAuE,uCAAuC,wkBAAwkB,6FAA6F,iCAAiC,+BAA+B,6QAA6Q,mCAAmC,kCAAkC,+RAA+R,kCAAkC,gRAAgR,4CAA4C,wQAAwQ,sCAAsC,2LAA2L,wCAAwC,6LAA6L,YAAY,KAAK,iBAAiB,2NAA2N,uCAAuC,gRAAgR,8CAA8C,yZAAyZ,SAAS,+QAA+Q,+BAA+B,uUAAuU,iBAAiB,KAAK,gCAAgC,yCAAyC,iBAAiB,KAAK,gCAAgC,6CAA6C,sCAAsC,8EAA8E,yEAAyE,eAAe,2EAA2E,eAAe,uEAAuE,uCAAuC,slBAAslB,2FAA2F,iCAAiC,6BAA6B,oSAAoS,kCAAkC,gSAAgS,0CAA0C,yQAAyQ,qCAAqC,2LAA2L,wCAAwC,6LAA6L,YAAY,KAAK,iBAAiB,8MAA8M,sCAAsC,wLAAwL,UAAU,KAAK,eAAe,2NAA2N,uCAAuC,4QAA4Q,8CAA8C,oVAAoV,SAAS,+QAA+Q,+BAA+B,sUAAsU,iBAAiB,KAAK,+BAA+B,yCAAyC,iBAAiB,KAAK,+BAA+B,6CAA6C,sCAAsC,6EAA6E,wEAAwE,cAAc,2EAA2E,cAAc,uEAAuE,uCAAuC,wlBAAwlB,0FAA0F,iCAAiC,4BAA4B,8QAA8Q,kCAAkC,qOAAqO,6EAA6E,0CAA0C,oNAAoN,yCAAyC,uTAAuT,mCAAmC,6JAA6J,waAAwa,6CAA6C,yTAAyT,yCAAyC,0MAA0M,6CAA6C,qTAAqT,8BAA8B,wHAAwH,wCAAwC,iPAAiP,iCAAiC,6JAA6J,iaAAia,8CAA8C,+NAA+N,8CAA8C,kFAAkF,MAAM,KAAK,QAAQ,mOAAmO,yCAAyC,wMAAwM,2CAA2C,uTAAuT,uCAAuC,0MAA0M,2CAA2C,mTAAmT,8BAA8B,wHAAwH,wCAAwC,+OAA+O,gCAAgC,6JAA6J,4ZAA4Z,8CAA8C,iRAAiR,8CAA8C,kFAAkF,MAAM,KAAK,QAAQ,mOAAmO,yCAAyC,uKAAuK,4CAA4C,yMAAyM,4CAA4C,+EAA+E,MAAM,KAAK,QAAQ,2NAA2N,uCAAuC,wMAAwM,0CAA0C,sTAAsT,sCAAsC,0MAA0M,0CAA0C,kTAAkT,8BAA8B,wHAAwH,wCAAwC,+D;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA78rB;AACD;AAEG;AACR;AACL;AACJ;AACO;AAWvD;IASE,2BAAoB,QAAkB,EAAU,QAAkB,EACxD,YAA4B,EAAS,KAAmB,EAAU,OAA0B,EAC5F,SAA2B;QAFjB,aAAQ,GAAR,QAAQ,CAAU;QAAU,aAAQ,GAAR,QAAQ,CAAU;QACxD,iBAAY,GAAZ,YAAY,CAAgB;QAAS,UAAK,GAAL,KAAK,CAAc;QAAU,YAAO,GAAP,OAAO,CAAmB;QAC5F,cAAS,GAAT,SAAS,CAAkB;QAT9B,cAAS,GAAc,EAAE,CAAC;QAEjC,UAAK,GAAQ,EAAE,CAAC;IAQZ,CAAC;IAEL,oCAAQ,GAAR;QACE,IAAI,CAAC,aAAa,GAAG,EAAE,CAAC;QAAC,IAAI,CAAC,WAAW,GAAG,EAAE,CAAC;QAAC,IAAI,CAAC,UAAU,GAAG,EAAE,CAAC;QACrE,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,aAAa,EAAE,EAAE,CAAC,CAAC;IAC5C,CAAC;IAEM,4CAAgB,GAAvB,UAAwB,QAA0B,EAAE,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,KAAK;QAC7F,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,UAAU,GAAG,UAAU,CAAC;QACnD,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,OAAO,GAAG,OAAO,CAAC;QAC7C,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,OAAO,GAAG,OAAO,CAAC;QAC7C,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,MAAM,GAAG,MAAM,CAAC;QAC3C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACnD,CAAC;IAEM,0CAAc,GAArB,UAAsB,QAA0B,EAAE,UAAU,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,KAAK;QACrG,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,UAAU,GAAG,UAAU,CAAC;QACjD,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC7C,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,OAAO,GAAG,OAAO,CAAC;QAC3C,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,OAAO,GAAG,OAAO,CAAC;QAC3C,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,MAAM,GAAG,MAAM,CAAC;QACzC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACnD,CAAC;IAEM,yCAAa,GAApB,UAAqB,QAA0B,EAAE,UAAU,EAAE,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,KAAK;QAC7G,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,UAAU,GAAG,UAAU,CAAC;QAChD,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAC5C,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO,GAAG,OAAO,CAAC;QAC1C,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO,GAAG,OAAO,CAAC;QAC1C,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO,GAAG,OAAO,CAAC;QAC1C,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,GAAG,MAAM,CAAC;QACxC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACnD,CAAC;IAEM,qCAAS,GAAhB,UAAiB,QAA0B;QACzC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,MAAM;IAC1D,CAAC;IAGD,8CAA8C;IAC9C,wCAAY,GAAZ,UAAa,OAAO,EAAE,OAAO;QAA7B,iBA8BC;QA7BC,IAAM,KAAK,GAAG,IAAI,QAAQ,EAAE,CAAC;QAC7B,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YAAC,KAAK,CAAC,MAAM,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QAAC,CAAC;QAClD,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,cAAc,EAAE,KAAK,CAAC;aAC1C,SAAS,CACR,iBAAO;YACL,EAAE,CAAC,CAAC,OAAO,KAAK,EAAE,CAAC,CAAC,CAAC;gBACnB,KAAI,CAAC,SAAS,CAAC,UAAU,GAAG,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;gBACnD,KAAI,CAAC,SAAS,CAAC,UAAU,GAAG,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;gBACnD,KAAI,CAAC,SAAS,CAAC,UAAU,GAAG,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;gBACnD,KAAI,CAAC,SAAS,CAAC,UAAU,GAAG,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;gBACnD,KAAI,CAAC,SAAS,CAAC,UAAU,GAAG,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;gBACnD,KAAI,CAAC,SAAS,CAAC,KAAI,CAAC,SAAS,CAAC,UAAU,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;YAC1D,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC;gBACzB,KAAI,CAAC,SAAS,CAAC,UAAU,GAAG,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;YACrD,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC;gBACzB,KAAI,CAAC,SAAS,CAAC,UAAU,GAAG,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;gBACnD,EAAE,CAAC,CAAC,KAAI,CAAC,SAAS,CAAC,UAAU,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;oBACzC,4DAA4D;gBAC9D,CAAC;YACH,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC;gBACzB,KAAI,CAAC,SAAS,CAAC,UAAU,GAAG,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;YACrD,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC;gBACzB,KAAI,CAAC,SAAS,CAAC,UAAU,GAAG,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;YACrD,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC;gBACzB,KAAI,CAAC,SAAS,CAAC,UAAU,GAAG,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;YACrD,CAAC;QACH,CAAC,EAAE,eAAK;YACN,uBAAuB;QACzB,CAAC,CAAC,CAAC;IACT,CAAC;IAED,mCAAmC;IACnC,qCAAS,GAAT,UAAU,UAAU,EAAE,OAAO,EAAE,OAAO;QAAtC,iBAsCC;QArCC,IAAI,CAAC,SAAS,CAAC,UAAU,GAAG,UAAU,CAAC;QAEvC,IAAM,KAAK,GAAG,IAAI,QAAQ,EAAE,CAAC;QAC7B,KAAK,CAAC,MAAM,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;QAEvC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YAAC,KAAK,CAAC,MAAM,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QAAC,CAAC;QAElD,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,mBAAmB,EAAE,KAAK,CAAC;aAC/C,SAAS,CACR,iBAAO;YACL,EAAE,CAAC,CAAC,OAAO,KAAK,EAAE,CAAC,CAAC,CAAC;gBACnB,KAAI,CAAC,SAAS,CAAC,WAAW,GAAG,UAAU,CAAC;gBACxC,KAAI,CAAC,SAAS,CAAC,WAAW,GAAG,UAAU,CAAC;gBACxC,KAAI,CAAC,SAAS,CAAC,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;gBAChD,KAAI,CAAC,SAAS,CAAC,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;gBAChD,KAAI,CAAC,SAAS,CAAC,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;gBAChD,KAAI,CAAC,SAAS,CAAC,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC;YACvD,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC;gBACzB,KAAI,CAAC,SAAS,CAAC,WAAW,GAAG,UAAU,CAAC;gBACxC,KAAI,CAAC,SAAS,CAAC,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;gBAChD,yDAAyD;YAC3D,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC;gBACzB,KAAI,CAAC,SAAS,CAAC,WAAW,GAAG,UAAU,CAAC;gBACxC,KAAI,CAAC,SAAS,CAAC,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;gBAChD,EAAE,CAAC,CAAC,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,MAAM,GAAG,CAAC,CAAC,CAAC,CAAC;oBACtC,KAAI,CAAC,SAAS,CAAC,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC,CAAC,EAAE,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;gBACtD,CAAC;gBAAC,IAAI,CAAC,CAAC;oBACN,KAAI,CAAC,SAAS,CAAC,OAAO,GAAG,EAAE,CAAC;gBAC9B,CAAC;YACH,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC;gBACzB,KAAI,CAAC,SAAS,CAAC,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;YAClD,CAAC;YACD,6CAA6C;YAC7C,4DAA4D;YAC5D,2DAA2D;YAC3D,wCAAwC;QAC1C,CAAC,CAAC,CAAC;IACT,CAAC;IAGD,qCAAS,GAAT,UAAU,QAAQ,EAAE,OAAO,EAAE,OAAO;QAApC,iBAuBC;QAtBC,IAAI,CAAC,SAAS,CAAC,QAAQ,GAAG,QAAQ,CAAC;QACnC,IAAI,CAAC,UAAU,GAAG,OAAO,CAAC;QAC1B,IAAM,KAAK,GAAG,IAAI,QAAQ,EAAE,CAAC;QAC7B,KAAK,CAAC,MAAM,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;QACnC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YAAC,KAAK,CAAC,MAAM,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QAAC,CAAC;QAClD,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,WAAW,EAAE,KAAK,CAAC;aACvC,SAAS,CACR,iBAAO;YACL,kDAAkD;YAClD,EAAE,CAAC,CAAC,OAAO,KAAK,EAAE,CAAC,CAAC,CAAC;gBACnB,KAAI,CAAC,SAAS,CAAC,SAAS,GAAG,QAAQ,CAAC;gBACpC,KAAI,CAAC,SAAS,CAAC,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;gBAChD,KAAI,CAAC,SAAS,CAAC,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;YAClD,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC;gBACzB,KAAI,CAAC,SAAS,CAAC,SAAS,GAAG,QAAQ,CAAC;gBACpC,KAAI,CAAC,SAAS,CAAC,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;YAClD,CAAC;YAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,KAAK,CAAC,CAAC,CAAC,CAAC;gBACzB,KAAI,CAAC,SAAS,CAAC,OAAO,GAAG,OAAO,CAAC,IAAI,CAAC,OAAO,EAAE,CAAC;YAClD,CAAC;QACH,CAAC,EAAE,eAAK;YACN,uBAAuB;QACzB,CAAC,CAAC,CAAC;IACT,CAAC;IAGD,4DAAgC,GAAhC,UAAiC,OAAO,EAAE,OAAY;QAAtD,iBAkBC;QAlByC,sCAAY;QACpD,IAAM,IAAI,GAAG,IAAI,CAAC;QAClB,EAAE,CAAC,CAAC,OAAO,KAAK,EAAE,CAAC,CAAC,CAAC;YACnB,IAAI,CAAC;gBACH,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,kCAAkC,CAAC;gBAChE,IAAI,EAAE,SAAS;gBACf,gBAAgB,EAAE,IAAI;gBACtB,kBAAkB,EAAE,IAAI,CAAC,QAAQ,CAAC,kBAAkB;gBACpD,iBAAiB,EAAE,IAAI,CAAC,QAAQ,CAAC,iBAAiB;gBAClD,iBAAiB,EAAE,KAAK;aACzB,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;gBACb,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,UAAU,CAAC,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;gBAC3E,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;QAC3E,CAAC;IACH,CAAC;IAGD,sCAAU,GAAV,UAAW,OAAe,EAAE,OAAe,EAAE,MAAM,EAAE,UAAU;QAA/D,iBA+BC;QA9BC,EAAE,CAAC,CAAC,UAAU,KAAK,EAAE,CAAC,CAAC,CAAC;YAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;QAAC,CAAC,CAAI,sBAAsB;QAE1E,IAAM,KAAK,GAAG,IAAI,QAAQ,EAAE,CAAC;QAC7B,KAAK,CAAC,MAAM,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QACjC,KAAK,CAAC,MAAM,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QACjC,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QAE/B,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC,CAAC;YAC1C,KAAK,CAAC,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,UAAU,CAAC,CAAC;QACpE,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,UAAU,CAAC,CAAC,CAAC;YACtB,KAAK,CAAC,MAAM,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC;QACzC,CAAC;QAED,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,YAAY,EAAE,KAAK,CAAC;aACxC,SAAS,CACR,iBAAO;YACL,IAAM,IAAI,GAAG,KAAI,CAAC,QAAQ,CAAC,YAAY,CAAC,UAAU,IAAI,UAAU,CAAC,CAAC;gBAClE,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,qCAAqC,CAAC,CAAC,CAAC;gBAC/D,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,mCAAmC,CAAC,CAAC;YAC5D,IAAI,CAAC,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;YAC9D,KAAI,CAAC,YAAY,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;YAC1B,mEAAmE;YAGnE,qCAAqC;YACrC,kDAAkD;YAClD,UAAU;YACV,oEAAoE;YACpE,IAAI;QACN,CAAC,CAAC,CAAC;IACT,CAAC;IAGD,0DAA8B,GAA9B,UAA+B,UAAU,EAAE,OAAO,EAAE,OAAY;QAAhE,iBAkBC;QAlBmD,sCAAY;QAC9D,IAAM,IAAI,GAAG,IAAI,CAAC;QAClB,EAAE,CAAC,CAAC,OAAO,KAAK,EAAE,CAAC,CAAC,CAAC;YACnB,IAAI,CAAC;gBACH,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,gCAAgC,CAAC;gBAC9D,IAAI,EAAE,SAAS;gBACf,gBAAgB,EAAE,IAAI;gBACtB,kBAAkB,EAAE,IAAI,CAAC,QAAQ,CAAC,kBAAkB;gBACpD,iBAAiB,EAAE,IAAI,CAAC,QAAQ,CAAC,iBAAiB;gBAClD,iBAAiB,EAAE,KAAK;aACzB,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;gBACb,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;gBACnF,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;QACnF,CAAC;IACH,CAAC;IAGD,oCAAQ,GAAR,UAAS,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,QAAQ;QAAvD,iBAqCC;QAnCC,EAAE,CAAC,CAAC,QAAQ,KAAK,EAAE,CAAC,CAAC,CAAC;YAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;QAAC,CAAC;QAE9C,IAAM,KAAK,GAAG,IAAI,QAAQ,EAAE,CAAC;QAC7B,KAAK,CAAC,MAAM,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QACjC,KAAK,CAAC,MAAM,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QACjC,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QAE/B,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAC;YACxC,KAAK,CAAC,MAAM,CAAC,YAAY,EAAE,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,UAAU,CAAC,CAAC,CAAE,OAAO;QAC3E,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,KAAK,CAAC,MAAM,CAAC,YAAY,EAAE,UAAU,CAAC,CAAC,CAAE,MAAM;QACjD,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC,CAAC;YACtC,KAAK,CAAC,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,QAAQ,CAAC,CAAC;QAC9D,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,QAAQ,CAAC,CAAC,CAAC;YACpB,KAAK,CAAC,MAAM,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;QACrC,CAAC;QAED,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,kBAAkB,EAAE,KAAK,CAAC;aAC9C,SAAS,CACR,iBAAO;YACL,IAAM,IAAI,GAAG,KAAI,CAAC,QAAQ,CAAC,UAAU,CAAC,QAAQ,IAAI,QAAQ,CAAC,CAAC;gBAC5D,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,qCAAqC,CAAC,CAAC,CAAC;gBAC/D,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,mCAAmC,CAAC,CAAC;YAC5D,IAAI,CAAC,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;YAC9D,KAAI,CAAC,SAAS,CAAC,KAAI,CAAC,SAAS,CAAC,WAAW,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;YAClD,KAAI,CAAC,SAAS,CAAC,KAAI,CAAC,SAAS,CAAC,WAAW,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;YAClD,2DAA2D;YAC3D,qCAAqC;YACrC,8CAA8C;YAC9C,UAAU;YACV,gEAAgE;YAChE,IAAI;QACN,CAAC,CAAC,CAAC;IACT,CAAC;IAGD,yDAA6B,GAA7B,UAA8B,QAAQ,EAAE,OAAO,EAAE,OAAY;QAA7D,iBAkBC;QAlBgD,sCAAY;QAC3D,IAAM,IAAI,GAAG,IAAI,CAAC;QAClB,EAAE,CAAC,CAAC,OAAO,KAAK,EAAE,CAAC,CAAC,CAAC;YACnB,IAAI,CAAC;gBACH,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,+BAA+B,CAAC;gBAC7D,IAAI,EAAE,SAAS;gBACf,gBAAgB,EAAE,IAAI;gBACtB,kBAAkB,EAAE,IAAI,CAAC,QAAQ,CAAC,kBAAkB;gBACpD,iBAAiB,EAAE,IAAI,CAAC,QAAQ,CAAC,iBAAiB;gBAClD,iBAAiB,EAAE,KAAK;aACzB,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;gBACb,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;gBAC/E,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,EAAE,EAAE,CAAC,CAAC;QAC/E,CAAC;IACH,CAAC;IAGD,mCAAO,GAAP,UAAQ,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,OAAO;QAAnD,iBA4BC;QA3BC,EAAE,CAAC,CAAC,OAAO,KAAK,EAAE,CAAC,CAAC,CAAC;YAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;QAAC,CAAC;QAC7C,IAAM,KAAK,GAAG,IAAI,QAAQ,EAAE,CAAC;QAC7B,KAAK,CAAC,MAAM,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QACjC,KAAK,CAAC,MAAM,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QACjC,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QAE/B,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAC;YACrC,KAAK,CAAC,MAAM,CAAC,UAAU,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,QAAQ,CAAC,CAAC,CAAG,OAAO;QACvE,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,KAAK,CAAC,MAAM,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC,CAAG,MAAM;QAC9C,CAAC;QAED,EAAE,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAC;YACpC,KAAK,CAAC,MAAM,CAAC,SAAS,EAAE,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC,CAAG,OAAO;QACrE,CAAC;QAAC,IAAI,CAAC,EAAE,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC;YACnB,KAAK,CAAC,MAAM,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC,CAAG,OAAO;QAC7C,CAAC;QAED,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,SAAS,EAAE,KAAK,CAAC;aACrC,SAAS,CACR,iBAAO;YACL,IAAM,IAAI,GAAG,KAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO,IAAI,OAAO,CAAC,CAAC;gBACzD,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,qCAAqC,CAAC,CAAC,CAAC;gBAC/D,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,mCAAmC,CAAC,CAAC;YAC5D,IAAI,CAAC,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;YAC9D,KAAI,CAAC,SAAS,CAAC,KAAI,CAAC,SAAS,CAAC,SAAS,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;QAClD,CAAC,CAAC,CAAC;IACT,CAAC;IAGD,+CAAmB,GAAnB,UAAoB,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,KAAK;QAA7D,iBAyBC;QAxBC,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC;QAC7B,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YACb,KAAK,CAAC;gBACN,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,kCAAkC,CAAC,CAAC;gBACjF,IAAI,CAAC,SAAS,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,qCAAqC,CAAC,CAAC;gBACzF,KAAK,CAAC;YACR,KAAK,CAAC;gBACN,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,oCAAoC,CAAC,CAAC;gBACnF,IAAI,CAAC,SAAS,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,uCAAuC,CAAC,CAAC;gBAC3F,KAAK,CAAC;QACV,CAAC;QAED,IAAI,CAAC;YACH,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,0BAA0B,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI;YACvF,IAAI,EAAE,SAAS;YACf,gBAAgB,EAAE,IAAI;YACtB,kBAAkB,EAAE,IAAI,CAAC,QAAQ,CAAC,kBAAkB;YACpD,iBAAiB,EAAE,IAAI,CAAC,QAAQ,CAAC,iBAAiB;YAClD,iBAAiB,EAAE,KAAK;SACzB,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;YACb,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;gBACjB,KAAI,CAAC,UAAU,CAAC,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,UAAU,CAAC,CAAC;YACtD,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,6CAAiB,GAAjB,UAAkB,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,QAAQ,EAAE,KAAK;QAArE,iBA4BC;QA3BC,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC;QAC7B,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YACb,KAAK,CAAC;gBACN,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,gCAAgC,CAAC,CAAC;gBAC/E,IAAI,CAAC,SAAS,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,qCAAqC,CAAC,CAAC;gBACzF,KAAK,CAAC;YACR,KAAK,CAAC;gBACN,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,kCAAkC,CAAC,CAAC;gBACjF,IAAI,CAAC,SAAS,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,uCAAuC,CAAC,CAAC;gBAC3F,KAAK,CAAC;QACV,CAAC;QAED,qBAAqB;QACrB,IAAI,CAAC;YACH,+BAA+B;YAC/B,6BAA6B;YAC7B,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,0BAA0B,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI;YACvF,IAAI,EAAE,SAAS;YACf,gBAAgB,EAAE,IAAI;YACtB,kBAAkB,EAAE,IAAI,CAAC,QAAQ,CAAC,kBAAkB;YACpD,iBAAiB,EAAE,IAAI,CAAC,QAAQ,CAAC,iBAAiB;YAClD,iBAAiB,EAAE,KAAK;SACzB,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;YACb,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;gBACjB,KAAI,CAAC,QAAQ,CAAC,UAAU,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,QAAQ,CAAC,CAAC;YAC9D,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAGD,4CAAgB,GAAhB,UAAiB,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,EAAE,KAAK;QAAjE,iBA2BC;QA1BC,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC;QAC7B,MAAM,CAAC,CAAC,IAAI,CAAC,CAAC,CAAC;YACb,KAAK,CAAC;gBACN,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,+BAA+B,CAAC,CAAC;gBAC9E,IAAI,CAAC,SAAS,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,qCAAqC,CAAC,CAAC;gBACzF,KAAK,CAAC;YACR,KAAK,CAAC;gBACN,IAAI,CAAC,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,iCAAiC,CAAC,CAAC;gBAChF,IAAI,CAAC,SAAS,CAAC,WAAW,GAAG,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,uCAAuC,CAAC,CAAC;gBAC3F,KAAK,CAAC;QACV,CAAC;QAED,IAAI,CAAC;YACH,+BAA+B;YAC/B,6BAA6B;YAC7B,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,0BAA0B,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI;YACvF,IAAI,EAAE,SAAS;YACf,gBAAgB,EAAE,IAAI;YACtB,kBAAkB,EAAE,IAAI,CAAC,QAAQ,CAAC,kBAAkB;YACpD,iBAAiB,EAAE,IAAI,CAAC,QAAQ,CAAC,iBAAiB;YAClD,iBAAiB,EAAE,KAAK;SACzB,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;YACb,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;gBACjB,KAAI,CAAC,OAAO,CAAC,QAAQ,EAAE,OAAO,EAAE,OAAO,EAAE,IAAI,EAAE,OAAO,CAAC,CAAC;YAC1D,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAEH,gCAAgC;IAC9B,uCAAW,GAAX,UAAY,IAAU,EAAE,KAAa,EAAE,KAAc;QAArD,iBAgBC;QAfC,IAAI,CAAC;YACH,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,0BAA0B,CAAC,GAAG,MAAM;gBAC/D,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,4BAA4B,GAAG,KAAK,CAAC;YAC9D,IAAI,EAAE,SAAS;YACf,gBAAgB,EAAE,IAAI;YACtB,kBAAkB,EAAE,IAAI,CAAC,QAAQ,CAAC,kBAAkB;YACpD,iBAAiB,EAAE,IAAI,CAAC,QAAQ,CAAC,iBAAiB;YAClD,iBAAiB,EAAE,KAAK;SACzB,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;YACb,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;gBACjB,KAAK,IAAI,SAAS,EAAC,CAAC,KAAI,CAAC,aAAa,CAAC,IAAI,EAAE,KAAK,CAAC,CAAC,CAAC,CAAC,KAAK,IAAI,OAAO,EAAC;oBACvE,KAAI,CAAC,WAAW,CAAC,IAAI,EAAE,KAAK,CAAC,EAAC,CAAC,KAAK,IAAI,MAAM,EAAC;oBAC/C,KAAI,CAAC,UAAU,CAAC,IAAI,EAAE,KAAK,CAAC,EAAC,CAAC,SAAS,CAAC;YAC1C,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,yCAAa,GAAb,UAAc,OAAY,EAAE,KAAa;QAAzC,iBAUC;QATC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,eAAe,EACpC,EAAE,UAAU,EAAE,OAAO,CAAC,EAAE,EAAE,CAAC,CAAC,SAAS,CAAC,WAAC;YACrC,IAAI,CAAC,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,qCAAqC,CAAC,EAAE,SAAS,CAAC,CAAC;YACvH,KAAI,CAAC,YAAY,CAAC,EAAE,EAAE,EAAE,CAAC,CAAC;YAC1B,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QAC9B,CAAC,EACC,eAAK;YACH,IAAI,CAAC,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE,KAAK,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;QACrE,CAAC,CAAC,CAAC;IACT,CAAC;IAED,uCAAW,GAAX,UAAY,KAAU,EAAE,KAAa;QAArC,iBAWC;QAVC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,aAAa,EAClC,EAAE,QAAQ,EAAE,KAAK,CAAC,EAAE,EAAE,CAAC,CAAC,SAAS,CAAC,WAAC;YACjC,IAAI,CAAC,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,qCAAqC,CAAC,EAAE,SAAS,CAAC,CAAC;YACvH,KAAI,CAAC,SAAS,CAAC,KAAI,CAAC,SAAS,CAAC,WAAW,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;YAChD,KAAI,CAAC,SAAS,CAAC,KAAI,CAAC,SAAS,CAAC,WAAW,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;YACpD,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QAC9B,CAAC,EACC,eAAK;YACH,IAAI,CAAC,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE,KAAK,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;QACrE,CAAC,CAAC,CAAC;IACT,CAAC;IAED,sCAAU,GAAV,UAAW,IAAS,EAAE,KAAa;QAAnC,iBAUC;QATC,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,YAAY,EACjC,EAAE,OAAO,EAAE,IAAI,CAAC,EAAE,EAAE,CAAC,CAAC,SAAS,CAAC,WAAC;YAC/B,IAAI,CAAC,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,qCAAqC,CAAC,EAAE,SAAS,CAAC,CAAC;YACvH,KAAI,CAAC,SAAS,CAAC,KAAI,CAAC,SAAS,CAAC,SAAS,EAAE,EAAE,EAAE,CAAC,CAAC,CAAC;YAChD,KAAI,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QAC9B,CAAC,EACC,eAAK;YACH,IAAI,CAAC,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,YAAY,CAAC,EAAE,KAAK,CAAC,OAAO,EAAE,OAAO,CAAC,CAAC;QACrE,CAAC,CAAC,CAAC;IACT,CAAC;IAjdU,iBAAiB;QAP7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;YAGxB,SAAS,EAAE,CAAC,sEAAQ,EAAE,iEAAQ,CAAC;SAChC,CAAC;yCAW8B,sEAAQ,EAAoB,iEAAQ;YAC1C,kEAAc,EAAgB,2EAAY,EAAmB,6DAAiB;YACjF,oEAAgB;OAX1B,iBAAiB,CAkd7B;IAAD,wBAAC;CAAA;AAld6B;;;;;;;;;;;;AClB9B,+DAA+D,mK;;;;;;;;;;;ACA/D,yJAAyJ,+BAA+B,yYAAyY,wFAAwF,aAAa,mDAAmD,iCAAiC,2QAA2Q,4BAA4B,mTAAmT,qCAAqC,seAAse,+BAA+B,oZAAoZ,4EAA4E,yJAAyJ,KAAK,uBAAuB,4gBAA4gB,yCAAyC,KAAK,iCAAiC,4QAA4Q,uCAAuC,KAAK,+BAA+B,0QAA0Q,yCAAyC,KAAK,iCAAiC,4QAA4Q,yCAAyC,KAAK,uCAAuC,4QAA4Q,uCAAuC,KAAK,+BAA+B,6YAA6Y,uIAAuI,wCAAwC,6FAA6F,eAAe,0MAA0M,sCAAsC,sGAAsG,YAAY,0MAA0M,qCAAqC,sGAAsG,YAAY,0MAA0M,yCAAyC,sGAAsG,gBAAgB,0MAA0M,yCAAyC,sGAAsG,eAAe,yK;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAh+M;AACY;AAEf;AACK;AACJ;AAShD;IAME,0BAAmB,QAAkB,EAAS,KAAU,EAC9C,KAAmB,EAAU,OAA0B;QAD9C,aAAQ,GAAR,QAAQ,CAAU;QAAS,UAAK,GAAL,KAAK,CAAK;QAC9C,UAAK,GAAL,KAAK,CAAc;QAAU,YAAO,GAAP,OAAO,CAAmB;QAJ1D,cAAS,GAAc,EAAE,CAAC;QAEjC,SAAI,GAAG,KAAK,CAAC;IAGT,CAAC;IAEL,mCAAQ,GAAR;QACE,IAAI,CAAC,KAAK,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC;QACrD,IAAI,CAAC,KAAK,CAAC,SAAS,GAAG,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC;QAC/C,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,IAAI,CAAC,QAAQ,CAAC,YAAY,CAAC;QACzD,IAAI,CAAC,SAAS,CAAC,CAAC,GAAG,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC;QACnC,IAAI,CAAC,cAAc,GAAG,EAAC,cAAc,EAAE,IAAI,CAAC,QAAQ,CAAC,YAAY,EAAC,CAAC;QACnE,IAAI,CAAC,SAAS,EAAE,CAAC;IACnB,CAAC;IAED,oCAAS,GAAT;QAAA,iBAuBC;QAtBC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,WAAW,EAAE,EAAE,CAAC;aACtC,SAAS,CACR,iBAAO;YACL,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,KAAI,CAAC,KAAK,GAAG,OAAO,CAAC,IAAI,CAAC;YAC1B,KAAI,CAAC,KAAK,GAAG,KAAI,CAAC,KAAK,CAAC,KAAK,CAAC;YAC9B,KAAI,CAAC,KAAK,CAAC,SAAS,GAAG,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC;YAC9C,KAAI,CAAC,KAAK,CAAC,OAAO,GAAG,EAAE,CAAC;YACxB,GAAG,CAAC,CAAC,IAAI,GAAG,GAAG,CAAC,EAAE,GAAG,GAAG,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,MAAM,EAAE,GAAG,EAAE,EAAE,CAAC;gBAC7D,IAAM,OAAO,GAAG;oBACd,SAAS,EAAE,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,OAAO;oBAC9C,MAAM,EAAE,OAAO,CAAC,IAAI,CAAC,MAAM,KAAK,IAAI,IAAI,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK;oBAC3G,MAAM,EAAE,OAAO,CAAC,IAAI,CAAC,MAAM,KAAK,IAAI,IAAI,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK;oBAC3G,UAAU,EAAE,OAAO,CAAC,IAAI,CAAC,UAAU,KAAK,IAAI,IAAI,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,UAAU,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK;oBAC3H,SAAS,EAAE,OAAO,CAAC,IAAI,CAAC,SAAS,KAAK,IAAI,IAAI,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,OAAO,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK;iBACxH,CAAC;gBACF,KAAI,CAAC,KAAK,CAAC,OAAO,CAAC,GAAG,CAAC,GAAG,OAAO,CAAC;YACpC,CAAC;QACH,CAAC,EAAE,eAAK;YACN,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IACP,CAAC;IAED,oCAAS,GAAT,UAAU,KAAa;QACrB,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,IAAI,GAAG,IAAI,CAAC,KAAK,CAAC,SAAS,CAAC,KAAK,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,CAAC,CAAC,KAAK,CAAC,CAAC,CAAC,IAAI,CAAC;IAC9F,CAAC;IA9CU,gBAAgB;QAN5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;YAGvB,SAAS,EAAE,CAAC,4DAAG,CAAC;SACjB,CAAC;yCAO6B,iEAAQ,EAAgB,4DAAG;YACvC,2EAAY,EAAmB,6DAAiB;OAPtD,gBAAgB,CA+C5B;IAAD,uBAAC;CAAA;AA/C4B;;;;;;;;;;;;ACd7B,+BAA+B,2BAA2B,6CAA6C,+V;;;;;;;;;;;ACAvG,qGAAqG,8BAA8B,gFAAgF,6BAA6B,6CAA6C,8BAA8B,uDAAuD,6BAA6B,6GAA6G,6BAA6B,uNAAuN,wCAAwC,+iBAA+iB,sDAAsD,qVAAqV,4CAA4C,qQAAqQ,sDAAsD,isBAAisB,iBAAiB,KAAK,+BAA+B,+CAA+C,iBAAiB,KAAK,+BAA+B,mDAAmD,sCAAsC,uFAAuF,mFAAmF,cAAc,6FAA6F,cAAc,2FAA2F,uCAAuC,moBAAmoB,0FAA0F,gBAAgB,4BAA4B,yjCAAyjC,+CAA+C,oSAAoS,mCAAmC,ugBAAugB,iDAAiD,+UAA+U,0CAA0C,yQAAyQ,iDAAiD,upBAAupB,iBAAiB,KAAK,+BAA+B,6CAA6C,iBAAiB,KAAK,+BAA+B,iDAAiD,sCAAsC,0FAA0F,+EAA+E,cAAc,uFAAuF,cAAc,qFAAqF,uCAAuC,2mBAA2mB,0FAA0F,gBAAgB,4BAA4B,iiCAAiiC,gDAAgD,qRAAqR,iCAAiC,qhBAAqhB,2CAA2C,wHAAwH,8BAA8B,sOAAsO,iCAAiC,kQAAkQ,oDAAoD,yUAAyU,0CAA0C,iPAAiP,oDAAoD,6oCAA6oC,8BAA8B,+CAA+C,iBAAiB,KAAK,+BAA+B,+CAA+C,iBAAiB,KAAK,+BAA+B,mDAAmD,sCAAsC,uFAAuF,kLAAkL,WAAW,gGAAgG,cAAc,6FAA6F,cAAc,2FAA2F,uCAAuC,8nBAA8nB,0FAA0F,gBAAgB,4BAA4B,2iCAA2iC,mDAAmD,+cAA+c,0CAA0C,6JAA6J,qcAAqc,6DAA6D,ySAAyS,0CAA0C,wKAAwK,6DAA6D,0RAA0R,8BAA8B,wHAAwH,6BAA6B,oQAAoQ,wCAAwC,6JAA6J,ubAAub,iDAAiD,mSAAmS,0CAA0C,wKAAwK,iDAAiD,qRAAqR,8BAA8B,wHAAwH,6BAA6B,2PAA2P,mCAAmC,iKAAiK,8xBAA8xB,6CAA6C,ySAAyS,0CAA0C,kLAAkL,6CAA6C,6RAA6R,8BAA8B,uHAAuH,6BAA6B,uE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACA7wsB;AACb;AAGG;AACb;AACc;AAElB;AACO;AAUvD;IAME,0BAAoB,OAAmB,EAAU,QAAkB,EAAS,OAAgB,EAClF,YAA4B,EAAS,KAAmB,EACzD,YAAuB,EAAU,OAA0B,EAC1D,SAA2B;QAHjB,YAAO,GAAP,OAAO,CAAY;QAAU,aAAQ,GAAR,QAAQ,CAAU;QAAS,YAAO,GAAP,OAAO,CAAS;QAClF,iBAAY,GAAZ,YAAY,CAAgB;QAAS,UAAK,GAAL,KAAK,CAAc;QACzD,iBAAY,GAAZ,YAAY,CAAW;QAAU,YAAO,GAAP,OAAO,CAAmB;QAC1D,cAAS,GAAT,SAAS,CAAkB;QAP9B,cAAS,GAAc,EAAE,CAAC;QAS/B,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;QAC1B,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,CAAC,CAAC;QAChC,IAAI,CAAC,SAAS,CAAC,UAAU,GAAG,CAAC,CAAC;QAC9B,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,CAAC,CAAC;IAC/B,CAAC;IAED,mCAAQ,GAAR;QACE,IAAI,CAAC,qBAAqB,EAAE,CAAC;QAC7B,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAED,qCAAU,GAAV;QACE,IAAI,CAAC,YAAY,GAAG,IAAI,sEAAS,CAAC;QAClC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;IACvB,CAAC;IAEM,oDAAyB,GAAhC,UAAiC,QAA0B,EAAE,KAAK,EAAE,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM;QAC9F,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,EAAE,GAAG,EAAE,CAAC;QAChC,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO,GAAG,OAAO,CAAC;QAC1C,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO,GAAG,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC;QACtE,IAAI,CAAC,OAAO,CAAC,UAAU,CAAC,MAAM,GAAG,MAAM,CAAC;QACxC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACnD,CAAC;IAEM,gDAAqB,GAA5B,UAA6B,QAA0B,EAAE,KAAK,EAAE,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM;QAC1F,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QAC1B,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACpC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACpC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QAClC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACnD,CAAC;IAEM,2CAAgB,GAAvB,UAAwB,QAA0B,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM;QAC3F,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,YAAY,CAAC,EAAE,GAAG,EAAE,CAAC;QAC1B,IAAI,CAAC,YAAY,CAAC,IAAI,GAAG,IAAI,CAAC;QAC9B,IAAI,CAAC,YAAY,CAAC,OAAO,GAAG,OAAO,CAAC;QACpC,IAAI,CAAC,YAAY,CAAC,OAAO,GAAG,OAAO,CAAC;QACpC,IAAI,CAAC,YAAY,CAAC,MAAM,GAAG,MAAM,CAAC;QAClC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACnD,CAAC;IAGD,8CAAmB,GAAnB,UAAoB,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI;QAAtD,iBA8BC;QA7BC,EAAE,CAAC,CAAC,IAAI,KAAK,MAAM,CAAC,CAAC,CAAC;YAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;QAAC,CAAC;QAC9C,IAAI,CAAC,SAAS,CAAC,GAAG,GAAG,qBAAqB,CAAC;QAC3C,IAAM,KAAK,GAAG,IAAI,QAAQ,EAAE,CAAC;QAC7B,KAAK,CAAC,MAAM,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QACjC,KAAK,CAAC,MAAM,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QACjC,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QAE/B,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAAC,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;QAAC,CAAC;QACnC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,KAAK,CAAC;aAC9C,SAAS,CACR,iBAAO;YACL,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,IAAM,IAAI,GAAG,EAAE,CAAC,CAAC;gBACjB,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,qCAAqC,CAAC,CAAC,CAAC;gBAC/D,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,mCAAmC,CAAC,CAAC;YAC5D,IAAI,CAAC,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;YAC9D,KAAI,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO,GAAG,EAAE,CAAC;YACrC,KAAI,CAAC,OAAO,CAAC,UAAU,CAAC,OAAO,GAAG,EAAE,CAAC;YACrC,EAAE,CAAC,CAAC,KAAI,CAAC,SAAS,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gBAChC,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC;YAC5D,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAC1C,CAAC;YACD,KAAI,CAAC,SAAS,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;YAC1B,gCAAgC;QAClC,CAAC,EAAE,eAAK;YACN,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IACT,CAAC;IAED,0CAAe,GAAf,UAAgB,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI;QAAlD,iBA+BC;QA9BC,EAAE,CAAC,CAAC,IAAI,KAAK,MAAM,CAAC,CAAC,CAAC;YAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;QAAC,CAAC;QAC9C,IAAI,CAAC,SAAS,CAAC,GAAG,GAAG,iBAAiB,CAAC;QAEvC,IAAM,KAAK,GAAG,IAAI,QAAQ,EAAE,CAAC;QAC7B,KAAK,CAAC,MAAM,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QACjC,KAAK,CAAC,MAAM,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QACjC,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QAE/B,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAAC,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;QAAC,CAAC;QACnC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,KAAK,CAAC;aAC9C,SAAS,CACR,iBAAO;YACL,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,IAAM,IAAI,GAAG,EAAE,CAAC,CAAC;gBACjB,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,qCAAqC,CAAC,CAAC,CAAC;gBAC/D,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,mCAAmC,CAAC,CAAC;YAC5D,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;YAC/B,KAAI,CAAC,OAAO,CAAC,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;YAC/B,IAAI,CAAC,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;YAC9D,EAAE,CAAC,CAAC,KAAI,CAAC,SAAS,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gBAChC,KAAI,CAAC,SAAS,CAAC,YAAY,CAAC,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC;YACnE,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,SAAS,CAAC,YAAY,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YACjD,CAAC;YACD,KAAI,CAAC,SAAS,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;YAC1B,2BAA2B;QAC7B,CAAC,EAAE,eAAK;YACN,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IACT,CAAC;IAGD,qCAAU,GAAV,UAAW,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI;QAAnD,iBAkCC;QAjCC,EAAE,CAAC,CAAC,IAAI,KAAK,MAAM,CAAC,CAAC,CAAC;YAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;QAAC,CAAC;QAC9C,IAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC;QAC/D,IAAI,CAAC,SAAS,CAAC,GAAG,GAAG,YAAY,CAAC;QAElC,IAAM,KAAK,GAAG,IAAI,QAAQ,EAAE,CAAC;QAE7B,KAAK,CAAC,MAAM,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QACjC,KAAK,CAAC,MAAM,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QACjC,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QAE/B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YAAC,KAAK,CAAC,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QAAC,CAAC;QAEjD,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAAC,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;QAAC,CAAC;QACnC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,KAAK,CAAC;aAC9C,SAAS,CACR,iBAAO;YACL,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,IAAM,IAAI,GAAG,EAAE,CAAC,CAAC;gBACjB,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,qCAAqC,CAAC,CAAC,CAAC;gBAC/D,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,mCAAmC,CAAC,CAAC;YAC5D,IAAI,CAAC,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;YAC9D,EAAE,CAAC,CAAC,KAAI,CAAC,SAAS,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gBAChC,KAAI,CAAC,SAAS,CAAC,SAAS,CAAC,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC;YAChE,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAC9C,CAAC;YACD,KAAI,CAAC,SAAS,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;YAC1B,KAAI,CAAC,YAAY,GAAG,IAAI,sEAAS,CAAC;YAClC,uBAAuB;QACzB,CAAC,EAAE,eAAK;YACN,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC,CAAC,CAAC;IACT,CAAC;IAGD,gDAAqB,GAArB;QAAA,iBAcC;QAbC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,CAAC,SAAS,CAAC,GAAG,GAAG,uBAAuB,CAAC;QAC7C,IAAM,KAAK,GAAG,IAAI,QAAQ,EAAE,CAAC;QAC7B,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,EAAC,YAAY,EAAE,CAAC,EAAC,CAAC;aAC1D,SAAS,CACR,iBAAO;YACL,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,KAAI,CAAC,SAAS,CAAC,KAAK,GAAG,OAAO,CAAC,IAAI,CAAC;YACpC,KAAI,CAAC,SAAS,CAAC,KAAK,GAAG,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC;QAC7C,CAAC,EAAE,eAAK;YACN,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC,CACF,CAAC;IACN,CAAC;IAGD,2CAAgB,GAAhB;QAAA,iBAcC;QAbC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,CAAC,SAAS,CAAC,GAAG,GAAG,kBAAkB,CAAC;QACxC,IAAM,KAAK,GAAG,IAAI,QAAQ,EAAE,CAAC;QAC7B,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,EAAC,YAAY,EAAE,CAAC,EAAC,CAAC;aAC1D,SAAS,CACR,iBAAO;YACL,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,KAAI,CAAC,SAAS,CAAC,YAAY,GAAG,OAAO,CAAC,IAAI,CAAC;YAC3C,KAAI,CAAC,SAAS,CAAC,iBAAiB,GAAG,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC;QACzD,CAAC,EAAE,eAAK;YACN,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC,CACF,CAAC;IACN,CAAC;IAED,uCAAY,GAAZ;QAAA,iBAcC;QAbC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,CAAC,SAAS,CAAC,GAAG,GAAG,cAAc,CAAC;QACpC,IAAM,KAAK,GAAG,IAAI,QAAQ,EAAE,CAAC;QAC7B,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,EAAC,YAAY,EAAE,CAAC,EAAC,CAAC;aAC1D,SAAS,CACR,iBAAO;YACL,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,KAAI,CAAC,SAAS,CAAC,SAAS,GAAG,OAAO,CAAC,IAAI,CAAC;YACxC,KAAI,CAAC,SAAS,CAAC,cAAc,GAAG,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC;QACtD,CAAC,EAAE,eAAK;YACN,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC,CACF,CAAC;IACN,CAAC;IAED,mDAAwB,GAAxB,UAAyB,KAAK,EAAE,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI;QAAlE,iBAgBC;QAfC,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC;QAC7B,IAAM,IAAI,GAAG,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,6CAA6C,CAAC,CAAC,CAAC;YAC/E,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,2CAA2C,CAAC,CAAC;QACxF,IAAI,CAAC;YACH,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,0BAA0B,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI;YACvF,IAAI,EAAE,SAAS;YACf,gBAAgB,EAAE,IAAI;YACtB,kBAAkB,EAAE,IAAI,CAAC,QAAQ,CAAC,kBAAkB;YACpD,iBAAiB,EAAE,IAAI,CAAC,QAAQ,CAAC,iBAAiB;YAClD,iBAAiB,EAAE,KAAK;SACzB,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;YACb,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;gBACjB,KAAI,CAAC,mBAAmB,CAAC,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;YAC/D,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,+CAAoB,GAApB,UAAqB,KAAK,EAAE,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI;QAA9D,iBAgBC;QAfC,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC;QAC7B,IAAM,IAAI,GAAG,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,wCAAwC,CAAC,CAAC,CAAC;YAC1E,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,sCAAsC,CAAC,CAAC;QACnF,IAAI,CAAC;YACH,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,0BAA0B,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI;YACvF,IAAI,EAAE,SAAS;YACf,gBAAgB,EAAE,IAAI;YACtB,kBAAkB,EAAE,IAAI,CAAC,QAAQ,CAAC,kBAAkB;YACpD,iBAAiB,EAAE,IAAI,CAAC,QAAQ,CAAC,iBAAiB;YAClD,iBAAiB,EAAE,KAAK;SACzB,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;YACb,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;gBACjB,KAAI,CAAC,eAAe,CAAC,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;YAC3D,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,0CAAe,GAAf,UAAgB,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI;QAA/D,iBAgBC;QAfC,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC;QAC7B,IAAM,IAAI,GAAG,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,oCAAoC,CAAC,CAAC,CAAC;YACtE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,kCAAkC,CAAC,CAAC;QAC/E,IAAI,CAAC;YACH,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,0BAA0B,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI;YACvF,IAAI,EAAE,SAAS;YACf,gBAAgB,EAAE,IAAI;YACtB,kBAAkB,EAAE,IAAI,CAAC,QAAQ,CAAC,kBAAkB;YACpD,iBAAiB,EAAE,IAAI,CAAC,QAAQ,CAAC,iBAAiB;YAClD,iBAAiB,EAAE,KAAK;SACzB,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;YACb,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;gBACjB,KAAI,CAAC,UAAU,CAAC,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;YAC5D,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,8DAAmC,GAAnC,UAAoC,QAAgB,EAAE,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI;QAAxF,iBAmBC;QAlBC,IAAM,IAAI,GAAG,IAAI,CAAC;QAClB,QAAQ,CAAC,KAAK,EAAE,CAAC;QACjB,EAAE,CAAC,CAAC,OAAO,KAAK,EAAE,CAAC,CAAC,CAAC;YACnB,IAAI,CAAC;gBACH,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,wCAAwC,CAAC;gBACtE,IAAI,EAAE,SAAS;gBACf,gBAAgB,EAAE,IAAI;gBACtB,kBAAkB,EAAE,IAAI,CAAC,QAAQ,CAAC,kBAAkB;gBACpD,iBAAiB,EAAE,IAAI,CAAC,QAAQ,CAAC,iBAAiB;gBAClD,iBAAiB,EAAE,KAAK;aACzB,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;gBACb,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,mBAAmB,CAAC,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;gBAC/D,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,mBAAmB,CAAC,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;QAC/D,CAAC;IACH,CAAC;IAGD,wDAA6B,GAA7B,UAA8B,QAAgB,EAAE,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI;QAAlF,iBAmBC;QAlBC,IAAM,IAAI,GAAG,IAAI,CAAC;QAClB,QAAQ,CAAC,KAAK,EAAE,CAAC;QACjB,EAAE,CAAC,CAAC,OAAO,KAAK,EAAE,CAAC,CAAC,CAAC;YACnB,IAAI,CAAC;gBACH,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,kCAAkC,CAAC;gBAChE,IAAI,EAAE,SAAS;gBACf,gBAAgB,EAAE,IAAI;gBACtB,kBAAkB,EAAE,IAAI,CAAC,QAAQ,CAAC,kBAAkB;gBACpD,iBAAiB,EAAE,IAAI,CAAC,QAAQ,CAAC,iBAAiB;gBAClD,iBAAiB,EAAE,KAAK;aACzB,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;gBACb,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,eAAe,CAAC,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;gBAC3D,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,eAAe,CAAC,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;QAC3D,CAAC;IACH,CAAC;IAGD,2DAAgC,GAAhC,UAAiC,QAAgB,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI;QAA3F,iBAmBC;QAlBC,IAAM,IAAI,GAAG,IAAI,CAAC;QAClB,QAAQ,CAAC,KAAK,EAAE,CAAC;QACjB,EAAE,CAAC,CAAC,OAAO,KAAK,EAAE,CAAC,CAAC,CAAC;YACnB,IAAI,CAAC;gBACH,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,8BAA8B,CAAC;gBAC5D,IAAI,EAAE,SAAS;gBACf,gBAAgB,EAAE,IAAI;gBACtB,kBAAkB,EAAE,IAAI,CAAC,QAAQ,CAAC,kBAAkB;gBACpD,iBAAiB,EAAE,IAAI,CAAC,QAAQ,CAAC,iBAAiB;gBAClD,iBAAiB,EAAE,KAAK;aACzB,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;gBACb,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,UAAU,CAAC,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;gBAC5D,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,UAAU,CAAC,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;QAC5D,CAAC;IACH,CAAC;IAED,wCAAa,GAAb,UAAc,KAAK;QACjB,IAAM,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;QAChC,IAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QACjE,IAAM,YAAY,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC3C,IAAI,CAAC,IAAI,GAAG,YAAY,CAAC;QAEzB,MAAM,CAAC,MAAM,GAAG,UAAU,CAAC;YACzB,IAAM,GAAG,GAAG,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YAC/B,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC;QAClB,CAAC,CAAC;QAEF,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9C,CAAC;IApVU,gBAAgB;QAP5B,+DAAS,CAAC;YACT,QAAQ,EAAE,aAAa;;;YAGvB,SAAS,EAAE,CAAC,iEAAQ,EAAE,oEAAO,EAAE,sEAAS,CAAC;SAC1C,CAAC;yCAQ6B,wDAAU,EAAoB,iEAAQ,EAAkB,oEAAO;YACpE,kEAAc,EAAgB,2EAAY;YAC3C,sEAAS,EAAmB,6DAAiB;YAC/C,oEAAgB;OAT1B,gBAAgB,CAqV5B;IAAD,uBAAC;CAAA;AArV4B;;;;;;;;;;;;ACnB7B,+BAA+B,2BAA2B,6CAA6C,mW;;;;;;;;;;;ACAvG,mGAAmG,8BAA8B,gFAAgF,6BAA6B,6CAA6C,8BAA8B,uDAAuD,8BAA8B,6GAA6G,8BAA8B,yNAAyN,8CAA8C,+oDAA+oD,+BAA+B,isBAAisB,iBAAiB,KAAK,+BAA+B,+CAA+C,iBAAiB,KAAK,+BAA+B,+CAA+C,iBAAiB,KAAK,iCAAiC,+CAA+C,iBAAiB,KAAK,kCAAkC,+CAA+C,iBAAiB,KAAK,sCAAsC,mDAAmD,sCAAsC,uFAAuF,mFAAmF,cAAc,6FAA6F,cAAc,6FAA6F,cAAc,6FAA6F,eAAe,6FAA6F,oBAAoB,yFAAyF,uCAAuC,guBAAguB,0FAA0F,gBAAgB,4BAA4B,+SAA+S,mDAAmD,oSAAoS,qCAAqC,igBAAigB,kDAAkD,0UAA0U,0CAA0C,+OAA+O,kDAAkD,opBAAopB,iBAAiB,KAAK,+BAA+B,6CAA6C,iBAAiB,KAAK,+BAA+B,iDAAiD,sCAAsC,2FAA2F,+EAA+E,cAAc,uFAAuF,cAAc,mFAAmF,uCAAuC,+lBAA+lB,0FAA0F,gBAAgB,4BAA4B,iSAAiS,iDAAiD,mRAAmR,kCAAkC,qhBAAqhB,2CAA2C,8HAA8H,kCAAkC,kNAAkN,iCAAiC,sdAAsd,0CAA0C,oQAAoQ,6CAA6C,+UAA+U,0CAA0C,iPAAiP,6CAA6C,mpCAAmpC,8BAA8B,+CAA+C,iBAAiB,KAAK,+BAA+B,+CAA+C,iBAAiB,KAAK,+BAA+B,mDAAmD,sCAAsC,uFAAuF,kLAAkL,WAAW,gGAAgG,cAAc,6FAA6F,cAAc,2FAA2F,uCAAuC,8nBAA8nB,0FAA0F,gBAAgB,4BAA4B,wkBAAwkB,kHAAkH,6JAA6J,0iBAA0iB,oDAAoD,6SAA6S,0CAA0C,wKAAwK,oDAAoD,0MAA0M,4CAA4C,+NAA+N,6CAA6C,kOAAkO,iDAAiD,qUAAqU,8BAA8B,wHAAwH,6BAA6B,oQAAoQ,yCAAyC,6JAA6J,ybAAyb,kDAAkD,oSAAoS,0CAA0C,wKAAwK,kDAAkD,sRAAsR,8BAA8B,wHAAwH,6BAA6B,2PAA2P,oCAAoC,iKAAiK,mbAAmb,yBAAyB,4VAA4V,6CAA6C,+SAA+S,0CAA0C,kLAAkL,6CAA6C,mSAAmS,8BAA8B,0HAA0H,6BAA6B,uE;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAv1sB;AACb;AACrB;AAEwB;AACb;AACK;AAET;AACO;AAUvD;IAME,2BAAoB,OAAmB,EAAU,QAAkB,EAAS,QAAkB,EACpF,YAA4B,EAAS,KAAmB,EAAU,MAAc,EAChF,OAA0B,EAC1B,SAA2B;QAHjB,YAAO,GAAP,OAAO,CAAY;QAAU,aAAQ,GAAR,QAAQ,CAAU;QAAS,aAAQ,GAAR,QAAQ,CAAU;QACpF,iBAAY,GAAZ,YAAY,CAAgB;QAAS,UAAK,GAAL,KAAK,CAAc;QAAU,WAAM,GAAN,MAAM,CAAQ;QAChF,YAAO,GAAP,OAAO,CAAmB;QAC1B,cAAS,GAAT,SAAS,CAAkB;QAP9B,cAAS,GAAc,EAAE,CAAC;QAS/B,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;QAC1B,IAAI,CAAC,SAAS,CAAC,YAAY,GAAG,CAAC,CAAC;QAChC,IAAI,CAAC,SAAS,CAAC,UAAU,GAAG,CAAC,CAAC;QAC9B,IAAI,CAAC,SAAS,CAAC,SAAS,GAAG,CAAC,CAAC;IAC/B,CAAC;IAED,oCAAQ,GAAR;QACE,IAAI,CAAC,iBAAiB,EAAE,CAAC;QACzB,IAAI,CAAC,gBAAgB,EAAE,CAAC;QACxB,IAAI,CAAC,YAAY,EAAE,CAAC;IACtB,CAAC;IAEM,mDAAuB,GAA9B,UAA+B,QAA0B,EAAE,KAAK,EAAE,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,aAAa,EAAE,MAAM;QAC9H,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE,GAAG,EAAE,CAAC;QACpC,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,OAAO,GAAG,OAAO,CAAC;QAC9C,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,OAAO,GAAG,OAAO,IAAI,IAAI,CAAC,CAAC,CAAC,OAAO,CAAC,CAAC,CAAC,OAAO,CAAC;QAC1E,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,OAAO,GAAG,OAAO,CAAC;QAC9C,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,QAAQ,GAAG,QAAQ,CAAC;QAChD,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,aAAa,GAAG,aAAa,CAAC;QAC1D,IAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,MAAM,GAAG,MAAM,CAAC;QAC5C,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACnD,CAAC;IAEM,iDAAqB,GAA5B,UAA6B,QAA0B,EAAE,KAAK,EAAE,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM;QAC1F,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;QAC3B,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACrC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,GAAG,OAAO,CAAC;QACrC,IAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,MAAM,GAAG,MAAM,CAAC;QACnC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACnD,CAAC;IAEM,4CAAgB,GAAvB,UAAwB,QAA0B,EAAE,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM;QAC3F,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC;QAC7B,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,GAAG,EAAE,CAAC;QAChC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,GAAG,IAAI,CAAC;QACpC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO,GAAG,OAAO,CAAC;QAC1C,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO,GAAG,OAAO,CAAC;QAC1C,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,MAAM,GAAG,MAAM,CAAC;QACxC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,YAAY,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;IACnD,CAAC;IAGD,oDAAwB,GAAxB,UAAyB,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,aAAa,EAAE,MAAM,EAAE,IAAI;QAA7F,iBAmCC;QAlCC,EAAE,CAAC,CAAC,IAAI,KAAK,MAAM,CAAC,CAAC,CAAC;YAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;QAAC,CAAC;QAC9C,IAAI,CAAC,SAAS,CAAC,GAAG,GAAG,kBAAkB,CAAC;QACxC,IAAM,KAAK,GAAG,IAAI,QAAQ,EAAE,CAAC;QAC7B,KAAK,CAAC,MAAM,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QACjC,KAAK,CAAC,MAAM,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QACjC,KAAK,CAAC,MAAM,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QACjC,KAAK,CAAC,MAAM,CAAC,UAAU,EAAE,QAAQ,CAAC,CAAC;QACnC,KAAK,CAAC,MAAM,CAAC,eAAe,EAAE,aAAa,CAAC,CAAC;QAC7C,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QAE/B,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAAC,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;QAAC,CAAC;QACnC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,KAAK,CAAC;aAC9C,SAAS,CACR,iBAAO;YACL,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,IAAM,IAAI,GAAG,EAAE,CAAC,CAAC;gBACjB,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,qCAAqC,CAAC,CAAC,CAAC;gBAC/D,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,mCAAmC,CAAC,CAAC;YAC5D,4BAA4B;YAC5B,KAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,EAAE,GAAG,EAAE,CAAC;YACpC,KAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,OAAO,GAAG,EAAE,CAAC;YACzC,KAAI,CAAC,QAAQ,CAAC,aAAa,CAAC,OAAO,GAAG,EAAE,CAAC;YACzC,IAAI,CAAC,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;YAC9D,EAAE,CAAC,CAAC,KAAI,CAAC,SAAS,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gBAChC,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC;YAC5D,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAC1C,CAAC;YACD,KAAI,CAAC,SAAS,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;QAC5B,CAAC,EAAE,eAAK;YACN,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC,CACF,CAAC;IACN,CAAC;IAED,2CAAe,GAAf,UAAgB,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI;QAAlD,iBA+BC;QA9BC,EAAE,CAAC,CAAC,IAAI,KAAK,MAAM,CAAC,CAAC,CAAC;YAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;QAAC,CAAC;QAC9C,IAAI,CAAC,SAAS,CAAC,GAAG,GAAG,iBAAiB,CAAC;QACvC,IAAM,KAAK,GAAG,IAAI,QAAQ,EAAE,CAAC;QAC7B,KAAK,CAAC,MAAM,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QACjC,KAAK,CAAC,MAAM,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QACjC,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QAE/B,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAAC,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;QAAC,CAAC;QACnC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,KAAK,CAAC;aAC9C,SAAS,CACR,iBAAO;YACL,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,IAAM,IAAI,GAAG,EAAE,CAAC,CAAC;gBACjB,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,qCAAqC,CAAC,CAAC,CAAC;gBAC/D,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,mCAAmC,CAAC,CAAC;YAC5D,IAAI,CAAC,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;YAC9D,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,EAAE,GAAG,EAAE,CAAC;YAC3B,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;YAChC,KAAI,CAAC,QAAQ,CAAC,IAAI,CAAC,OAAO,GAAG,EAAE,CAAC;YAChC,EAAE,CAAC,CAAC,KAAI,CAAC,SAAS,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gBAChC,KAAI,CAAC,SAAS,CAAC,aAAa,CAAC,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC;YACpE,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,SAAS,CAAC,aAAa,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAClD,CAAC;YACD,KAAI,CAAC,SAAS,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;QAC5B,CAAC,EAAE,eAAK;YACN,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC,CACF,CAAC;IACN,CAAC;IAGD,sCAAU,GAAV,UAAW,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI;QAAnD,iBAmCC;QAlCC,EAAE,CAAC,CAAC,IAAI,KAAK,MAAM,CAAC,CAAC,CAAC;YAAC,IAAI,CAAC,QAAQ,CAAC,IAAI,EAAE,CAAC;QAAC,CAAC;QAC9C,IAAM,OAAO,GAAG,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,CAAC;QACrE,IAAI,CAAC,SAAS,CAAC,GAAG,GAAG,oBAAoB,CAAC;QAC1C,IAAM,KAAK,GAAG,IAAI,QAAQ,EAAE,CAAC;QAC7B,KAAK,CAAC,MAAM,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QACjC,KAAK,CAAC,MAAM,CAAC,SAAS,EAAE,OAAO,CAAC,CAAC;QACjC,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,MAAM,CAAC,CAAC;QAE/B,EAAE,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC,CAAC;YAAC,KAAK,CAAC,MAAM,CAAC,MAAM,EAAE,OAAO,CAAC,CAAC;QAAC,CAAC;QAEjD,EAAE,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC;YAAC,KAAK,CAAC,MAAM,CAAC,IAAI,EAAE,EAAE,CAAC,CAAC;QAAC,CAAC;QACnC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,KAAK,CAAC;aAC9C,SAAS,CACR,iBAAO;YACL,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,IAAM,IAAI,GAAG,EAAE,CAAC,CAAC;gBACjB,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,qCAAqC,CAAC,CAAC,CAAC;gBAC/D,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,mCAAmC,CAAC,CAAC;YAC5D,IAAI,CAAC,KAAI,CAAC,SAAS,CAAC,OAAO,CAAC,cAAc,CAAC,EAAE,IAAI,EAAE,SAAS,CAAC,CAAC;YAC9D,KAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,EAAE,GAAG,EAAE,CAAC;YAChC,KAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO,GAAG,EAAE,CAAC;YACrC,KAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,OAAO,GAAG,EAAE,CAAC;YACrC,KAAI,CAAC,QAAQ,CAAC,SAAS,CAAC,IAAI,GAAG,EAAE,CAAC;YAClC,EAAE,CAAC,CAAC,KAAI,CAAC,SAAS,CAAC,KAAK,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;gBAChC,KAAI,CAAC,SAAS,CAAC,SAAS,CAAC,KAAI,CAAC,SAAS,CAAC,KAAK,CAAC,GAAG,OAAO,CAAC,IAAI,CAAC;YAChE,CAAC;YAAC,IAAI,CAAC,CAAC;gBACN,KAAI,CAAC,SAAS,CAAC,SAAS,CAAC,IAAI,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC;YAC9C,CAAC;YACD,KAAI,CAAC,SAAS,CAAC,KAAK,GAAG,CAAC,CAAC,CAAC;QAC5B,CAAC,EAAE,eAAK;YACN,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC,CACF,CAAC;IACN,CAAC;IAGD,6CAAiB,GAAjB;QAAA,iBAeC;QAdC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,CAAC,SAAS,CAAC,GAAG,GAAG,mBAAmB,CAAC;QACzC,IAAM,KAAK,GAAG,IAAI,QAAQ,EAAE,CAAC;QAC7B,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,EAAC,YAAY,EAAE,CAAC,EAAC,CAAC;aAC1D,SAAS,CACR,iBAAO;YACL,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,KAAI,CAAC,SAAS,CAAC,KAAK,GAAG,OAAO,CAAC,IAAI,CAAC;YACpC,KAAI,CAAC,SAAS,CAAC,KAAK,GAAG,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC;QAC7C,CAAC,EACD,eAAK;YACH,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC,CACF,CAAC;IACN,CAAC;IAGD,4CAAgB,GAAhB;QAAA,iBAeC;QAdC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,CAAC,SAAS,CAAC,GAAG,GAAG,kBAAkB,CAAC;QACxC,IAAM,KAAK,GAAG,IAAI,QAAQ,EAAE,CAAC;QAC7B,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,EAAC,YAAY,EAAE,CAAC,EAAC,CAAC;aAC1D,SAAS,CACR,iBAAO;YACL,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,KAAI,CAAC,SAAS,CAAC,aAAa,GAAG,OAAO,CAAC,IAAI,CAAC;YAC5C,KAAI,CAAC,SAAS,CAAC,kBAAkB,GAAG,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC;QAC1D,CAAC,EACD,eAAK;YACH,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC,CACF,CAAC;IACN,CAAC;IAED,wCAAY,GAAZ;QAAA,iBAcC;QAbC,IAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACpB,IAAI,CAAC,SAAS,CAAC,GAAG,GAAG,sBAAsB,CAAC;QAC5C,IAAM,KAAK,GAAG,IAAI,QAAQ,EAAE,CAAC;QAC7B,IAAI,CAAC,KAAK,CAAC,WAAW,CAAC,IAAI,CAAC,SAAS,CAAC,GAAG,EAAE,EAAC,YAAY,EAAE,CAAC,EAAC,CAAC;aAC1D,SAAS,CACR,iBAAO;YACL,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;YACpB,KAAI,CAAC,SAAS,CAAC,SAAS,GAAG,OAAO,CAAC,IAAI,CAAC;YACxC,KAAI,CAAC,SAAS,CAAC,cAAc,GAAG,OAAO,CAAC,IAAI,CAAC,MAAM,CAAC;QACtD,CAAC,EAAE,eAAK;YACN,KAAI,CAAC,OAAO,CAAC,IAAI,EAAE,CAAC;QACtB,CAAC,CACF,CAAC;IACN,CAAC;IAED,yDAA6B,GAA7B,UAA8B,KAAK,EAAE,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,aAAa,EAAE,MAAM,EAAE,IAAI;QAAzG,iBAiBC;QAhBC,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC;QAC7B,IAAM,IAAI,GAAG,IAAI,CAAC;QAClB,IAAM,IAAI,GAAG,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,2CAA2C,CAAC,CAAC,CAAC;YAC7E,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,yCAAyC,CAAC,CAAC;QACtF,IAAI,CAAC;YACH,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,0BAA0B,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI;YACvF,IAAI,EAAE,SAAS;YACf,gBAAgB,EAAE,IAAI;YACtB,kBAAkB,EAAE,IAAI,CAAC,QAAQ,CAAC,kBAAkB;YACpD,iBAAiB,EAAE,IAAI,CAAC,QAAQ,CAAC,iBAAiB;YAClD,iBAAiB,EAAE,KAAK;SACzB,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;YACb,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;gBACjB,KAAI,CAAC,wBAAwB,CAAC,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,aAAa,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;YACtG,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,gDAAoB,GAApB,UAAqB,KAAK,EAAE,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI;QAA9D,iBAiBC;QAhBC,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC;QAC7B,IAAM,IAAI,GAAG,IAAI,CAAC;QAClB,IAAM,IAAI,GAAG,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,yCAAyC,CAAC,CAAC,CAAC;YAC3E,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,uCAAuC,CAAC,CAAC;QACpF,IAAI,CAAC;YACH,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,0BAA0B,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI;YACvF,IAAI,EAAE,SAAS;YACf,gBAAgB,EAAE,IAAI;YACtB,kBAAkB,EAAE,IAAI,CAAC,QAAQ,CAAC,kBAAkB;YACpD,iBAAiB,EAAE,IAAI,CAAC,QAAQ,CAAC,iBAAiB;YAClD,iBAAiB,EAAE,KAAK;SACzB,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;YACb,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;gBACjB,KAAI,CAAC,eAAe,CAAC,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;YAC3D,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,2CAAe,GAAf,UAAgB,KAAK,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI;QAA/D,iBAiBC;QAhBC,IAAI,CAAC,SAAS,CAAC,KAAK,GAAG,KAAK,CAAC;QAC7B,IAAM,IAAI,GAAG,IAAI,CAAC;QAClB,IAAM,IAAI,GAAG,MAAM,KAAK,CAAC,CAAC,CAAC,CAAC,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,oCAAoC,CAAC,CAAC,CAAC;YACtE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,kCAAkC,CAAC,CAAC;QAC/E,IAAI,CAAC;YACH,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,0BAA0B,CAAC,GAAG,MAAM,GAAG,IAAI,CAAC,SAAS,CAAC,IAAI;YACvF,IAAI,EAAE,SAAS;YACf,gBAAgB,EAAE,IAAI;YACtB,kBAAkB,EAAE,IAAI,CAAC,QAAQ,CAAC,kBAAkB;YACpD,iBAAiB,EAAE,IAAI,CAAC,QAAQ,CAAC,iBAAiB;YAClD,iBAAiB,EAAE,KAAK;SACzB,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;YACb,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;gBACjB,KAAI,CAAC,UAAU,CAAC,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;YAC5D,CAAC;QACH,CAAC,CAAC,CAAC;IACL,CAAC;IAED,2DAA+B,GAA/B,UAAgC,QAAgB,EAAE,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,aAAa,EAAE,MAAM,EAAE,IAAI;QAAtH,iBAmBC;QAlBC,IAAM,IAAI,GAAG,IAAI,CAAC;QAClB,QAAQ,CAAC,KAAK,EAAE,CAAC;QACjB,EAAE,CAAC,CAAC,OAAO,KAAK,EAAE,CAAC,CAAC,CAAC;YACnB,IAAI,CAAC;gBACH,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,qCAAqC,CAAC;gBACnE,IAAI,EAAE,SAAS;gBACf,gBAAgB,EAAE,IAAI;gBACtB,kBAAkB,EAAE,IAAI,CAAC,QAAQ,CAAC,kBAAkB;gBACpD,iBAAiB,EAAE,IAAI,CAAC,QAAQ,CAAC,iBAAiB;gBAClD,iBAAiB,EAAE,KAAK;aACzB,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;gBACb,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,wBAAwB,CAAC,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,aAAa,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;gBACtG,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,wBAAwB,CAAC,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,OAAO,EAAE,QAAQ,EAAE,aAAa,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;QACtG,CAAC;IACH,CAAC;IAGD,yDAA6B,GAA7B,UAA8B,QAAgB,EAAE,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI;QAAlF,iBAmBC;QAlBC,IAAM,IAAI,GAAG,IAAI,CAAC;QAClB,QAAQ,CAAC,KAAK,EAAE,CAAC;QACjB,EAAE,CAAC,CAAC,OAAO,KAAK,EAAE,CAAC,CAAC,CAAC;YACnB,IAAI,CAAC;gBACH,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,mCAAmC,CAAC;gBACjE,IAAI,EAAE,SAAS;gBACf,gBAAgB,EAAE,IAAI;gBACtB,kBAAkB,EAAE,IAAI,CAAC,QAAQ,CAAC,kBAAkB;gBACpD,iBAAiB,EAAE,IAAI,CAAC,QAAQ,CAAC,iBAAiB;gBAClD,iBAAiB,EAAE,KAAK;aACzB,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;gBACb,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,eAAe,CAAC,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;gBAC3D,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,eAAe,CAAC,EAAE,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;QAC3D,CAAC;IACH,CAAC;IAGD,4DAAgC,GAAhC,UAAiC,QAAgB,EAAE,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI;QAA3F,iBAmBC;QAlBC,IAAM,IAAI,GAAG,IAAI,CAAC;QAClB,QAAQ,CAAC,KAAK,EAAE,CAAC;QACjB,EAAE,CAAC,CAAC,OAAO,KAAK,EAAE,CAAC,CAAC,CAAC;YACnB,IAAI,CAAC;gBACH,IAAI,EAAE,IAAI,CAAC,SAAS,CAAC,OAAO,CAAC,8BAA8B,CAAC;gBAC5D,IAAI,EAAE,SAAS;gBACf,gBAAgB,EAAE,IAAI;gBACtB,kBAAkB,EAAE,IAAI,CAAC,QAAQ,CAAC,kBAAkB;gBACpD,iBAAiB,EAAE,IAAI,CAAC,QAAQ,CAAC,iBAAiB;gBAClD,iBAAiB,EAAE,KAAK;aACzB,CAAC,CAAC,IAAI,CAAC,UAAC,MAAM;gBACb,EAAE,CAAC,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;oBACjB,KAAI,CAAC,UAAU,CAAC,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;gBAC5D,CAAC;YACH,CAAC,CAAC,CAAC;QACL,CAAC;QAAC,IAAI,CAAC,CAAC;YACN,IAAI,CAAC,UAAU,CAAC,EAAE,EAAE,IAAI,EAAE,OAAO,EAAE,OAAO,EAAE,MAAM,EAAE,IAAI,CAAC,CAAC;QAC5D,CAAC;IACH,CAAC;IAGD,yCAAa,GAAb,UAAc,KAAK;QACjB,IAAM,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;QAChC,IAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,aAAa,CAAC,QAAQ,CAAC,CAAC;QACjE,IAAM,YAAY,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC3C,IAAI,CAAC,IAAI,GAAG,YAAY,CAAC;QAEzB,MAAM,CAAC,MAAM,GAAG,UAAU,CAAC;YACzB,IAAM,GAAG,GAAG,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YAC/B,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC;QAClB,CAAC,CAAC;QAEF,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9C,CAAC;IAGD,0CAAc,GAAd,UAAe,KAAK;QAClB,IAAM,MAAM,GAAG,IAAI,UAAU,EAAE,CAAC;QAEhC,IAAM,KAAK,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,aAAa,CAAC,SAAS,CAAC,CAAC;QAElE,IAAM,YAAY,GAAG,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC;QAC3C,IAAI,CAAC,IAAI,GAAG,YAAY,CAAC;QAEzB,MAAM,CAAC,MAAM,GAAG,UAAU,CAAC;YACzB,IAAM,GAAG,GAAG,CAAC,CAAC,MAAM,CAAC,QAAQ,CAAC,CAAC;YAC/B,KAAK,CAAC,GAAG,GAAG,GAAG,CAAC;QAClB,CAAC,CAAC;QAEF,MAAM,CAAC,aAAa,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC;IAC9C,CAAC;IA/WU,iBAAiB;QAP7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;YAGxB,SAAS,EAAE,CAAC,iEAAQ,EAAE,sEAAQ,CAAC;SAChC,CAAC;yCAQ6B,wDAAU,EAAoB,iEAAQ,EAAmB,sEAAQ;YACtE,kEAAc,EAAgB,2EAAY,EAAkB,sDAAM;YACvE,6DAAiB;YACf,oEAAgB;OAT1B,iBAAiB,CAgX7B;IAAD,wBAAC;CAAA;AAhX6B;;;;;;;;;;;;ACnB9B,+DAA+D,2J;;;;;;;;;;;ACA/D,mB;;;;;;;;;;;;;;;;;;;;;;;;ACAkD;AAOlD;IAEE;IAAgB,CAAC;IAEjB,oCAAQ,GAAR;IACA,CAAC;IALU,iBAAiB;QAL7B,+DAAS,CAAC;YACT,QAAQ,EAAE,cAAc;;;SAGzB,CAAC;;OACW,iBAAiB,CAO7B;IAAD,wBAAC;CAAA;AAP6B;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACP9B,wBAAwB;AACiB;AACM;AACO;AACY;AACnB;AACG;AACR;AACQ;AACK;AAEvD,aAAa;AACqD;AACT;AACS;AACA;AACH;AACc;AACR;AACV;AACI;AACuB;AACG;AACV;AAClB;AAE7D,IAAM,MAAM,GAAW;IACrB,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,4EAAgB,EAAE;IACrD,EAAE,IAAI,EAAE,iBAAiB,EAAE,SAAS,EAAE,mGAAuB,EAAE;IAC/D;QACE,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAE,sGAAwB;QAC7D,WAAW,EAAE,CAAC,oEAAY,CAAC,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,CAAC,UAAU,EAAE,UAAU,EAAE,EAAE,CAAC,EAAE;KAC3E;IACD,EAAE,IAAI,EAAE,cAAc,EAAE,SAAS,EAAE,0FAAoB,EAAE;IACzD;QACE,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAE,8EAAiB;QACtD,WAAW,EAAE,CAAC,oEAAY,CAAC,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,CAAC,UAAU,EAAE,UAAU,EAAE,EAAE,CAAC,EAAE;KAC3E;IACD;QACE,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAE,+EAAiB;QACtD,WAAW,EAAE,CAAC,oEAAY,CAAC,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,CAAC,UAAU,EAAE,UAAU,EAAE,EAAE,CAAC,EAAE;KAC3E;IACD;QACE,IAAI,EAAE,kBAAkB,EAAE,SAAS,EAAE,+EAAiB;QACtD,WAAW,EAAE,CAAC,oEAAY,CAAC,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,CAAC,UAAU,EAAE,UAAU,EAAE,EAAE,CAAC,EAAE;KAC3E;IACD;QACE,IAAI,EAAE,iBAAiB,EAAE,SAAS,EAAE,4EAAgB;QACpD,WAAW,EAAE,CAAC,oEAAY,CAAC,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,CAAC,UAAU,EAAE,UAAU,EAAE,EAAE,CAAC,EAAE;KAC3E;IACD;QACE,IAAI,EAAE,mBAAmB,EAAE,SAAS,EAAE,kFAAkB;QACxD,WAAW,EAAE,CAAC,oEAAY,CAAC,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,CAAC,UAAU,EAAE,UAAU,EAAE,EAAE,CAAC,EAAE;KAC3E;CACF,CAAC;AAoCF;IAAA;IAA8B,CAAC;IAAlB,cAAc;QAjC1B,8DAAQ,CAAC;YAER,YAAY,EAAE;gBACZ,0FAAoB;gBACpB,8EAAiB;gBACjB,+EAAiB;gBACjB,+EAAiB;gBACjB,4EAAgB;gBAChB,sEAAiB;gBACjB,kFAAkB;gBAClB,4EAAgB;gBAChB,mGAAuB;gBACvB,sGAAwB;gBACxB,6FAAmB;aACpB;YACD,OAAO,EAAE;gBACP,4DAAY,CAAC,QAAQ,CAAC,MAAM,CAAC;gBAC7B,4DAAY;gBACZ,mEAAe;gBACf,0DAAW;gBACX,kEAAmB;gBACnB,+DAAW,CAAC,OAAO,EAAE;gBACrB,4DAAgB;gBAChB,uDAAa,CAAC,OAAO,CAAC;oBACpB,MAAM,EAAE,yCAAyC;oBACjD,SAAS,EAAE,CAAC,SAAS,EAAE,QAAQ,CAAC;iBACjC,CAAC;gBACF,+DAAiB;gBACjB,2EAAY;aACb;YACD,OAAO,EAAE,CAAC,4DAAY,CAAC;SACxB,CAAC;OAEW,cAAc,CAAI;IAAD,qBAAC;CAAA;AAAJ;;;;;;;;;;;;;AC1F3B;AAAA;AAAA;IAAA;IAQA,CAAC;IAAD,eAAC;AAAD,CAAC;;;;;;;;;;;;;;ACRD;AAAA;AAAA;AAAA;AAAA;AAAA;IAAA;QACW,iBAAY,GAAG;YAClB,UAAU,EAAE,EAAE;YACd,OAAO,EAAE,EAAE;YACX,OAAO,EAAE,EAAE;YACX,MAAM,EAAE,CAAC;SACZ,CAAC;QAEK,eAAU,GAAG;YAChB,UAAU,EAAE,EAAE;YACd,QAAQ,EAAE,EAAE;YACZ,OAAO,EAAE,EAAE;YACX,OAAO,EAAE,EAAE;YACX,MAAM,EAAE,CAAC;SACZ,CAAC;QAEK,cAAS,GAAG;YACf,UAAU,EAAE,EAAE;YACd,QAAQ,EAAE,EAAE;YACZ,OAAO,EAAE,EAAE;YACX,OAAO,EAAE,EAAE;YACX,OAAO,EAAE,EAAE;YACX,MAAM,EAAE,CAAC;SACZ,CAAC;QAEK,kBAAa,GAAG;YACnB,OAAO,EAAE,EAAE;YACX,WAAW,EAAE,EAAE;YACf,OAAO,EAAE,EAAE;YACX,OAAO,EAAE,EAAE;YACX,MAAM,EAAE,CAAC;YACT,gBAAgB,EAAE,EAAE;SACvB,CAAC;IACN,CAAC;IAAD,eAAC;AAAD,CAAC;;AAED;IAAA;IAMA,CAAC;IAAD,cAAC;AAAD,CAAC;;AAED;IAAA;IAQA,CAAC;IAAD,YAAC;AAAD,CAAC;;AAED;IAAA;IAQA,CAAC;IAAD,WAAC;AAAD,CAAC;;;;;;;;;;;;;;AC7DD;AAAA;AAAA;AAAA;IAAA;QACW,eAAU,GAAG;YAChB,EAAE,EAAE,EAAE;YACN,OAAO,EAAE,EAAE;YACX,OAAO,EAAE,EAAE;YACX,MAAM,EAAE,CAAC;SACZ,CAAC;QAEK,SAAI,GAAG;YACV,EAAE,EAAE,EAAE;YACN,OAAO,EAAE,EAAE;YACX,OAAO,EAAE,EAAE;YACX,MAAM,EAAE,CAAC;SACZ,CAAC;QAEK,cAAS,GAAG;YACf,EAAE,EAAE,EAAE;YACN,IAAI,EAAE,EAAE;YACR,OAAO,EAAE,EAAE;YACX,OAAO,EAAE,EAAE;YACX,MAAM,EAAE,CAAC;SACZ,CAAC;IACN,CAAC;IAAD,cAAC;AAAD,CAAC;;AAED;IAAA;IAMA,CAAC;IAAD,gBAAC;AAAD,CAAC;;;;;;;;;;;;;;AC9BD;AAAA;AAAA;IAAA;QACW,kBAAa,GAAG;YACnB,EAAE,EAAE,EAAE;YACN,OAAO,EAAE,EAAE;YACX,OAAO,EAAE,EAAE;YACX,OAAO,EAAE,CAAC;YACV,QAAQ,EAAE,CAAC;YACX,aAAa,EAAE,CAAC;YAChB,MAAM,EAAE,CAAC;SACZ,CAAC;QAEK,SAAI,GAAG;YACV,EAAE,EAAE,EAAE;YACN,OAAO,EAAE,EAAE;YACX,OAAO,EAAE,EAAE;YACX,MAAM,EAAE,CAAC;SACZ,CAAC;QAEK,cAAS,GAAG;YACf,EAAE,EAAE,EAAE;YACN,IAAI,EAAE,EAAE;YACR,OAAO,EAAE,EAAE;YACX,OAAO,EAAE,EAAE;YACX,MAAM,EAAE,CAAC;SACZ,CAAC;IACN,CAAC;IAAD,eAAC;AAAD,CAAC;;;;;;;;;;;;;;ACzBD;AAAA;AAAA;IAAA;IAIA,CAAC;IAAD,eAAC;AAAD,CAAC","file":"settings-settings-module.js","sourcesContent":["import { Directive, Input } from '@angular/core';\nimport {\n  Validator,\n  ValidationErrors,\n  FormGroup,\n  NG_VALIDATORS\n} from '@angular/forms';\nimport { MatchValue } from './match-value.validator';\n@Directive({\n  selector: '[appMatchValue]',\n  providers: [\n    { provide: NG_VALIDATORS, useExisting: MatchValueDirective, multi: true }\n  ]\n})\nexport class MatchValueDirective implements Validator {\n  @Input('appMatchValue') appMatchValue: string[] = [];\n  constructor() {}\n  validate(formGroup: FormGroup): ValidationErrors {\n    return MatchValue(this.appMatchValue[0], this.appMatchValue[1])(\n      formGroup\n    );\n  }\n}\n","import { FormGroup } from '@angular/forms';\n// custom validator to check that two fields match\nexport function MatchValue(\n    firstControlName: string,\n    secondControlName: string\n) {\n    return (formGroup: FormGroup) => {\n        const firstControl = formGroup.controls[firstControlName];\n        const secondControl = formGroup.controls[secondControlName];\n        // return null if controls haven't initialised yet\n        if (\n            !firstControl ||\n            !secondControl ||\n            !firstControl.value ||\n            !secondControl.value\n        ) {\n            return null;\n        }\n        if (secondControl.errors && !secondControl.errors.matchValueError) {\n            return null;\n        }\n        if (firstControl.value !== secondControl.value) {\n            secondControl.setErrors({ matchValueError: true });\n        } else {\n            secondControl.setErrors(null);\n        }\n    };\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9zZXR0aW5ncy9jaGFuZ2UtcGFzc3dvcmQvY2hhbmdlLXBhc3N3b3JkLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"\\n<!--content start-->\\n<div class=\\\"container-fluid\\\">\\n    <div class=\\\"breadcrumb-group\\\">\\n    <h5>{{'settings.label' | translate}}</h5>\\n    <nav class=\\\"breadcrumb\\\">\\n        <a class=\\\"breadcrumb-item\\\">{{'settings.home' | translate}}</a>\\n        <a class=\\\"breadcrumb-item\\\">{{'settings.label' | translate}}</a>\\n        <span class=\\\"breadcrumb-item active\\\">{{'changePass.label' | translate}}</span>\\n    </nav>\\n    </div>\\n\\n    <form class=\\\"form-horizontal\\\" novalidate #addForm=\\\"ngForm\\\" \\n        [appMatchValue]=\\\"['password', 'c_password']\\\" (ngSubmit)=\\\"changePassword(addForm)\\\">\\n        \\n        <div class=\\\"form-group-3 row\\\">\\n            <label class=\\\"col-sm-3 col-form-label\\\">{{'changePass.newPassword' | translate}}:</label>\\n\\n            <div class=\\\"col-sm-9\\\">\\n                <input autocomplete=\\\"off\\\" type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"{{'addForm.placeholder.newPassword' | translate}}\\\" minlength=\\\"6\\\" id=\\\"password\\\" required [(ngModel)]=\\\"model.password\\\" name=\\\"password\\\" #password=\\\"ngModel\\\">\\n\\n                <div *ngIf=\\\"password.errors && (password.dirty || password.touched)\\\" class=\\\"show-error\\\">\\n                    <div [hidden]=\\\"!password.errors.required\\\">\\n                        {{'changePass.passwordRequired' | translate}}\\n                    </div>\\n                    <div [hidden]=\\\"!password.errors.minlength\\\">\\n                        {{'changePass.passwordMinLength' | translate}} {{6-model.password.length}}.\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group-3 row\\\">\\n            <label class=\\\"col-sm-3 col-form-label\\\">{{'changePass.confirmPassword' | translate}}:</label>\\n            <div class=\\\"col-sm-9\\\">\\n                <input type=\\\"password\\\" class=\\\"form-control\\\" placeholder=\\\"{{'addForm.placeholder.confirmPassword' | translate}}\\\" minlength=\\\"6\\\" id=\\\"c_password\\\" required [(ngModel)]=\\\"model.c_password\\\" name=\\\"c_password\\\" #c_password=\\\"ngModel\\\">\\n\\n                <div *ngIf=\\\"c_password.errors && (c_password.dirty || c_password.touched)\\\" class=\\\"show-error\\\">\\n                    <div [hidden]=\\\"!c_password.errors.required\\\">\\n                        {{'changePass.confirmPasswordRequired' | translate}}\\n                    </div>\\n                    <div [hidden]=\\\"!c_password.errors.minlength\\\">\\n                        {{'changePass.confirmPasswordRequired' | translate}} {{6-model.c_password.length}}.\\n                    </div>\\n                    <div [hidden]=\\\"!c_password.errors.matchValueError\\\">\\n                        {{'changePass.samePassAndConfirmPass' | translate}}\\n                    </div>\\n                </div>\\n            </div>\\n        </div>\\n        <div class=\\\"form-group btn-cont text-right\\\">\\n            <button [disabled]=\\\"addForm.invalid\\\" class=\\\"btn btn-primary apply-btn\\\" type=\\\"submit\\\">{{'changePass.updatePass' | translate}}</button>\\n        </div>\\n    </form>\\n</div>\\n      \"","import { Component, OnInit } from '@angular/core';\nimport { Router } from '@angular/router';\nimport { AdminService } from 'src/app/services/admin.service';\nimport { IProperty } from 'src/app/common/property';\nimport { NgForm } from '@angular/forms';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { TranslateService } from '@ngx-translate/core';\ndeclare let swal: any;\n\n@Component({\n  selector: 'app-change-password',\n  templateUrl: './change-password.component.html',\n  styleUrls: ['./change-password.component.css']\n})\n\nexport class ChangePasswordComponent implements OnInit {\n\n  public parameter: IProperty = {};\n\n  model = {\n    password: '',\n    c_password: ''\n  };\n\n  constructor(private router: Router, private admin: AdminService, private spinner: NgxSpinnerService,\n    private translate: TranslateService) { }\n\n  ngOnInit() {}\n\n  changePassword(formData: NgForm) {\n    this.spinner.show();\n    this.admin.postDataApi('changePassword', this.model)\n      .subscribe(\n        success => {\n          this.spinner.hide();\n          swal(this.translate.instant('swal.success'), this.translate.instant('message.success.updatedSuccessfully'), 'success');\n          localStorage.removeItem('token');\n          this.router.navigate(['']);\n        },\n        error => {\n          this.spinner.hide();\n        });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9zZXR0aW5ncy9kZWZhdWx0LXNldHRpbmdzL2RlZmF1bHQtc2V0dGluZ3MuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"\\n<!--content start-->\\n<div class=\\\"container-fluid\\\">\\n    <div class=\\\"breadcrumb-group\\\">\\n    <h5>{{'settings.label' | translate}}</h5>\\n    <nav class=\\\"breadcrumb\\\">\\n      <a class=\\\"breadcrumb-item\\\">{{'settings.home' | translate}}</a>\\n        <a class=\\\"breadcrumb-item\\\">{{'settings.label' | translate}}</a>\\n        <span class=\\\"breadcrumb-item active\\\">{{'defaultSettings.label' | translate}}</span>\\n    </nav>\\n    </div>\\n\\n    <form class=\\\"form-horizontal\\\" novalidate #addForm=\\\"ngForm\\\" (ngSubmit)=\\\"updateGlobalSetting()\\\">\\n        \\n        <div class=\\\"form-group-3 row\\\">\\n            <label class=\\\"col-sm-6 col-form-label\\\">{{'defaultSettings.propertyWillBMarkedApproved' | translate}}:</label>\\n            <div class=\\\"col-sm-6\\\">\\n                <div class=\\\"clearfix\\\"></div>\\n                <label class=\\\"cust-radio\\\">\\n                  <input type=\\\"radio\\\" (change)=\\\"setValue('bulk_approve_property', 1)\\\" value=\\\"1\\\" [checked]=\\\"model.bulk_approve_property == 1 ? 'checked' : ''\\\" name=\\\"bulk_approve_property\\\">\\n                  <span class=\\\"checkmark\\\">{{'defaultSettings.yes' | translate}}</span>\\n                </label>\\n                <label class=\\\"cust-radio\\\">\\n                  <input type=\\\"radio\\\" (change)=\\\"setValue('bulk_approve_property', 0)\\\" value=\\\"0\\\" [checked]=\\\"model.bulk_approve_property == 0 ? 'checked' : ''\\\" name=\\\"bulk_approve_property\\\">\\n                  <span class=\\\"checkmark\\\">{{'defaultSettings.no' | translate}}</span>\\n                </label>\\n                <div class=\\\"clearfix\\\"></div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group-3 row\\\">\\n            <label class=\\\"col-sm-6 col-form-label\\\">{{'defaultSettings.projectWillBMarkedApproved' | translate}}:</label>\\n            <div class=\\\"col-sm-6\\\">\\n                <div class=\\\"clearfix\\\"></div>\\n                <label class=\\\"cust-radio\\\">\\n                  <input type=\\\"radio\\\" (change)=\\\"setValue('bulk_approve_project', 1)\\\" value=\\\"1\\\" [checked]=\\\"model.bulk_approve_project == 1 ? 'checked' : ''\\\" name=\\\"bulk_approve_project\\\">\\n                  <span class=\\\"checkmark\\\">{{'defaultSettings.yes' | translate}}</span>\\n                </label>\\n                <label class=\\\"cust-radio\\\">\\n                  <input type=\\\"radio\\\" (change)=\\\"setValue('bulk_approve_project', 0)\\\" value=\\\"0\\\" [checked]=\\\"model.bulk_approve_project == 0 ? 'checked' : ''\\\" name=\\\"bulk_approve_project\\\">\\n                  <span class=\\\"checkmark\\\">{{'defaultSettings.no' | translate}}</span>\\n                </label>\\n                <div class=\\\"clearfix\\\"></div>\\n            </div>\\n        </div>\\n\\n        <div class=\\\"form-group-3 row\\\">\\n            <label class=\\\"col-sm-6 col-form-label\\\">{{'defaultSettings.cashLimit' | translate}}:</label>\\n            <div class=\\\"col-sm-2\\\">\\n              <input type=\\\"number\\\" class=\\\"form-control\\\" appUptoThreeDecimal step=\\\"0.001\\\" name=\\\"cash_limit\\\" [(ngModel)]=\\\"model.cash_limit\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"form-group btn-cont text-right\\\">\\n            <button class=\\\"btn btn-primary apply-btn\\\" type=\\\"submit\\\">{{'defaultSettings.updateSettings' | translate}}</button>\\n        </div>\\n    </form>\\n</div>\\n      \"","import { Component, OnInit } from '@angular/core';\nimport { AdminService } from 'src/app/services/admin.service';\nimport { IProperty } from 'src/app/common/property';\nimport { Settings } from 'src/app/models/settings.model';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { TranslateService } from '@ngx-translate/core';\ndeclare let swal: any;\n\n@Component({\n  selector: 'app-default-settings',\n  templateUrl: './default-settings.component.html',\n  styleUrls: ['./default-settings.component.css'],\n  providers: [Settings]\n})\nexport class DefaultSettingsComponent implements OnInit {\n\n  public parameter: IProperty = {};\n\n  constructor(private admin: AdminService, public model: Settings, private spinner: NgxSpinnerService,\n    private translate: TranslateService) { }\n\n  ngOnInit() {\n    this.getGlobalSetting();\n  }\n\n  setValue(key, value) {\n    this.model[key] = value;\n  }\n\n  getGlobalSetting () {\n    this.admin.postDataApi('getGlobalSetting', {})\n      .subscribe(\n        success => {\n          this.model = success.data;\n        },\n        error => {\n        });\n  }\n\n  updateGlobalSetting() {\n    this.spinner.show();\n    this.admin.postDataApi('updateGlobalSetting', this.model)\n      .subscribe(\n        success => {\n          this.spinner.hide();\n          this.admin.globalSettings.next(success.data);\n          swal(this.translate.instant('swal.success'), this.translate.instant('message.success.updatedSuccessfully'), 'success');\n        },\n        error => {\n          this.spinner.hide();\n        });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9zZXR0aW5ncy9kb2N1bWVudHMvZG9jdW1lbnRzLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"\\n<div class=\\\"container-fluid\\\">\\n    <div class=\\\"breadcrumb-group\\\">\\n      <h5>{{'settings.label' | translate}}</h5>\\n        <nav class=\\\"breadcrumb\\\">\\n          <a class=\\\"breadcrumb-item\\\">{{'settings.home' | translate}}</a>\\n          <a class=\\\"breadcrumb-item\\\">{{'settings.label' | translate}}</a>\\n          <span class=\\\"breadcrumb-item active\\\">{{'documents.label' | translate}}</span>\\n        </nav>\\n    </div>\\n    <div class=\\\"white-bg\\\">\\n        <div class=\\\"page-title\\\">\\n          <h3>{{'documents.documents' | translate}}</h3>\\n        </div>\\n  \\n        <div class=\\\"form-outer\\\">\\n            <div class=\\\"inline-form-group\\\">\\n               <div class=\\\"row\\\">\\n                  <div class=\\\"col-md-4\\\">\\n                      <label><strong>{{'documents.name' | translate}}</strong></label>\\n                  </div>\\n                  <div class=\\\"col-md-8\\\" *ngIf=\\\"admin?.admin_acl['Settings']?.can_create==1\\\">\\n                     <form role=\\\"form\\\" novalidate #addForm1=\\\"ngForm\\\" (ngSubmit)=\\\"checkIfSpanishNameEntered(addForm1, '', addForm1.value.name_en, addForm1.value.name_es, 1, 'add');\\\">\\n                        <div class=\\\"row\\\">\\n                          <div class=\\\"col-lg-6 col-md-6\\\">\\n                            <input type=\\\"text\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" placeholder=\\\"{{'addForm.placeholder.nameEn' | translate}}\\\" id=\\\"name_en\\\" required [(ngModel)]=\\\"model.name_en\\\" name=\\\"name_en\\\">\\n                          </div>\\n                          <div class=\\\"col-lg-6 col-md-6\\\">\\n                              <input type=\\\"text\\\" autocomplete=\\\"off\\\" class=\\\"form-control\\\" placeholder=\\\"{{'addForm.placeholder.nameEs' | translate}}\\\" [(ngModel)]=\\\"model.name_es\\\" name=\\\"name_es\\\">\\n                          </div>\\n                        </div>\\n                      <button [disabled]=\\\"admin?.admin_acl['Settings']?.can_create==0 || addForm1.invalid\\\" type=\\\"submit\\\" class=\\\"add-btn btn\\\">\\n                         <img src=\\\"assets/img/add.png\\\" alt=\\\"img\\\">\\n                       </button>\\n                     </form>\\n                  </div>\\n               </div>\\n            </div>\\n        </div>\\n  \\n        <div class=\\\"tabel-section padding40 paddingT0\\\">\\n            <div class=\\\"table-responsive\\\">\\n              <table class=\\\"table table-striped\\\">\\n                  <tr>\\n                    <th style=\\\"width:40%; text-align:left;\\\">{{'table.th.nameEn' | translate}}</th>\\n                    <th style=\\\"width:40%; text-align:left;\\\">{{'table.th.nameEs' | translate}}</th>\\n                    <th style=\\\"width:20%\\\">{{'table.th.actions.label' | translate}}</th>\\n                  </tr>\\n                  <tr *ngFor=\\\"let item of parameter.items; let i=index\\\">\\n                    <td class=\\\"text-left\\\">\\n                      {{item.name_en}}\\n                    </td>\\n                    <td class=\\\"text-left\\\">\\n                      {{item.name_es}}\\n                    </td>\\n                  <td>\\n                      <button title=\\\"{{'table.title.editDetails' | translate}}\\\" [disabled]=\\\"admin?.admin_acl['Settings']?.can_update==0\\\" \\n                      (click)=\\\"openModal(addDocumentModal, item.id, item.name_en, item.name_es, item.status, i)\\\" class=\\\"action-icon\\\"><img src=\\\"assets/img/edit.png\\\" alt=\\\"img\\\"></button>\\n                    \\n                      <!-- status = 1 means unblocked -->\\n                      <button [disabled]=\\\"admin?.admin_acl['Settings']?.can_delete==0\\\"\\n                        (click)=\\\"blockUnblock(item.id, item.name_en, item.name_es, item.status==1?0:1, i)\\\" \\n                        title=\\\"{{item.status==1 ? ('table.title.block' | translate) : ('table.title.unblock' | translate)}}\\\" [ngClass]=\\\"{'unblock-bg':item.status==0}\\\"\\n                        class=\\\"action-icon\\\"><img src=\\\"assets/img/block.png\\\" alt=\\\"img\\\">\\n                      </button>\\n                  </td>\\n                  </tr>\\n  \\n                  <div *ngIf=\\\"parameter.total == 0\\\">\\n                    <p class=\\\"show-not-found\\\">\\n                        {{'message.error.noDocumentFound' | translate}}\\n                    </p>\\n                  </div>\\n              </table>\\n            </div>\\n        </div>\\n  \\n    </div>\\n  </div>\\n  \\n\\n<!-- add document modal -->\\n<ng-template #addDocumentModal>\\n  <div class=\\\"modal-content\\\">\\n    <div class=\\\"modal-header my-modal-header\\\">\\n      <h4 class=\\\"modal-title\\\">{{'documents.editDocumentName' | translate}}</h4>\\n      <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n    </div>\\n    <form class=\\\"form-horizontal my-modal-form\\\" role=\\\"form\\\" novalidate #addForm=\\\"ngForm\\\" (ngSubmit)=\\\"checkIfSpanishNameEntered(addForm, model.id, addForm.value.name_en, addForm.value.name_es, model.status, 'edit')\\\">\\n      <div class=\\\"modal-body my-modal-body\\\">\\n        <div class=\\\"form-group\\\">\\n          <input autocomplete=\\\"off\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"{{'addForm.placeholder.nameEn' | translate}}\\\" id=\\\"name_en\\\" required [(ngModel)]=\\\"model.name_en\\\" name=\\\"name_en\\\" #name_en=\\\"ngModel\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <input autocomplete=\\\"off\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"{{'addForm.placeholder.nameEs' | translate}}\\\" [(ngModel)]=\\\"model.name_es\\\" name=\\\"name_es\\\">\\n        </div>\\n      </div>\\n      <div class=\\\"modal-footer btn-cont\\\">\\n        <button type=\\\"submit\\\" [disabled]=\\\"admin?.admin_acl['Settings']?.can_create==0 || addForm.invalid\\\" class=\\\"btn btn-primary-new\\\">Submit</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">Close</button>\\n      </div>\\n    </form>\\n  </div>\\n</ng-template>\\n\"","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { AdminService } from 'src/app/services/admin.service';\nimport { IProperty } from 'src/app/common/property';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { Constant } from 'src/app/common/constants';\nimport { Document } from 'src/app/models/document.model';\nimport { NgForm } from '@angular/forms';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { TranslateService } from '@ngx-translate/core';\ndeclare let swal: any;\n\n@Component({\n  selector: 'app-documents',\n  templateUrl: './documents.component.html',\n  styleUrls: ['./documents.component.css'],\n  providers: [Constant, Document]\n})\nexport class DocumentsComponent implements OnInit {\n\n  public parameter: IProperty = {};\n  public modalRef: BsModalRef;\n  icon: any;\n\n  constructor(\n    public constant: Constant,\n    private modalService: BsModalService,\n    public admin: AdminService,\n    public model: Document, private spinner: NgxSpinnerService,\n    private translate: TranslateService\n  ) {\n  }\n\n  ngOnInit() {\n    this.getDocumentOptions();\n  }\n\n  closeModal() {\n    this.modalRef.hide();\n  }\n\n  public openModal(template: TemplateRef<any>, id: string, name_en: string, name_es: string, status: number, index: number) {\n    this.model.id = id;\n    this.model.name_en = name_en;\n    this.model.name_es = name_es;\n    this.model.status = status;\n    this.parameter.index = index;\n    this.modalRef = this.modalService.show(template);\n  }\n\n\n  addDocumentOptions(id: string, name_en: string, name_es: string, status: number, type: string) {\n\n    if (type !== 'add') { this.modalRef.hide(); }\n\n    // this.spinner.show();\n    const input = new FormData();\n    input.append('name_en', name_en);\n    input.append('name_es', name_es);\n    input.append('status', status.toString());\n\n    if (id) { input.append('id', id); }\n\n    this.admin.postDataApi('addDocumentOptions', input)\n      .subscribe(\n        success => {\n          this.model = new Document();\n          const text = id ?\n          this.translate.instant('message.success.updatedSuccessfully') :\n          this.translate.instant('message.success.addedSuccessfully');\n          swal(this.translate.instant('swal.success'), text, 'success');\n          if (id === '') {\n            this.parameter.items.push(success.data);\n          } else {\n            this.parameter.items[this.parameter.index] = success.data;\n          }\n        }\n      );\n  }\n\n\n  getDocumentOptions() {\n    this.parameter.url = 'getDocumentOptions';\n    this.spinner.show();\n    this.admin.postDataApi(this.parameter.url, {})\n      .subscribe(\n        success => {\n          this.spinner.hide();\n          this.parameter.items = success.data;\n          this.parameter.total = success.data.length;\n        }, error => {\n          this.spinner.hide();\n        }\n      );\n  }\n\n\n\n  // addPossessionStatusPopup(id: string, name_en: string, name_es: string, status: number, type: string) {\n  //   const text = status === 1 ? this.constant.title.UNBLOCK_PROJECT_POSSESSION : this.constant.title.BLOCK_PROJECT_POSSESSION;\n  //   swal({\n  //     // title: this.constant.title.ARE_YOU_SURE,\n  //     // text: status === 1 ? this.constant.title.UNBLOCK_PROJECT_POSSESSION : this.constant.title.BLOCK_PROJECT_POSSESSION,\n  //     html: this.translate.instant('message.error.areYouSure') + '<br>' + text,\n  //     type: 'warning',\n  //     showCancelButton: true,\n  //     confirmButtonColor: this.constant.confirmButtonColor,\n  //     cancelButtonColor: this.constant.cancelButtonColor,\n  //     confirmButtonText: 'Yes'\n  //   }).then((result) => {\n  //     if (result.value) {\n  //       this.addDocumentOptions(id, name_en, name_es, status, type);\n  //     }\n  //   });\n  // }\n\n\n  checkIfSpanishNameEntered(formdata: NgForm, id: string, name_en: string, name_es: string, status: number, type: string) {\n    formdata.reset();\n    const self = this;\n    if (name_es === undefined) {\n      swal({\n        text: this.translate.instant('message.error.saveEngDocumentName'),\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: this.constant.confirmButtonColor,\n        cancelButtonColor: this.constant.cancelButtonColor,\n        confirmButtonText: 'Yes'\n      }).then((result) => {\n        if (result.value) {\n          this.addDocumentOptions(id, name_en, name_en, status, type);\n        }\n      });\n    } else {\n      self.addDocumentOptions(id, name_en, name_es, status, type);\n    }\n  }\n\n  blockUnblock(id: string, name_en: string, name_es: string, status: number, index: number) {\n    this.parameter.index = index;\n    switch (status) {\n      case 0:\n        this.parameter.text = this.translate.instant('message.error.wantToBlockDocument');\n        this.parameter.successText = this.translate.instant('message.success.blockedSuccessfully');\n        break;\n      case 1:\n        this.parameter.text = this.translate.instant('message.error.wantToUnblockDocument');\n        this.parameter.successText = this.translate.instant('message.success.unblockedSuccessfully');\n        break;\n    }\n\n    swal({\n      html: this.translate.instant('message.error.areYouSure') + '<br>' + this.parameter.text,\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: this.constant.confirmButtonColor,\n      cancelButtonColor: this.constant.cancelButtonColor,\n      confirmButtonText: 'Yes'\n    }).then((result) => {\n      if (result.value) {\n        this.addDocumentOptions(id, name_en, name_es, status, 'add');\n      }\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9zZXR0aW5ncy9lZGl0LXByb2ZpbGUvZWRpdC1wcm9maWxlLmNvbXBvbmVudC5jc3MifQ== */\"","module.exports = \"\\n<!--content start-->\\n<div class=\\\"container-fluid\\\">\\n    <div class=\\\"breadcrumb-group\\\">\\n      <h5>{{'settings.label' | translate}}</h5>\\n      <nav class=\\\"breadcrumb\\\">\\n        <a class=\\\"breadcrumb-item\\\">{{'settings.home' | translate}}</a>\\n        <a class=\\\"breadcrumb-item\\\">{{'settings.label' | translate}}</a>\\n          <span class=\\\"breadcrumb-item active\\\">{{'editProfile.label' | translate}}</span>\\n      </nav>\\n    </div>\\n\\n\\n\\n<div class=\\\"white-bg padding40\\\">\\n  <div class=\\\"row\\\">\\n  <form role=\\\"form\\\" ngNativeValidate #addForm=\\\"ngForm\\\" (ngSubmit)=\\\"updateProfile(addForm)\\\">\\n    <div class=\\\"col-xl-12 col-lg-12 col-md-12 col-12\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-6\\\">\\n              <div class=\\\"add-img\\\" style=\\\"display:flex;\\\">\\n                  <img *ngIf=\\\"model?.image\\\" [src]=\\\"model?.image\\\" style=\\\"object-fit: cover; width: 100%;\\\">\\n                  <label *ngIf=\\\"model?.image\\\">\\n                    <input accept=\\\"image/*\\\" name=\\\"image\\\" class=\\\"image\\\" (change)=\\\"changeListner($event, 'img_loader', 'image')\\\" type=\\\"file\\\">\\n                  </label>\\n                  <label *ngIf=\\\"!model?.image\\\">{{'addForm.image' | translate}}</label>\\n                  <input *ngIf=\\\"!model?.image\\\" accept=\\\"image/*\\\" name=\\\"image\\\" class=\\\"image\\\" (change)=\\\"changeListner($event, 'img_loader', 'image')\\\" type=\\\"file\\\">\\n                  <div *ngIf=\\\"model.img_loader\\\" class=\\\"loaderr\\\"></div>\\n              </div>\\n          </div>\\n          <div class=\\\"col-6\\\">\\n              <div class=\\\"btn-cont text-right\\\">\\n                  <button *ngIf=\\\"model.id==''\\\" type=\\\"submit\\\" [disabled]=\\\"!addForm.valid\\\" class=\\\"btn btn-primary\\\">{{'addForm.addBtn' | translate}}</button>\\n                  <button *ngIf=\\\"model.id!=''\\\" type=\\\"submit\\\" class=\\\"btn btn-primary\\\">{{'addForm.updateBtn' | translate}}</button>\\n              </div>\\n          </div>\\n          <div class=\\\"col-12\\\">\\n              <div class=\\\"spacer40\\\"></div>\\n          </div>\\n          <div class=\\\"col-12\\\">\\n              <div class=\\\"form-group-2\\\">\\n                <label>{{'addForm.name' | translate}} <span class=\\\"color-red\\\">*</span></label>\\n                <input [pattern]=\\\"constant.onlyWhiteSpaces\\\" autocomplete=\\\"off\\\" required type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"model.name\\\" name=\\\"name\\\">\\n              </div>\\n          </div>\\n          <div class=\\\"col-12\\\">\\n              <div class=\\\"form-group-2\\\">\\n                <label>{{'addForm.contactNumber' | translate}} <span class=\\\"color-red\\\">*</span></label>\\n                <input minlength=\\\"6\\\" maxlength=\\\"16\\\" autocomplete=\\\"off\\\" type=\\\"text\\\" [pattern]=\\\"constant.phonePattern\\\" class=\\\"form-control\\\" id=\\\"phone\\\" required minlength=\\\"1\\\" [(ngModel)]=\\\"model.phone\\\" name=\\\"phone\\\"\\n                      ng2TelInput [ng2TelInputOptions]=\\\"initialCountry\\\" (countryChange)=\\\"onCountryChange($event)\\\" />\\n              </div>\\n          </div>\\n          <div class=\\\"col-12\\\">\\n              <div class=\\\"form-group-2\\\">\\n                <label>{{'addForm.emailId' | translate}} <span class=\\\"color-red\\\">*</span></label>\\n                <input [disabled]=\\\"true\\\" (keydown.space)=\\\"$event.preventDefault();\\\" autocomplete=\\\"off\\\" required [pattern]=\\\"constant.emailPattern\\\" type=\\\"email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"model.email\\\" name=\\\"email\\\">\\n              </div>\\n          </div>\\n        </div>\\n    </div>\\n    </form>\\n  </div>\\n</div>\\n\\n\\n    <!-- <form class=\\\"form-horizontal\\\" novalidate #addForm=\\\"ngForm\\\" (ngSubmit)=\\\"updateProfile(addForm)\\\">\\n        \\n        <div class=\\\"form-group row\\\">\\n            <label class=\\\"col-sm-2 col-form-label\\\">Image:</label>\\n            <div class=\\\"col-sm-10\\\">\\n                <input required accept=\\\"image/*\\\" class=\\\"image\\\" (change)=\\\"changeListner($event)\\\" type=\\\"file\\\">\\n            </div>\\n          </div>\\n            <div class=\\\"form-group row\\\">\\n              <label class=\\\"col-sm-2 col-form-label\\\">Name:</label>\\n              <div class=\\\"col-sm-10\\\">\\n  \\n                  <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Name\\\" id=\\\"name\\\" required minlength=\\\"1\\\" [(ngModel)]=\\\"model.name\\\" name=\\\"name\\\" #name=\\\"ngModel\\\">\\n  \\n                  <div *ngIf=\\\"name.errors && (name.dirty || name.touched)\\\" class=\\\"show-error\\\">\\n                      <div [hidden]=\\\"!name.errors.required\\\">\\n                          Name is required!\\n                      </div>\\n                      <div [hidden]=\\\"!name.errors.min\\\">\\n                          Name must be at least 1.\\n                      </div>\\n                  </div>\\n  \\n              </div>\\n            </div>\\n              \\n            <div class=\\\"form-group row\\\">\\n              <label class=\\\"col-sm-2 col-form-label\\\">Contact Number:</label>\\n              <div class=\\\"col-sm-10\\\">\\n                <input type=\\\"text\\\" class=\\\"form-control\\\"\\n                id=\\\"phone\\\" required minlength=\\\"1\\\" [(ngModel)]=\\\"model.phone\\\" \\n                name=\\\"phone\\\" #phone=\\\"ngModel\\\"\\nng2TelInput\\n[ng2TelInputOptions]=\\\"initialCountry\\\"\\n(countryChange)=\\\"onCountryChange($event)\\\" />\\n\\n\\n                <div *ngIf=\\\"phone.errors && (phone.dirty || phone.touched)\\\" class=\\\"show-error\\\">\\n                    <div [hidden]=\\\"!phone.errors.required\\\">\\n                      Contact Phone Number is required!\\n                    </div>\\n                    <div [hidden]=\\\"!phone.errors.min\\\">\\n                      Contact Phone Number must be at least 1.\\n                    </div>\\n                </div>\\n              </div>\\n            </div>\\n\\n            <div class=\\\"form-group btn-cont text-right\\\">\\n              <button class=\\\"btn btn-primary apply-btn\\\" type=\\\"submit\\\">Update Settings</button>\\n            </div>\\n      </form> -->\\n</div>\\n\"","import { Component, OnInit } from '@angular/core';\nimport { AdminService } from 'src/app/services/admin.service';\nimport { IProperty } from 'src/app/common/property';\nimport { NgForm } from '@angular/forms';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { Constant } from 'src/app/common/constants';\nimport { CommonService } from 'src/app/services/common.service';\nimport { ACL } from 'src/app/models/acl.model';\nimport { TranslateService } from '@ngx-translate/core';\ndeclare let swal: any;\n\n@Component({\n  selector: 'app-edit-profile',\n  templateUrl: './edit-profile.component.html',\n  styleUrls: ['./edit-profile.component.css']\n})\nexport class EditProfileComponent implements OnInit {\n\n  public parameter: IProperty = {};\n  initialCountry: any;\n  image: string;\n  model: ACL;\n  constructor(\n    public constant: Constant,\n    private admin: AdminService,\n    private cs: CommonService,\n    private spinner: NgxSpinnerService,\n    private translate: TranslateService) { }\n\n  ngOnInit() {\n    this.model = new ACL();\n    this.model.img_loader = false;\n    this.model.country_code = this.constant.country_code;\n    this.model.dial_code = this.constant.dial_code;\n    this.initialCountry = {initialCountry: this.constant.country_code};\n    this.admin.loginData$.subscribe(success => {\n      if (success['id']) {\n        this.model = success;\n      } else {\n        this.loginData();\n      }\n    });\n  }\n\n  loginData() {\n    this.spinner.show();\n    this.admin.postDataApi('loginData', {})\n    .subscribe(\n      success => {\n        this.spinner.hide();\n        this.model = success.data;\n        this.image = this.model.image;\n      }, error => {\n        this.spinner.hide();\n      });\n  }\n\n  onCountryChange(e) {\n    this.model.country_code = e.iso2;\n    this.model.dial_code = '+' + e.dialCode;\n    this.initialCountry = {initialCountry: e.iso2};\n  }\n\n  changeListner(event: any, paramLoader: string, param: any) {\n    if (event.target.files[0].size > this.constant.fileSizeLimit) {\n      swal(this.translate.instant('swal.error'), this.translate.instant('message.error.fileSizeExceeds'), 'error');\n      return false;\n    }\n    this.model[paramLoader] = true;\n    const reader = new FileReader();\n    reader.onload = (e: any) => {\n      this.model[param] = e.target.result;\n      this.cs.saveImage(event.target.files[0]).subscribe(\n        success => {\n          this.model[paramLoader] = false;\n          this.model[param] = success['data'].image;\n        }\n      );\n    };\n    reader.readAsDataURL(event.target.files[0]);\n  }\n\n  updateProfile(formData: NgForm) {\n    if (this.model.img_loader) {\n      swal(this.translate.instant('swal.error'), this.translate.instant('message.error.uploadingImage'), 'error');\n      return;\n    }\n\n    const input = new FormData();\n    input.append('name', formData.value.name);\n    input.append('phone', formData.value.phone);\n    input.append('country_code', this.model.country_code);\n    input.append('dial_code', this.model.dial_code);\n    input.append('image', this.model.image);\n    this.spinner.show();\n    this.admin.postDataApi('updateProfile', input)\n      .subscribe(\n        success => {\n          this.spinner.hide();\n          this.admin.login.next(success.data);\n          swal(this.translate.instant('swal.success'), success.message, 'success');\n        }, error => {\n          this.spinner.hide();\n        }\n      );\n  }\n}\n","module.exports = \".selectedRow{\\n    background: rgb(228, 224, 224)\\n}\\n.locality-name{\\n    cursor: pointer;\\n}\\n.form-model0P{\\n    padding: 0px !important;\\n}\\n.model-body10P{\\n    padding: 10px !important;\\n}\\n.my-modal-header{\\n    display: inline;\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L3NldHRpbmdzL2xvY2FsaXR5L2xvY2FsaXR5LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSw4QkFBOEI7Q0FDakM7QUFDRDtJQUNJLGdCQUFnQjtDQUNuQjtBQUNEO0lBQ0ksd0JBQXdCO0NBQzNCO0FBQ0Q7SUFDSSx5QkFBeUI7Q0FDNUI7QUFDRDtJQUNJLGdCQUFnQjtDQUNuQiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9zZXR0aW5ncy9sb2NhbGl0eS9sb2NhbGl0eS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnNlbGVjdGVkUm93e1xuICAgIGJhY2tncm91bmQ6IHJnYigyMjgsIDIyNCwgMjI0KVxufVxuLmxvY2FsaXR5LW5hbWV7XG4gICAgY3Vyc29yOiBwb2ludGVyO1xufVxuLmZvcm0tbW9kZWwwUHtcbiAgICBwYWRkaW5nOiAwcHggIWltcG9ydGFudDtcbn1cbi5tb2RlbC1ib2R5MTBQe1xuICAgIHBhZGRpbmc6IDEwcHggIWltcG9ydGFudDtcbn1cbi5teS1tb2RhbC1oZWFkZXJ7XG4gICAgZGlzcGxheTogaW5saW5lO1xufSJdfQ== */\"","module.exports = \"<!--content start-->\\n<div class=\\\"container-fluid\\\">\\n  <div class=\\\"breadcrumb-group\\\">\\n    <h5>{{'settings.label' | translate}}</h5>\\n    <nav class=\\\"breadcrumb\\\">\\n      <a class=\\\"breadcrumb-item\\\">{{'settings.home' | translate}}</a>\\n      <a class=\\\"breadcrumb-item\\\">{{'settings.label' | translate}}</a>\\n      <span class=\\\"breadcrumb-item active\\\">{{'location.locality' | translate}}</span>\\n    </nav>\\n  </div>\\n\\n  <div class=\\\"white-bg\\\">\\n    <div class=\\\"page-title\\\">\\n      <h3>{{'location.locality' | translate}}</h3>\\n    </div>\\n\\n    <!-- add city -->\\n    <div class=\\\"form-outer marginT15\\\">\\n      <div class=\\\"inline-form-group\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <label><strong>{{'location.addLocality' | translate}}</strong></label>\\n            <hr>\\n          </div>\\n          <div class=\\\"col-lg-3 col-md-3 col-sm-6 col-6\\\">\\n            <div class=\\\"form-group marginB0\\\">\\n              <label>{{'filters.location.country' | translate}}</label>\\n              <select title=\\\"{{'filters.location.selectCountry' | translate}}\\\" class=\\\"form-control\\\" (change)=\\\"getStates($event.target.value, '')\\\">\\n                <option value=\\\"\\\" disabled>{{'filters.location.selectCountry' | translate}}</option>\\n                <option *ngFor=\\\"let country of parameter.countries\\\" value=\\\"{{country.id}}\\\"\\n                  [selected]=\\\"country.id == parameter.country_id\\\">{{country.name_en}}</option>\\n              </select>\\n            </div>\\n          </div>\\n          <div class=\\\"col-lg-3 col-md-3 col-sm-6 col-6\\\">\\n            <div class=\\\"form-group marginB0\\\">\\n              <label>{{'filters.location.state' | translate}}</label>\\n              <select title=\\\"{{'filters.location.selectState' | translate}}\\\" class=\\\"form-control\\\" (change)=\\\"getCities($event.target.value, '')\\\">\\n                <option value=\\\"\\\" disabled>{{'filters.location.selectState' | translate}}</option>\\n                <option *ngFor=\\\"let state of parameter.states\\\" value=\\\"{{state.id}}\\\"\\n                  [selected]=\\\"state.id == parameter.state_id\\\">{{state.name_en}}</option>\\n              </select>\\n            </div>\\n          </div>\\n          <div class=\\\"col-lg-3 col-md-3 col-sm-6 col-6\\\">\\n            <div class=\\\"form-group marginB0\\\">\\n              <label>{{'filters.location.city' | translate}}</label>\\n              <select title=\\\"{{'filters.location.selectCity' | translate}}\\\" class=\\\"form-control\\\" (change)=\\\"getLocalities($event.target.value)\\\">\\n                <option value=\\\"\\\" disabled>{{'filters.location.selectCity' | translate}}</option>\\n                <option *ngFor=\\\"let city of parameter.cities\\\" value=\\\"{{city.id}}\\\"\\n                  [selected]=\\\"city.id == parameter.city_id\\\">{{city.name_en}}</option>\\n              </select>\\n            </div>\\n          </div>\\n          <div class=\\\"col-lg-3 col-md-3 col-sm-6 col-6\\\">\\n            <div class=\\\"form-group marginB0\\\">\\n              <label>{{'filters.location.searchLocality' | translate}}</label>\\n              <input autocomplete=\\\"off\\\" required placeholder=\\\"{{'filters.location.searchLocality' | translate}}\\\" autocapitalize=\\\"off\\\"\\n                spellcheck=\\\"off\\\" type=\\\"text\\\" class=\\\"form-control\\\" style=\\\"padding: 8px 25px 8px 15px;\\n                height: 40px !important;\\\" (keyup.enter)=\\\"getLocalities(parameter.city_id, $event.target.value)\\\">\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n    <hr>\\n\\n    \\n    <div class=\\\"form-outer marginT15 padding40\\\">\\n      <div class=\\\"row\\\">\\n        <table class=\\\"table table-striped\\\">\\n          <tr>\\n            <th style=\\\"width:30%; text-align:left;\\\">\\n              <div class=\\\"table-search\\\">\\n                  <label>{{'table.th.nameEn' | translate}}</label>\\n                  <!-- <div class=\\\"searh-3\\\">\\n                    <input autocomplete=\\\"off\\\" type=\\\"text\\\" style=\\\"height:28px; font-size: 14px;\\\"\\n                      (keyup.enter)=\\\"getLocalities(parameter.city_id, $event.target.value)\\\" name=\\\"\\\"\\n                      placeholder=\\\"Search here\\\">\\n                    <button (click)=\\\"getLocalities(parameter.city_id, $event.target.value)\\\"><i\\n                        class=\\\"fa fa-search\\\"></i></button>\\n                  </div> -->\\n              </div>\\n            </th>\\n            <th style=\\\"width:30%; text-align:left;\\\">\\n              <div class=\\\"table-search\\\">\\n                  <label>{{'table.th.nameEs' | translate}}</label>\\n              </div>\\n            </th>\\n            <th style=\\\"width:10%; text-align:left;\\\">\\n              <div class=\\\"table-search\\\">\\n                  <label>{{'table.th.avgPrice' | translate}}</label>\\n              </div>\\n            </th>\\n            <th style=\\\"width:30%\\\">{{'table.th.actions.label' | translate}}</th>\\n          </tr>\\n          <!-- (click)=\\\"markLocalityFeatured(index, locality.id, locality.is_featured==1?0:1)\\\" -->\\n          <tr *ngFor=\\\"let locality of all_overlays; let index = index\\\" \\n            (click)=\\\"setSelection(locality.overlay, locality.id)\\\">\\n            <td class=\\\"text-left locality-name\\\" [ngClass]=\\\"locality.id == selectedLocality ? 'selectedRow' : ''\\\">\\n              {{locality.name_en}}\\n            </td>\\n            <td class=\\\"text-left locality-name\\\" [ngClass]=\\\"locality.id == selectedLocality ? 'selectedRow' : ''\\\">\\n              {{locality.name_es}}\\n            </td>\\n            <td class=\\\"text-left locality-name\\\" [ngClass]=\\\"locality.id == selectedLocality ? 'selectedRow' : ''\\\">\\n              {{locality.avg_price | price}}\\n            </td>\\n            <!-- <td>\\n              <a (click)=\\\"upadteSelection(locality, index)\\\" title=\\\"Unblock State\\\" class=\\\"icon-block block-icon\\\"><img src=\\\"assets/img/top-arrow.png\\\" alt=\\\"img\\\"></a>\\n            </td> -->\\n            <td [ngClass]=\\\"locality.id == selectedLocality ? 'selectedRow' : ''\\\">\\n              <button [disabled]=\\\"admin?.admin_acl['Settings']?.can_update==0\\\" *ngIf=\\\"locality.is_featured==0\\\" \\n                (click)=\\\"markLocalityFeatured(index, locality.id, locality.is_featured==1?0:1)\\\" class=\\\"action-icon\\\" title=\\\"{{'table.title.markFeauture' | translate}}\\\"><img src=\\\"assets/img/ic_featured.png\\\" alt=\\\"img\\\"></button>\\n              <button [disabled]=\\\"admin?.admin_acl['Settings']?.can_update==0\\\" *ngIf=\\\"locality.is_featured==1\\\" \\n                (click)=\\\"markLocalityFeatured(index, locality.id, locality.is_featured==1?0:1)\\\" class=\\\"action-icon\\\" title=\\\"{{'table.title.markUnfeauture' | translate}}\\\"><img src=\\\"assets/img/tick-selected.png\\\" alt=\\\"img\\\"></button>\\n              <!-- <a *ngIf=\\\"locality.status == 0\\\" (click)=\\\"blockUnblockLocality(locality, index, 1)\\\"\\n                title=\\\"Unblock Locality\\\" class=\\\"icon-block block-icon unblock-bg\\\"><img src=\\\"assets/img/block.png\\\"\\n                  alt=\\\"img\\\"></a>\\n              <a *ngIf=\\\"locality.status == 1\\\" (click)=\\\"blockUnblockLocality(locality, index, 0)\\\" title=\\\"Block Locality\\\"\\n                class=\\\"icon-block block-icon\\\"><img src=\\\"assets/img/unblock.png\\\" alt=\\\"img\\\"></a> -->\\n              <a (click)=\\\"editLocality(locality.id, locality.name_en, locality.name_es, locality.price_per_sqft, locality.status, locality.poly_coordinates)\\\"\\n                title=\\\"{{'table.title.editDetails' | translate}}\\\" class=\\\"action-icon\\\"><img src=\\\"assets/img/edit.png\\\" alt=\\\"img\\\"></a>\\n              <a (click)=\\\"deleteLocality(locality, index)\\\" title=\\\"{{'table.title.delete' | translate}}\\\" class=\\\"action-icon\\\"><img\\n                  src=\\\"assets/img/ic_delete.png\\\" alt=\\\"img\\\"></a>\\n            </td>\\n          </tr>\\n        </table>\\n\\n        <div class=\\\"error-border\\\" [ngSwitch]=\\\"true\\\">\\n          <p class=\\\"show-not-found\\\" *ngSwitchCase=\\\"parameter.states?.length == 0\\\">\\n              {{'message.error.noStateFound' | translate}}\\n          </p>\\n          <p class=\\\"show-not-found\\\" *ngSwitchCase=\\\"parameter.states?.length != 0 && parameter.cities?.length == 0\\\">\\n              {{'message.error.noCityFound' | translate}}</p>\\n          <p class=\\\"show-not-found\\\"\\n            *ngSwitchCase=\\\"parameter.states?.length != 0 && parameter.cities?.length != 0 && all_overlays?.length == 0\\\">\\n            {{'message.error.noLocalityFound' | translate}}</p>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <div class=\\\"form-outer marginT15 padding40\\\">\\n      <div class=\\\"row\\\">\\n        <!-- <div class=\\\"form-outer marginB10\\\">\\n              <div class=\\\"row\\\">\\n                <div class=\\\"offset-lg-3\\\"></div>\\n                <div class=\\\"col-lg-3 col-md-6 col-sm-6 col-6\\\">\\n                  <div class=\\\"form-group marginB0\\\"></div>\\n                </div>\\n                <div class=\\\"col-lg-6 col-md-6 col-sm-6 col-6\\\">\\n                  <div class=\\\"form-group marginB0\\\">\\n                    <input autocomplete=\\\"off\\\" required placeholder=\\\"Search area you want to mark.\\\" autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\"\\n                      spellcheck=\\\"off\\\" type=\\\"text\\\" class=\\\"form-control\\\" style=\\\"padding: 8px 25px 8px 15px;\\n                      height: 40px !important;\\\" #searchLocality (input)=\\\"loadPlaces()\\\">\\n                  </div>\\n                </div>\\n              </div>\\n        </div> -->\\n\\n        <div class=\\\"col-lg-6 col-md-6 col-sm-6 col-6\\\">\\n          <div class=\\\"form-group marginB10\\\"></div>\\n        </div>\\n        <div class=\\\"col-lg-6 col-md-6 col-sm-6 col-6\\\">\\n          <div class=\\\"form-group marginB10\\\">\\n              <input autocomplete=\\\"off\\\" required placeholder=\\\"{{'addForm.placeholder.searchTheAreaUWantToMark' | translate}}\\\" autocorrect=\\\"off\\\" autocapitalize=\\\"off\\\"\\n              spellcheck=\\\"off\\\" type=\\\"text\\\" class=\\\"form-control\\\" style=\\\"padding: 8px 25px 8px 15px;\\n              height: 40px !important;\\\" #searchLocality (input)=\\\"loadPlaces()\\\">\\n          </div>\\n        </div>\\n        <div id=\\\"mapDiv\\\" style=\\\"height: 500px; width: 100%;\\\" #mapDiv></div>\\n      </div>\\n    </div>\\n\\n\\n  </div>\\n</div>\\n<!--content end-->\\n\\n\\n<!-- Trigger the modal with a button -->\\n<button type=\\\"button\\\" style=\\\"display: none;\\\" class=\\\"btn btn-info\\\" data-toggle=\\\"modal\\\" data-target=\\\"#myModal\\\"\\n  #localityOpen>Open Modal</button>\\n\\n<!-- Modal -->\\n<div id=\\\"myModal\\\" class=\\\"modal fade\\\" role=\\\"dialog\\\">\\n  <div class=\\\"modal-dialog\\\">\\n\\n    <!-- Modal content-->\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header my-modal-header\\\">\\n        <button type=\\\"button\\\" class=\\\"close\\\" (click)=\\\"closeModal()\\\">&times;</button>\\n        <h4 class=\\\"modal-title\\\">{{model.id ? ('location.editLocalityDetails' | translate) : ('location.addLocalityDetails' | translate)}}</h4>\\n      </div>\\n      <form class=\\\"form-horizontal form-model0P\\\" role=\\\"form\\\" novalidate #addForm=\\\"ngForm\\\"\\n        (ngSubmit)=\\\"checkIfLocalitySpanishNameEntered(addForm.value.name_en, addForm.value.name_es, addForm.value.price_per_sqft)\\\">\\n        <div class=\\\"modal-body model-body10P\\\">\\n          <div class=\\\"form-group\\\">\\n            <input autocomplete=\\\"off\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"{{'location.localityNameEn' | translate}}\\\"\\n              id=\\\"name_en\\\" required [(ngModel)]=\\\"model.name_en\\\" name=\\\"name_en\\\" #name_en=\\\"ngModel\\\">\\n            <!-- <div *ngIf=\\\"name_en.errors && (name_en.dirty || name_en.touched)\\\" class=\\\"show-not-found\\\">\\n                <div [hidden]=\\\"!name_en.errors.required\\\">\\n                  {{constant.errorMsg.COUNTRY_NAME_REQUIRED}}\\n                </div>\\n            </div> -->\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <input autocomplete=\\\"off\\\" type=\\\"text\\\" name=\\\"name_es\\\" class=\\\"form-control\\\"\\n              placeholder=\\\"{{'location.localityNameEs' | translate}}\\\" [(ngModel)]=\\\"model.name_es\\\">\\n          </div>\\n\\n          <!-- <div class=\\\"form-group\\\">\\n            <input autocomplete=\\\"off\\\" type=\\\"text\\\" class=\\\"form-control\\\" min=\\\"1\\\" placeholder=\\\"Price per sqmt\\\"\\n              id=\\\"price_per_sqft\\\" required [(ngModel)]=\\\"model.price_per_sqft\\\" name=\\\"price_per_sqft\\\"\\n              #price_per_sqft=\\\"ngModel\\\">\\n          </div> -->\\n\\n        </div>\\n        <div class=\\\"modal-footer btn-cont\\\">\\n          <button type=\\\"submit\\\" [disabled]=\\\"addForm.invalid\\\" class=\\\"btn btn-primary-new\\\">{{'addForm.submit' | translate}}</button>\\n          <button style=\\\"display:none;\\\" type=\\\"button\\\" class=\\\"btn btn-default\\\" #localityClose\\n            data-dismiss=\\\"modal\\\">{{'addForm.close' | translate}}</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-default\\\" (click)=\\\"closeModal()\\\">{{'addForm.close' | translate}}</button>\\n        </div>\\n      </form>\\n\\n    </div>\\n\\n  </div>\\n</div>\"","import { Component, OnInit, ViewChild, ElementRef, NgZone } from '@angular/core';\nimport { AdminService } from 'src/app/services/admin.service';\nimport { IProperty } from 'src/app/common/property';\nimport { BsModalRef } from 'ngx-bootstrap/modal';\nimport { MapsAPILoader } from '@agm/core';\nimport { Constant } from 'src/app/common/constants';\nimport { Locality } from 'src/app/models/locality.model';\nimport { FormControl } from '@angular/forms';\nimport { Observable } from 'rxjs/Observable';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { TranslateService } from '@ngx-translate/core';\ndeclare let swal: any;\ndeclare const google;\n\n@Component({\n  selector: 'app-locality',\n  templateUrl: './locality.component.html',\n  styleUrls: ['./locality.component.css'],\n  providers: [Constant, Locality]\n})\n\nexport class LocalityComponent implements OnInit {\n\n  @ViewChild('searchLocality') searchElementRef: ElementRef;\n  @ViewChild('localityOpen') localityOpen: ElementRef;\n  @ViewChild('localityClose') localityClose: ElementRef;\n\n  public latitude: number;\n  public longitude: number;\n  public searchControl: FormControl;\n  public zoom: number;\n  public parameter: IProperty = {};\n  public modalRef: BsModalRef;\n  agm: any;\n  len: any;\n\n  map: any;\n  all_overlays = [];\n  selectedLocality: any;\n  selectedShape: any;\n  shapeName: any;\n\n  showModal = true;\n  private editOverlay:any = null;\n  private isaddNewLocality:boolean = false;\n\n  @ViewChild('mapDiv') mapDiv: ElementRef;\n\n  constructor(\n    private loader: MapsAPILoader,\n    public admin: AdminService,\n    private ngZone: NgZone,\n    private constant: Constant,\n    public model: Locality,\n    private spinner: NgxSpinnerService,\n    private translate: TranslateService\n  ) { }\n\n  ngOnInit() {\n    this.parameter.localities = [];\n    this.getCountries('');\n  }\n\n  getCountries(keyword) {\n\n    this.spinner.show();\n    this.parameter.url = 'getCountries';\n    const input = new FormData();\n\n    if (keyword) {\n      input.append('keyword', keyword);\n    }\n\n    this.admin.postDataApi(this.parameter.url, input)\n      .subscribe(\n        success => {\n          this.spinner.hide();\n          this.parameter.countries = success.data;\n          if (this.parameter.countries.length !== 0) {\n            this.parameter.country_id = this.parameter.countries[0].id;\n            this.getStates(this.parameter.countries[0].id, '');\n          }\n        }, error => {\n          this.spinner.hide();\n        }\n      );\n  }\n\n  getStates(country_id, keyword) {\n    this.spinner.show();\n    this.parameter.url = 'country/getStates';\n    this.parameter.country_id = country_id;\n\n    const input = new FormData();\n    input.append('country_id', country_id);\n\n    if (keyword) {\n      input.append('keyword', keyword);\n    }\n\n    this.admin.postDataApi(this.parameter.url, input)\n      .subscribe(\n        success => {\n          this.spinner.hide();\n          this.parameter.states = success.data;\n          if (this.parameter.states.length) {\n            this.parameter.state_id = this.parameter.states[0].id;\n            this.getCities(this.parameter.states[0].id, '');\n          } else {\n            this.parameter.city_id = '0';\n            this.parameter.localityCount = 0;\n            this.parameter.cities = [];\n            this.parameter.localities = [];\n            this.all_overlays = [];\n            this.init();\n          }\n        }, error => {\n          this.spinner.hide();\n        });\n  }\n\n  getCities(state_id, keyword) {\n    this.spinner.show();\n    this.parameter.url = 'getCities';\n    this.parameter.state_id = state_id;\n\n    const input = new FormData();\n    input.append('state_id', state_id);\n\n    if (keyword) {\n      input.append('keyword', keyword);\n    }\n\n    this.admin.postDataApi(this.parameter.url, input)\n      .subscribe(\n        success => {\n          this.spinner.hide();\n          this.parameter.cities = success.data;\n          if (this.parameter.cities.length) {\n            this.parameter.city_id = this.parameter.cities[0].id;\n            this.getLatLan(this.parameter.cities[0].name_en);\n            this.getLocalities(this.parameter.city_id, '');\n          } else {\n            this.parameter.localityCount = 0;\n            this.parameter.cities = [];\n            this.parameter.localities = [];\n            this.all_overlays = [];\n            this.init();\n          }\n        }, error => {\n          this.spinner.hide();\n        });\n  }\n\n  getLatLngFromAddress() {\n    // https://maps.googleapis.com/maps/api/geocode/json?address=adress&key=YOUR_API_KEY\n  }\n\n\n  getLocalities(city_id, keyword = '') {\n    this.spinner.show();\n    this.parameter.url = 'getLocalities';\n    this.parameter.city_id = city_id;\n\n    const input = new FormData();\n    input.append('city_id', city_id);\n\n    if (keyword) {\n      input.append('keyword', keyword);\n    }\n\n    this.admin.postDataApi(this.parameter.url, input)\n      .subscribe(\n        success => {\n          this.spinner.hide();\n          this.parameter.localities = success.data;\n          this.all_overlays = this.parameter.localities;\n          this.parameter.localityCount = success.data.length;\n          if (this.parameter.localities.length) {\n            this.selectedLocality = this.parameter.localities[0].id;\n          } else {\n            this.all_overlays = [];\n          }\n          this.init();\n        }, error => {\n          this.spinner.hide();\n        });\n  }\n\n\n  init() {\n\n    // Wait for the google maps script to be loaded before using the \"google\" keyword\n    this.loader.load().then(() => {\n      if (navigator.geolocation) {\n        navigator.geolocation.getCurrentPosition(position => {\n          const map = new google.maps.Map(this.mapDiv.nativeElement, {\n            center: {\n              lat: this.latitude ? this.latitude : position.coords.latitude,\n              lng: this.longitude ? this.longitude : position.coords.longitude\n            },\n            zoom: 18\n          });\n          this.map = map;\n\n          //let all_overlays_index = 0;\n          this.all_overlays.forEach((locality,overlays_index) => {\n\n            const poly_coordinates = JSON.parse(locality.poly_coordinates);\n            const polygon = poly_coordinates.map(ll => {\n              const latlng = ll.split(',');\n              const coord = new google.maps.LatLng(parseFloat(latlng[0]), parseFloat(latlng[1]));\n              return coord;\n            }\n            );\n\n\n            // this.setSelection(polygon);\n            const singlePolygon = new google.maps.Polygon({\n              paths: polygon,\n              editable: true,\n              strokeColor: '#FF0000',\n              strokeOpacity: 0.8,\n              strokeWeight: 2,\n              fillColor: '#FF0000',\n              fillOpacity: 0.35\n            });\n            locality.overlay = singlePolygon;\n\n            // showing selected first locality\n            if(this.isaddNewLocality){\n              if((overlays_index + 1) === this.all_overlays.length){\n                this.setSelection(singlePolygon, locality.id);\n              }else{\n                singlePolygon.setEditable(false);\n              }\n            }else if(this.editOverlay){\n                if(locality.id === this.editOverlay.id){\n                  this.setSelection(singlePolygon, locality.id);\n                }else{\n                  singlePolygon.setEditable(false);\n                }\n            }else {\n              if (overlays_index === 0) { \n                this.setSelection(singlePolygon, locality.id); \n              }\n              else{\n                 singlePolygon.setEditable(false);\n              }\n            }            \n            //all_overlays_index++;\n\n\n            google.maps.event.addListener(singlePolygon, 'click', () => {\n              this.setSelection(singlePolygon, locality.id);\n            });\n           let self = this;\n            google.maps.event.addListener(singlePolygon, 'mouseup', function(muEvent) {\n              // console.log(singlePolygon);\n              // console.log(muEvent.latLng.lat(),\"current_lat\", muEvent.latLng.lng(),\"current_lng\");\n              let overlay = self.all_overlays.find(x => x.id == self.selectedLocality)\n              self.editOverlay = overlay;\n              // console.log(overlay.poly_coordinates,\"save db\")\n              // const newPoint = new google.maps.LatLng(muEvent.latLng.lat(), muEvent.latLng.lng());\n              // let p = JSON.parse(overlay.poly_coordinates);\n              // if(muEvent.vertex >= 0){\n              //   p[muEvent.vertex] = newPoint.toUrlValue();\n              // }else if(muEvent.edge>=0){\n              //   p.splice(muEvent.edge + 1, 0, newPoint.toUrlValue());\n              // } \n              // console.log(self.getPolygonCoords(singlePolygon)) ;\n              self.editLocality(overlay.id, overlay.name_en, overlay.name_es, overlay.price_per_sqft, overlay.status, JSON.stringify(self.getPolygonCoords(singlePolygon)));\n             // self.editLocality(overlay.id, overlay.name_en, overlay.name_es, overlay.price_per_sqft, overlay.status, JSON.stringify(p));\n             // self.editLocality(overlay.id, overlay.name_en, overlay.name_es, overlay.price_per_sqft, overlay.status, overlay.poly_coordinates);\n              self.localityOpen.nativeElement.click();\n            });\n\n            singlePolygon.setMap(map);\n          });\n\n\n          google.maps.event.addListener(map, 'click', event => {\n            this.placeMarker(event.latLng);\n          });\n\n          const drawingManager = new google.maps.drawing.DrawingManager({\n\n            drawingControl: true,\n            drawingControlOptions: {\n              position: google.maps.ControlPosition.TOP_CENTER,\n              drawingModes: [\n                // google.maps.drawing.OverlayType.MARKER,\n                // google.maps.drawing.OverlayType.CIRCLE,\n                google.maps.drawing.OverlayType.POLYGON,\n                google.maps.drawing.OverlayType.RECTANGLE\n              ]\n            },\n            polygonOptions: {\n              clickable: true,\n              draggable: true,\n              editable: true,\n              fillColor: '#00b96e',\n              fillOpacity: 0.5,\n\n            },\n            rectangleOptions: {\n              clickable: true,\n              draggable: true,\n              editable: true,\n              fillColor: '#ffff00',\n              fillOpacity: 0.5,\n            }\n          });\n\n\n          drawingManager.setMap(map);\n\n          google.maps.event.addListener(drawingManager, 'polygoncomplete', event => {\n\n            event.getPath().getLength();\n            google.maps.event.addListener(event.getPath(), 'insert_at', () => {\n              const len = event.getPath().getLength();\n              for (let i = 0; i < len; i++) {\n                // console.log(event.getPath().getAt(i).toUrlValue(5));\n              }\n            });\n            google.maps.event.addListener(event.getPath(), 'set_at', () => {\n              const len = event.getPath().getLength();\n              for (let i = 0; i < len; i++) {\n                // console.log(event.getPath().getAt(i).toUrlValue(5));\n              }\n            });\n          });\n\n          google.maps.event.addListener(drawingManager, 'overlaycomplete', event => {\n\n            this.parameter.overlay = this.getPolygonCoords(event.overlay);\n            this.model.status = '1';\n            this.localityOpen.nativeElement.click();\n\n            // this.swal.prompt({\n            //   text:''\n            // }).then(f=>{\n\n            //   this.shapeName = f;\n\n            //   var locality = {\n            //     name_en: this.shapeName,\n            //     name_es: this.shapeName,\n            //     coordinates: this.getPolygonCoords(event.overlay),\n            //     poly_coordinates: JSON.stringify(this.getPolygonCoords(event.overlay)),\n            //     status:'1',\n            //     city_id:this.parameter.city_id,\n            //     overlay: event.overlay\n            //   };\n            //   //this.all_overlays.push(locality);\n            //   //this.all_overlays = this.all_overlays;\n            //   //this.all_overlays.splice(0,2);\n            //   //this.len = this.all_overlays.length;\n            //   delete locality.overlay;\n\n            //   this.admin.postDataApi('addLocality', locality).subscribe(\n            //       r => {\n            //         this.all_overlays.push(r.data);\n            //         //this.getLocalities(this.parameter.city_id,'');\n            //       });\n\n            // });\n            // this.all_overlays = this.all_overlays;\n\n\n\n            if (event.type !== google.maps.drawing.OverlayType.MARKER) {\n              drawingManager.setDrawingMode(null);\n              // Write code to select the newly selected object.\n\n              const newShape = event.overlay;\n              newShape.type = event.type;\n              google.maps.event.addListener(newShape, 'click', () => {\n                this.setSelection(newShape);\n              });\n\n              this.setSelection(newShape);\n\n            }\n          });\n\n\n          // var centerControlDiv = document.createElement('div');\n          //    var centerControl = new centerControl(centerControlDiv, map);\n          // var centerControl = this.CenterControl(centerControlDiv, map);\n\n          // centerControlDiv.index = 1;\n          // map.controls[google.maps.ControlPosition.BOTTOM_CENTER].push(centerControlDiv);\n        });\n      }\n    });\n  }\n\n  editLocality(id: string, name_en: string, name_es: string, price_per_sqft: string, status: string, poly_coordinates: string) {\n    this.model.id = id;\n    this.model.name_en = name_en;\n    this.model.name_es = name_es;\n    this.model.price_per_sqft = price_per_sqft;\n    this.model.status = status;\n    this.parameter.overlay = JSON.parse(poly_coordinates);\n    this.localityOpen.nativeElement.click();\n  }\n\n  checkIfLocalitySpanishNameEntered(name_en: string, name_es: string, price_per_sqft: string) {\n    const self = this;\n    if (name_es === '') {\n      swal({\n        text: this.translate.instant('message.error.saveEngCountryName'),\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: this.constant.confirmButtonColor,\n        cancelButtonColor: this.constant.cancelButtonColor,\n        confirmButtonText: 'Yes'\n      }).then((result) => {\n        if (result.value) {\n          this.addLocality(name_en, name_en, price_per_sqft);\n        }\n      });\n    } else {\n      self.addLocality(name_en, name_es, price_per_sqft);\n    }\n  }\n\n  closeModal() {\n    this.model = new Locality();\n    this.localityClose.nativeElement.click();\n    this.getLocalities(this.parameter.city_id, '');\n  }\n\n  addLocality(name_en: string, name_es: string, price_per_sqft: string) {\n    // this.localityClose.nativeElement.click();\n    this.isaddNewLocality = false;\n    if(this.model.id){\n      this.isaddNewLocality = false;\n    }else{\n      this.isaddNewLocality = true;\n    }\n    this.spinner.show();\n    const locality = {\n      name_en: name_en,\n      name_es: name_es,\n      price_per_sqft: price_per_sqft,\n      coordinates: this.parameter.overlay,\n      poly_coordinates: JSON.stringify(this.parameter.overlay),\n      status: this.model.status,\n      city_id: this.parameter.city_id,\n      overlay: this.parameter.overlay,\n      id: this.model.id ? this.model.id : ''\n    };\n    delete locality.overlay;\n    this.spinner.show();\n    this.admin.postDataApi('addLocality', locality).subscribe(\n      r => {\n        this.spinner.hide();\n        this.closeModal();\n        this.init();\n      }, error => {\n        this.spinner.hide();\n      });\n  }\n\n\n  getPolygonCoords(newShape) {\n    const coordinates_array = [];\n    const len = newShape.getPath().getLength();\n    for (let i = 0; i < len; i++) {\n      coordinates_array.push(newShape.getPath().getAt(i).toUrlValue(6));\n    }\n    return coordinates_array;\n  }\n\n  getLatLngFromString(ll) {\n    const latlng = ll.split(/, ?/);\n    return new google.maps.LatLng(parseFloat(latlng[0]), parseFloat(latlng[1]));\n  }\n\n  placeMarker(location) {\n    const marker = new google.maps.Marker({\n      position: location,\n      map: this.map\n    });\n\n  }\n\n  clearSelection() {\n    if (this.selectedShape) {\n      this.selectedShape.setEditable(false);\n      this.selectedShape = null;\n    }\n  }\n\n  setSelection(shape, locality = '') {\n    this.clearSelection();\n    this.selectedLocality = locality;\n\n    this.selectedShape = shape;\n    shape.setEditable(true);\n    const coords = this.getPolygonCoords(shape);\n\n    let latlng = coords[0].split(',');\n    if (this.latitude && this.longitude) {\n      latlng = [this.latitude, this.longitude];\n    }\n    const coord = new google.maps.LatLng(parseFloat(latlng[0]), parseFloat(latlng[1]));\n\n    // var center = new google.maps.LatLngBounds(shape).getCenter();\n    // let center = shape.my_getBounds().getCenter()\n\n    this.map.setCenter(coord);\n\n    // google.maps.event.addListener(selectedShape.getPath(), 'insert_at', getPolygonCoords(shape));\n    // google.maps.event.addListener(shape.getPath(), 'set_at', this.getPolygonCoords(shape));\n  }\n\n  setSelectionNonEditable(shape, locality = '') {\n    this.clearSelection();\n    this.selectedLocality = locality;\n\n    this.selectedShape = shape;\n    shape.setEditable(false);\n    const coords = this.getPolygonCoords(shape);\n\n    const latlng = coords[0].split(',');\n    const coord = new google.maps.LatLng(parseFloat(latlng[0]), parseFloat(latlng[1]));\n\n\n    // var center = new google.maps.LatLngBounds(shape).getCenter();\n    // let center = shape.my_getBounds().getCenter()\n\n    this.map.setCenter(coord);\n\n    // google.maps.event.addListener(selectedShape.getPath(), 'insert_at', getPolygonCoords(shape));\n    // google.maps.event.addListener(shape.getPath(), 'set_at', this.getPolygonCoords(shape));\n  }\n\n  deleteSelectedShape() {\n    if (this.selectedShape) {\n      this.selectedShape.setMap(null);\n    }\n  }\n\n  deleteAllShape() {\n    for (let i = 0; i < this.all_overlays.length; i++) {\n      this.all_overlays[i].overlay.setMap(null);\n    }\n    this.all_overlays = [];\n  }\n\n  getPolygons() {\n    this.all_overlays.forEach((item, count) => {\n      this.getPolygonCoords(item.overlay.overlay);\n    });\n  }\n\n  blockUnblockLocality(locality, index, type) {\n    this.parameter.index = index;\n    switch (type) {\n      case 0:\n        this.parameter.text = this.translate.instant('message.error.wantToBlockLocality');\n        this.parameter.successText = this.translate.instant('message.success.blockedSuccessfully');\n        break;\n      case 1:\n        this.parameter.text = this.translate.instant('message.error.wantToUnblockLocality');\n        this.parameter.successText = this.translate.instant('message.success.unblockedSuccessfully');\n        break;\n    }\n\n    swal({\n      html: this.translate.instant('message.error.areYouSure') + '<br>' + this.parameter.text,\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: this.constant.confirmButtonColor,\n      cancelButtonColor: this.constant.cancelButtonColor,\n      confirmButtonText: 'Yes'\n    }).then((result) => {\n      if (result.value) {\n        this.removeSelection(locality, index, type);\n        swal(this.translate.instant('swal.success'), this.parameter.successText, 'success');\n      }\n    });\n  }\n\n  deleteLocality(locality, index: number) {\n    this.parameter.index = index;\n    this.parameter.text = this.translate.instant('message.error.wantToDeleteLocality');\n    swal({\n      html: this.translate.instant('message.error.areYouSure') + '<br>' + this.parameter.text,\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: this.constant.confirmButtonColor,\n      cancelButtonColor: this.constant.cancelButtonColor,\n      confirmButtonText: 'Yes'\n    }).then((result) => {\n      if (result.value) {\n        this.admin.postDataApi('deleteLocality', { id: locality.id }).subscribe(\n          r => {\n            this.parameter.localities.splice(index, 1);\n            swal(this.translate.instant('swal.success'), this.translate.instant('message.success.deletedSuccessfully'), 'success');\n          });\n      }\n    });\n  }\n\n  removeSelection(locality, index, status) {\n    locality.status = status;\n    // this.all_overlays.splice(index,1);\n    // locality.overlay.setMap(null);\n    delete locality.overlay;\n    this.admin.postDataApi('addLocality', locality).subscribe(\n      r => {\n        // this.all_overlays.push(r.data);\n        // this.getLocalities(this.parameter.city_id,'');\n      });\n  }\n\n  upadteSelection(locality, index) {\n\n  }\n\n  markLocalityFeatured(index, locality_id, flag) {\n    let title = '';\n    if (flag === 1) {\n      title = this.translate.instant('message.error.wantToFeatureLocality');\n    } else {\n      title = this.translate.instant('message.error.wantToUnFeatureLocality');\n    }\n    swal({\n      html: this.translate.instant('message.error.areYouSure') + '<br>' + title,\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: this.constant.confirmButtonColor,\n      cancelButtonColor: this.constant.cancelButtonColor,\n      confirmButtonText: 'Yes'\n    }).then((result) => {\n      if (result.value) {\n        this.admin.postDataApi('markLocalityFeatured', { locality_id: locality_id, flag: flag }).subscribe(\n          r => {\n            this.parameter.localities[index] = r.data;\n            swal(this.translate.instant('swal.success'), this.parameter.successText, 'success');\n          });\n      }\n    });\n  }\n\n  getLatLan(address: string) {\n\n    // this.admin.googleApi('https://maps.googleapis.com/maps/api/geocode/json?address=' + address)\n    //   .subscribe(\n    //     success => {\n    //       console.log('-----', success);\n    //     }, error => {\n    //       this.spinner.hide();\n    //     });\n\n    this.loader.load().then(() => {\n      const geocoder = new google.maps.Geocoder();\n      return Observable.create(observer => {\n        geocoder.geocode({ 'address': address }, function (results, status) {\n          if (status === google.maps.GeocoderStatus.OK) {\n            observer.next(results[0].geometry.location);\n            observer.complete();\n          } else {\n            observer.next({});\n            observer.complete();\n          }\n        });\n      });\n      // const geocoder = new google.maps.Geocode();\n    });\n  }\n\n  loadPlaces() {\n    // load Places Autocomplete\n    this.loader.load().then(() => {\n      const autocomplete = new google.maps.places.Autocomplete(this.searchElementRef.nativeElement, {\n        types: []\n      });\n      autocomplete.addListener('place_changed', () => {\n        this.ngZone.run(() => {\n          // get the place result\n          // const place: google.maps.places.PlaceResult = autocomplete.getPlace();\n          const place = autocomplete.getPlace();\n          // verify result\n          if (place.geometry === undefined || place.geometry === null) {\n            return;\n          }\n\n          // set latitude, longitude and zoom\n          this.latitude = place.geometry.location.lat();\n          this.longitude = place.geometry.location.lng();\n          this.zoom = 12;\n\n          if (place.formatted_address) {\n            // console.log('==', place.formatted_address);\n          }\n\n          const map = new google.maps.Map(this.mapDiv.nativeElement, {\n            center: {\n              lat: this.latitude,\n              lng: this.longitude\n            },\n            zoom: 18\n          });\n          this.map = map;\n          this.init();\n        });\n      });\n    });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9zZXR0aW5ncy9sb2NhdGlvbi9sb2NhdGlvbi5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"<div class=\\\"container-fluid\\\">\\n  <div class=\\\"breadcrumb-group\\\">\\n    <h5>{{'settings.label' | translate}}</h5>\\n    <nav class=\\\"breadcrumb\\\">\\n      <a class=\\\"breadcrumb-item\\\">{{'settings.home' | translate}}</a>\\n      <a class=\\\"breadcrumb-item\\\">{{'settings.label' | translate}}</a>\\n      <span class=\\\"breadcrumb-item active\\\">{{'location.location' | translate}}</span>\\n    </nav>\\n  </div>\\n\\n  <div class=\\\"white-bg\\\">\\n    <div class=\\\"page-title\\\">\\n      <h3>{{'location.location' | translate}}</h3>\\n    </div>\\n\\n    <!-- add country -->\\n    <div class=\\\"form-outer\\\">\\n      <div class=\\\"inline-form-group\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <label><strong>{{'filters.location.country' | translate}}</strong></label>\\n          </div>\\n\\n          <div class=\\\"col-xl-3 col-lg-3 col-md-3 col-sm-6 col-6 table-search\\\">\\n            <div class=\\\"form-group marginB0\\\">\\n              <div class=\\\"searh-2\\\">\\n                <input autocomplete=\\\"off\\\" type=\\\"text\\\" name=\\\"keyword\\\" [(ngModel)]=\\\"searchCountry\\\"\\n                  (keyup.enter)=\\\"getCountries(searchCountry, 1)\\\"\\n                  placeholder=\\\"{{'addForm.placeholder.searchHere' | translate}}\\\">\\n                <button (click)=\\\"getCountries(searchCountry, 1)\\\"><i class=\\\"fa fa-search\\\"></i></button>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-xl-9 col-lg-3 col-md-3 col-sm-6 col-6\\\">\\n            <div class=\\\"form-group marginB0\\\">\\n              <div class=\\\"btn-cont text-right\\\">\\n                <a *ngIf=\\\"admin?.admin_acl['Settings']?.can_create==1\\\" class=\\\"btn btn-primary\\\" href=\\\"javascript://\\\"\\n                  (click)=\\\"openCountryModal(addCountryModal, '', '', '', '1', -1)\\\">{{'location.addNew' | translate}}</a>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n        <hr>\\n      </div>\\n    </div>\\n\\n    <!-- list country -->\\n    <div class=\\\"tabel-section padding40 paddingT0\\\">\\n      <div class=\\\"table-responsive\\\">\\n        <table class=\\\"table table-striped\\\">\\n          <tr>\\n            <th style=\\\"width:40%; text-align:left;\\\">{{'table.th.countryEn' | translate}}</th>\\n            <th style=\\\"width:40%; text-align:left;\\\">{{'table.th.countryEs' | translate}}</th>\\n            <th style=\\\"width:20%\\\">{{'table.th.actions.label' | translate}}</th>\\n          </tr>\\n          <tr *ngFor=\\\"let country of parameter.countries1; let c=index\\\">\\n            <td class=\\\"text-left\\\">\\n              {{country.name_en}}\\n            </td>\\n            <td class=\\\"text-left\\\">\\n              {{country.name_es}}\\n            </td>\\n            <td>\\n              <button title=\\\"{{'table.title.editDetails' | translate}}\\\"\\n                [disabled]=\\\"admin?.admin_acl['Settings']?.can_update==0\\\"\\n                (click)=\\\"openCountryModal(addCountryModal, country.id, country.name_en, country.name_es, country.status, c)\\\"\\n                class=\\\"action-icon\\\"><img src=\\\"assets/img/edit.png\\\" alt=\\\"img\\\"></button>\\n\\n              <!-- status = 1 means unblocked -->\\n              <button [disabled]=\\\"admin?.admin_acl['Settings']?.can_delete==0\\\"\\n                (click)=\\\"blockUnblockCountry(country.id, country.name_en, country.name_es, country.status==1?0:1, c)\\\"\\n                title=\\\"{{country.status==1 ? ('table.title.block' | translate) : ('table.title.unblock' | translate)}}\\\"\\n                [ngClass]=\\\"{'unblock-bg':country.status==0}\\\" class=\\\"action-icon\\\"><img src=\\\"assets/img/block.png\\\"\\n                  alt=\\\"img\\\">\\n              </button>\\n              <!-- <button [disabled]=\\\"admin?.admin_acl['Project Management']?.can_purge==0\\\"\\n                      (click)=\\\"deletePopup(country, i);\\\" class=\\\"action-icon\\\" title=\\\"{{'table.title.delete' | translate}}\\\"><img\\n                        src=\\\"assets/img/ic_delete.png\\\" alt=\\\"img\\\"></button> -->\\n              <button [disabled]=\\\"admin?.admin_acl['Settings']?.can_delete==0\\\"\\n                (click)=\\\"deletePopup(country, c, 'Country')\\\" class=\\\"action-icon\\\"\\n                title=\\\"{{'table.title.delete' | translate}}\\\"><img src=\\\"assets/img/ic_delete.png\\\" alt=\\\"img\\\">\\n              </button>\\n            </td>\\n          </tr>\\n        </table>\\n\\n        <div class=\\\"error-border\\\" *ngIf=\\\"parameter.countries1?.length == 0\\\">\\n          <p class=\\\"show-not-found\\\">\\n            {{'message.error.noCountryFound' | translate}}\\n          </p>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- add state -->\\n    <div class=\\\"form-outer marginT15\\\">\\n      <div class=\\\"inline-form-group\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <label><strong>{{'filters.location.state' | translate}}</strong></label>\\n            <hr>\\n          </div>\\n          <div class=\\\"col-lg-3 col-md-3 col-sm-6 col-6\\\">\\n            <div class=\\\"form-group marginB0\\\">\\n              <label>{{'filters.location.country' | translate}}</label>\\n              <select class=\\\"form-control\\\" (change)=\\\"getStates($event.target.value, '', 1)\\\">\\n                <option *ngFor=\\\"let country of parameter.countries2\\\" value=\\\"{{country.id}}\\\">{{country.name_en}}</option>\\n              </select>\\n            </div>\\n          </div>\\n          <div class=\\\"col-lg-3 col-md-3 col-sm-6 col-6 table-search\\\">\\n            <div class=\\\"form-group marginB0\\\">\\n              <label>{{'filters.location.search' | translate}}</label>\\n              <div class=\\\"searh-2\\\">\\n                <input autocomplete=\\\"off\\\" type=\\\"text\\\" [(ngModel)]=\\\"searchState\\\"\\n                  (keyup.enter)=\\\"getStates(parameter.country_id, searchState, 1)\\\" name=\\\"keyword\\\"\\n                  placeholder=\\\"{{'addForm.placeholder.searchHere' | translate}}\\\">\\n                <button (click)=\\\"getStates(parameter.country_id, searchState, 1)\\\"><i class=\\\"fa fa-search\\\"></i></button>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-lg-3 col-md-3 col-sm-6 col-6\\\"></div>\\n          <div class=\\\"col-lg-3 col-md-3 col-sm-6 col-6\\\">\\n            <div class=\\\"form-group marginB0\\\">\\n              <label style=\\\"display: block;\\\">&nbsp;</label>\\n              <div class=\\\"btn-cont pull-right\\\">\\n                <a *ngIf=\\\"admin?.admin_acl['Settings']?.can_create==1\\\" class=\\\"btn btn-primary\\\" href=\\\"javascript://\\\"\\n                  (click)=\\\"openStateModal(addStateModal, '', '', '', '', '1', -1)\\\">{{'location.addNew' | translate}}</a>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- list state -->\\n    <div class=\\\"tabel-section padding40 paddingT0\\\">\\n      <div class=\\\"table-responsive\\\">\\n        <table class=\\\"table table-striped\\\">\\n          <tr>\\n            <th style=\\\"width:40%; text-align:left;\\\">{{'table.th.stateEn' | translate}}</th>\\n            <th style=\\\"width:40%; text-align:left;\\\">{{'table.th.stateEs' | translate}}</th>\\n            <th style=\\\"width:20%\\\">{{'table.th.actions.label' | translate}}</th>\\n          </tr>\\n          <tr *ngFor=\\\"let state of parameter.states1; let s = index\\\">\\n            <td class=\\\"text-left\\\">\\n              {{state.name_en}}\\n            </td>\\n            <td class=\\\"text-left\\\">\\n              {{state.name_es}}\\n            </td>\\n            <td>\\n              <button title=\\\"{{'table.title.editDetails' | translate}}\\\"\\n                [disabled]=\\\"admin?.admin_acl['Settings']?.can_update==0\\\"\\n                (click)=\\\"openStateModal(addStateModal, state.country_id, state.id, state.name_en, state.name_es, state.status, s)\\\"\\n                class=\\\"action-icon\\\"><img src=\\\"assets/img/edit.png\\\" alt=\\\"img\\\"></button>\\n\\n              <!-- status = 1 means unblocked -->\\n              <button [disabled]=\\\"admin?.admin_acl['Settings']?.can_delete==0\\\"\\n                (click)=\\\"blockUnblockState(state.country_id, state.name_en, state.name_es, state.status==1?0:1, state.id, s)\\\"\\n                title=\\\"{{state.status==1 ? ('table.title.block' | translate) : ('table.title.unblock' | translate)}}\\\"\\n                [ngClass]=\\\"{'unblock-bg':state.status==0}\\\" class=\\\"action-icon\\\"><img src=\\\"assets/img/block.png\\\"\\n                  alt=\\\"img\\\">\\n              </button>\\n\\n\\n              <button [disabled]=\\\"admin?.admin_acl['Settings']?.can_delete==0\\\" (click)=\\\"deletePopup(state,s,'State')\\\"\\n                class=\\\"action-icon\\\" title=\\\"{{'table.title.delete' | translate}}\\\"><img src=\\\"assets/img/ic_delete.png\\\"\\n                  alt=\\\"img\\\">\\n              </button>\\n            </td>\\n          </tr>\\n        </table>\\n\\n        <div class=\\\"error-border\\\" *ngIf=\\\"parameter.states1?.length == 0\\\">\\n          <p class=\\\"show-not-found\\\">\\n            {{'message.error.noStateFound' | translate}}\\n          </p>\\n        </div>\\n      </div>\\n    </div>\\n\\n\\n    <!-- add city -->\\n    <div class=\\\"form-outer marginT15\\\">\\n      <div class=\\\"inline-form-group\\\">\\n        <div class=\\\"row\\\">\\n          <div class=\\\"col-md-12\\\">\\n            <label><strong>{{'filters.location.city' | translate}}</strong></label>\\n            <hr>\\n          </div>\\n          <div class=\\\"col-lg-3 col-md-3 col-sm-6 col-6\\\">\\n            <div class=\\\"form-group marginB0\\\">\\n              <label>{{'filters.location.country' | translate}}</label>\\n              <select class=\\\"form-control\\\" (change)=\\\"getStates($event.target.value, '', 2)\\\">\\n                <option *ngFor=\\\"let country of parameter.countries3\\\" value=\\\"{{country.id}}\\\">{{country.name_en}}</option>\\n              </select>\\n            </div>\\n          </div>\\n          <div class=\\\"col-lg-3 col-md-3 col-sm-6 col-6\\\">\\n            <div class=\\\"form-group marginB0\\\">\\n              <label>{{'filters.location.state' | translate}}</label>\\n              <select class=\\\"form-control\\\" (change)=\\\"getCities($event.target.value, '', 1)\\\">\\n                <option *ngFor=\\\"let state of parameter.states2\\\" value=\\\"{{state.id}}\\\">{{state.name_en}}</option>\\n              </select>\\n            </div>\\n          </div>\\n          <div class=\\\"col-lg-3 col-md-3 col-sm-6 col-6 table-search\\\">\\n            <div class=\\\"form-group marginB0\\\">\\n              <label>{{'filters.location.search' | translate}}</label>\\n              <div class=\\\"searh-2\\\">\\n                <input autocomplete=\\\"off\\\" type=\\\"text\\\" [(ngModel)]=\\\"searchCity\\\"\\n                  (keyup.enter)=\\\"getCities(parameter.state_id, searchCity, 1)\\\" name=\\\"keyword\\\"\\n                  placeholder=\\\"{{'addForm.placeholder.searchHere' | translate}}\\\">\\n                <button (click)=\\\"getCities(parameter.state_id, searchCity, 1)\\\"><i class=\\\"fa fa-search\\\"></i></button>\\n              </div>\\n            </div>\\n          </div>\\n          <div class=\\\"col-lg-3 col-md-3 col-sm-6 col-6\\\">\\n            <div class=\\\"form-group marginB0\\\">\\n              <label style=\\\"display: block;\\\">&nbsp;</label>\\n              <div class=\\\"btn-cont pull-right\\\">\\n                <a *ngIf=\\\"admin?.admin_acl['Settings']?.can_create==1\\\" class=\\\"btn btn-primary\\\" href=\\\"javascript://\\\"\\n                  (click)=\\\"openCityModal(addCityModal, '', '', '', '', '', 1, -1)\\\">{{'location.addNew' | translate}}</a>\\n              </div>\\n            </div>\\n          </div>\\n        </div>\\n      </div>\\n    </div>\\n\\n    <!-- list city -->\\n    <div class=\\\"tabel-section padding40 paddingT0\\\">\\n      <div class=\\\"table-responsive\\\">\\n        <table class=\\\"table table-striped\\\">\\n          <tr>\\n            <th style=\\\"width:40%; text-align:left;\\\">{{'table.th.cityEn' | translate}}</th>\\n            <th style=\\\"width:40%; text-align:left;\\\">{{'table.th.cityEs' | translate}}</th>\\n            <th style=\\\"width:20%\\\">{{'table.th.actions.label' | translate}}</th>\\n          </tr>\\n          <tr *ngFor=\\\"let city of parameter.cities1; let ci=index\\\">\\n            <td class=\\\"text-left\\\">\\n              {{city.name_en}}\\n            </td>\\n            <td class=\\\"text-left\\\">\\n              {{city.name_es}}\\n            </td>\\n            <td>\\n              <button title=\\\"{{'table.title.editDetails' | translate}}\\\"\\n                [disabled]=\\\"admin?.admin_acl['Settings']?.can_update==0\\\"\\n                (click)=\\\"openCityModal(addCityModal, city.country_id, city.state_id, city.id, city.name_en, city.name_es, city.status, ci)\\\"\\n                class=\\\"action-icon\\\"><img src=\\\"assets/img/edit.png\\\" alt=\\\"img\\\"></button>\\n\\n              <!-- status = 1 means unblocked -->\\n              <button [disabled]=\\\"admin?.admin_acl['Settings']?.can_delete==0\\\"\\n                (click)=\\\"blockUnblockCity(city.state_id, city.name_en, city.name_es, city.status==1?0:1, city.id, ci)\\\"\\n                title=\\\"{{city.status==1 ? ('table.title.block' | translate) : ('table.title.unblock' | translate)}}\\\"\\n                [ngClass]=\\\"{'unblock-bg':city.status==0}\\\" class=\\\"action-icon\\\"><img src=\\\"assets/img/block.png\\\" alt=\\\"img\\\">\\n              </button>\\n\\n              <button [disabled]=\\\"admin?.admin_acl['Settings']?.can_delete==0\\\" (click)=\\\"deletePopup(city,ci,'City')\\\"\\n                class=\\\"action-icon\\\" title=\\\"{{'table.title.delete' | translate}}\\\">\\n                <img src=\\\"assets/img/ic_delete.png\\\" alt=\\\"img\\\">\\n              </button>\\n            </td>\\n          </tr>\\n        </table>\\n\\n        <div class=\\\"error-border\\\" *ngIf=\\\"parameter.states2?.length == 0; else cityNotFound\\\">\\n          <p class=\\\"show-not-found\\\">\\n            {{'message.error.noStateFound' | translate}}\\n          </p>\\n        </div>\\n\\n        <ng-template #cityNotFound>\\n          <div class=\\\"error-border\\\" *ngIf=\\\"parameter.cities1?.length == 0\\\">\\n            <p class=\\\"show-not-found\\\">\\n              {{'message.error.noCityFound' | translate}}\\n            </p>\\n          </div>\\n        </ng-template>\\n\\n      </div>\\n    </div>\\n\\n  </div>\\n</div>\\n<!--content end-->\\n\\n\\n<!-- add country modal -->\\n<ng-template #addCountryModal>\\n  <div class=\\\"modal-content\\\">\\n    <div class=\\\"modal-header my-modal-header\\\">\\n      <h4 class=\\\"modal-title\\\">{{'location.addCountry' | translate}}</h4>\\n      <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n    </div>\\n    <form class=\\\"form-horizontal my-modal-form\\\" role=\\\"form\\\" novalidate #addForm=\\\"ngForm\\\"\\n      (ngSubmit)=\\\"checkIfCountrySpanishNameEntered(addForm.value.name_en, addForm.value.name_es)\\\">\\n      <div class=\\\"modal-body my-modal-body\\\">\\n        <div class=\\\"form-group\\\">\\n          <input autocomplete=\\\"off\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\n            placeholder=\\\"{{'addForm.placeholder.countryEn' | translate}}\\\" id=\\\"name_en\\\" required\\n            [(ngModel)]=\\\"location.countryModel.name_en\\\" name=\\\"name_en\\\" #name_en=\\\"ngModel\\\">\\n          <!-- <div *ngIf=\\\"name_en.errors && (name_en.dirty || name_en.touched)\\\" class=\\\"show-not-found\\\">\\n              <div [hidden]=\\\"!name_en.errors.required\\\">\\n                {{constant.errorMsg.COUNTRY_NAME_REQUIRED}}\\n              </div>\\n          </div> -->\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <input autocomplete=\\\"off\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\n            placeholder=\\\"{{'addForm.placeholder.countryEs' | translate}}\\\" [(ngModel)]=\\\"location.countryModel.name_es\\\"\\n            name=\\\"name_es\\\">\\n        </div>\\n      </div>\\n      <div class=\\\"modal-footer btn-cont\\\">\\n        <button type=\\\"submit\\\" [disabled]=\\\"admin?.admin_acl['Settings']?.can_create==0 || addForm.invalid\\\"\\n          class=\\\"btn btn-primary-new\\\">{{'addForm.submit' | translate}}</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">{{'addForm.close' |\\n          translate}}</button>\\n      </div>\\n    </form>\\n  </div>\\n</ng-template>\\n\\n\\n<!-- add state modal -->\\n<ng-template #addStateModal>\\n  <div class=\\\"modal-content\\\">\\n    <div class=\\\"modal-header my-modal-header\\\">\\n      <h4 class=\\\"modal-title\\\">{{'location.addState' | translate}}</h4>\\n      <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n    </div>\\n    <form class=\\\"form-horizontal my-modal-form\\\" role=\\\"form\\\" novalidate #addForm=\\\"ngForm\\\"\\n      (ngSubmit)=\\\"checkIfStateSpanishNameEntered(addForm.value.country_id, addForm.value.name_en, addForm.value.name_es)\\\">\\n      <div class=\\\"modal-body my-modal-body\\\">\\n        <div class=\\\"form-group\\\" *ngIf=\\\"location.stateModel.state_id == ''\\\">\\n          <select title=\\\"{{'filters.location.selectCountry' | translate}}\\\" id=\\\"country_id\\\" required\\n            [(ngModel)]=\\\"location.stateModel.country_id\\\" name=\\\"country_id\\\" #country_id=\\\"ngModel\\\" class=\\\"form-control\\\"\\n            required>\\n            <option value=\\\"\\\" disabled>{{'filters.location.selectCountry' | translate}}</option>\\n            <option *ngFor=\\\"let c of parameter.countries4\\\" value=\\\"{{c.id}}\\\">{{c.name}}</option>\\n          </select>\\n          <!-- <div *ngIf=\\\"country_id.errors && (country_id.dirty || country_id.touched)\\\" class=\\\"show-not-found\\\">\\n            <div [hidden]=\\\"!country_id.errors.required\\\">\\n              {{constant.errorMsg.COUNTRY_NAME_REQUIRED}}\\n            </div>\\n          </div> -->\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <input autocomplete=\\\"off\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\n            placeholder=\\\"{{'addForm.placeholder.stateEn' | translate}}\\\" id=\\\"name_en\\\" required\\n            [(ngModel)]=\\\"location.stateModel.name_en\\\" name=\\\"name_en\\\" #name_en=\\\"ngModel\\\">\\n          <!-- <div *ngIf=\\\"name_en.errors && (name_en.dirty || name_en.touched)\\\" class=\\\"show-not-found\\\">\\n              <div [hidden]=\\\"!name_en.errors.required\\\">\\n                {{constant.errorMsg.STATE_NAME_REQUIRED}}\\n              </div>\\n          </div> -->\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <input autocomplete=\\\"off\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\n            placeholder=\\\"{{'addForm.placeholder.stateEs' | translate}}\\\" [(ngModel)]=\\\"location.stateModel.name_es\\\"\\n            name=\\\"name_es\\\">\\n        </div>\\n      </div>\\n      <div class=\\\"modal-footer btn-cont\\\">\\n        <button type=\\\"submit\\\" [disabled]=\\\"admin?.admin_acl['Settings']?.can_create==0 || addForm.invalid\\\"\\n          class=\\\"btn btn-primary-new\\\">{{'addForm.submit' | translate}}</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">{{'addForm.close' |\\n          translate}}</button>\\n      </div>\\n    </form>\\n  </div>\\n</ng-template>\\n\\n\\n<!-- add city modal -->\\n<ng-template #addCityModal>\\n  <div class=\\\"modal-content\\\">\\n    <div class=\\\"modal-header my-modal-header\\\">\\n      <h4 class=\\\"modal-title\\\">{{'location.addCity' | translate}}</h4>\\n      <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n    </div>\\n    <form class=\\\"form-horizontal my-modal-form\\\" role=\\\"form\\\" novalidate #addForm=\\\"ngForm\\\"\\n      (ngSubmit)=\\\"checkIfCitySpanishNameEntered(addForm.value.state_id, addForm.value.name_en, addForm.value.name_es)\\\">\\n      <div class=\\\"modal-body my-modal-body\\\">\\n        <div class=\\\"form-group\\\" *ngIf=\\\"location.cityModel.city_id == ''\\\">\\n          <select title=\\\"{{'filters.location.selectCountry' | translate}}\\\" id=\\\"country_id\\\"\\n            (change)=\\\"getStates($event.target.value, '', 3)\\\" required [(ngModel)]=\\\"location.cityModel.country_id\\\"\\n            name=\\\"country_id\\\" #country_id=\\\"ngModel\\\" class=\\\"form-control\\\" required>\\n            <option value=\\\"\\\" disabled>{{'filters.location.selectCountry' | translate}}</option>\\n            <option *ngFor=\\\"let c of parameter.countries5\\\" value=\\\"{{c.id}}\\\">{{c.name}}</option>\\n          </select>\\n          <!-- <div *ngIf=\\\"country_id.errors && (country_id.dirty || country_id.touched)\\\" class=\\\"show-not-found\\\">\\n            <div [hidden]=\\\"!country_id.errors.required\\\">\\n              {{constant.errorMsg.COUNTRY_NAME_REQUIRED}}\\n            </div>\\n          </div> -->\\n        </div>\\n        <div class=\\\"form-group\\\" *ngIf=\\\"location.cityModel.city_id == ''\\\">\\n          <select title=\\\"{{'filters.location.selectState' | translate}}\\\" id=\\\"state_id\\\" required\\n            [(ngModel)]=\\\"location.cityModel.state_id\\\" name=\\\"state_id\\\" #state_id=\\\"ngModel\\\" class=\\\"form-control\\\" required>\\n            <option value=\\\"\\\" disabled>{{'filters.location.selectState' | translate}}</option>\\n            <option *ngFor=\\\"let s of parameter.states3\\\" value=\\\"{{s.id}}\\\">{{s.name}}</option>\\n          </select>\\n          <!-- <div *ngIf=\\\"state_id.errors && (state_id.dirty || state_id.touched)\\\" class=\\\"show-not-found\\\">\\n            <div [hidden]=\\\"!state_id.errors.required\\\">\\n              {{constant.errorMsg.STATE_NAME_REQUIRED}}\\n            </div>\\n          </div> -->\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <input autocomplete=\\\"off\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\n            placeholder=\\\"{{'addForm.placeholder.cityEn' | translate}}\\\" id=\\\"name_en\\\" required\\n            [(ngModel)]=\\\"location.cityModel.name_en\\\" name=\\\"name_en\\\" #name_en=\\\"ngModel\\\">\\n          <!-- <div *ngIf=\\\"name_en.errors && (name_en.dirty || name_en.touched)\\\" class=\\\"show-not-found\\\">\\n              <div [hidden]=\\\"!name_en.errors.required\\\">\\n                {{constant.errorMsg.CITY_NAME_REQUIRED}}\\n              </div>\\n          </div> -->\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <input autocomplete=\\\"off\\\" type=\\\"text\\\" class=\\\"form-control\\\"\\n            placeholder=\\\"{{'addForm.placeholder.cityEs' | translate}}\\\" [(ngModel)]=\\\"location.cityModel.name_es\\\"\\n            name=\\\"name_es\\\">\\n        </div>\\n      </div>\\n      <div class=\\\"modal-footer btn-cont\\\">\\n        <button type=\\\"submit\\\" [disabled]=\\\"admin?.admin_acl['Settings']?.can_create==0 || addForm.invalid\\\"\\n          class=\\\"btn btn-primary-new\\\">{{'addForm.submit' | translate}}</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">{{'addForm.close' |\\n          translate}}</button>\\n      </div>\\n    </form>\\n  </div>\\n</ng-template>\"","import { Component, OnInit, TemplateRef } from '@angular/core';\nimport { AdminService } from 'src/app/services/admin.service';\nimport { IProperty } from 'src/app/common/property';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { Location } from 'src/app/models/location.model';\nimport { Constant } from 'src/app/common/constants';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { TranslateService } from '@ngx-translate/core';\nimport { value } from 'numeral';\ndeclare let swal: any;\n\n@Component({\n  selector: 'app-location',\n  templateUrl: './location.component.html',\n  styleUrls: ['./location.component.css'],\n  providers: [Location, Constant]\n})\n\nexport class LocationComponent implements OnInit {\n\n  public parameter: IProperty = {};\n  public modalRef: BsModalRef;\n  items: any = [];\n  searchCountry: string;\n  searchState: string;\n  searchCity: string;\n\n  constructor(private location: Location, private constant: Constant,\n    private modalService: BsModalService, public admin: AdminService, private spinner: NgxSpinnerService,\n    private translate: TranslateService\n  ) { }\n\n  ngOnInit() {\n    this.searchCountry = ''; this.searchState = ''; this.searchCity = '';\n    this.getCountries(this.searchCountry, '');\n  }\n\n  public openCountryModal(template: TemplateRef<any>, country_id, name_en, name_es, status, index) {\n    this.parameter.index = index;\n    this.location.countryModel.country_id = country_id;\n    this.location.countryModel.name_en = name_en;\n    this.location.countryModel.name_es = name_es;\n    this.location.countryModel.status = status;\n    this.modalRef = this.modalService.show(template);\n  }\n\n  public openStateModal(template: TemplateRef<any>, country_id, state_id, name_en, name_es, status, index) {\n    this.parameter.index = index;\n    this.location.stateModel.country_id = country_id;\n    this.location.stateModel.state_id = state_id;\n    this.location.stateModel.name_en = name_en;\n    this.location.stateModel.name_es = name_es;\n    this.location.stateModel.status = status;\n    this.modalRef = this.modalService.show(template);\n  }\n\n  public openCityModal(template: TemplateRef<any>, country_id, state_id, city_id, name_en, name_es, status, index) {\n    this.parameter.index = index;\n    this.location.cityModel.country_id = country_id;\n    this.location.cityModel.state_id = state_id;\n    this.location.cityModel.city_id = city_id;\n    this.location.cityModel.name_en = name_en;\n    this.location.cityModel.name_es = name_es;\n    this.location.cityModel.status = status;\n    this.modalRef = this.modalService.show(template);\n  }\n\n  public openModal(template: TemplateRef<any>) {\n    this.modalRef = this.modalService.show(template); // {3}\n  }\n\n\n  // used for country listing and country search\n  getCountries(keyword, keyname) {\n    const input = new FormData();\n    if (keyword) { input.append('keyword', keyword); }\n    this.admin.postDataApi('getCountries', input)\n      .subscribe(\n        success => {\n          if (keyname === '') {\n            this.parameter.countries1 = success.data.reverse();\n            this.parameter.countries2 = success.data.reverse();\n            this.parameter.countries3 = success.data.reverse();\n            this.parameter.countries4 = success.data.reverse();\n            this.parameter.countries5 = success.data.reverse();\n            this.getStates(this.parameter.countries2[0].id, '', '');\n          } else if (keyname === 1) {\n            this.parameter.countries1 = success.data.reverse();\n          } else if (keyname === 2) {\n            this.parameter.countries2 = success.data.reverse();\n            if (this.parameter.countries2.length > 0) {\n              // this.getStates(this.parameter.countries2[0].id, '', '1');\n            }\n          } else if (keyname === 3) {\n            this.parameter.countries3 = success.data.reverse();\n          } else if (keyname === 4) {\n            this.parameter.countries4 = success.data.reverse();\n          } else if (keyname === 5) {\n            this.parameter.countries5 = success.data.reverse();\n          }\n        }, error => {\n          // this.spinner.hide();\n        });\n  }\n\n  // used on click of country -- city\n  getStates(country_id, keyword, keyname) {\n    this.parameter.country_id = country_id;\n\n    const input = new FormData();\n    input.append('country_id', country_id);\n\n    if (keyword) { input.append('keyword', keyword); }\n\n    this.admin.postDataApi('country/getStates', input)\n      .subscribe(\n        success => {\n          if (keyname === '') {\n            this.parameter.country_id1 = country_id;\n            this.parameter.country_id2 = country_id;\n            this.parameter.states1 = success.data.reverse();\n            this.parameter.states2 = success.data.reverse();\n            this.parameter.states3 = success.data.reverse();\n            this.getCities(this.parameter.states1[0].id, '', '');\n          } else if (keyname === 1) {\n            this.parameter.country_id1 = country_id;\n            this.parameter.states1 = success.data.reverse();\n            // this.getCities(this.parameter.states1[0].id, '', '1');\n          } else if (keyname === 2) {\n            this.parameter.country_id2 = country_id;\n            this.parameter.states2 = success.data.reverse();\n            if (this.parameter.states2.length > 0) {\n              this.getCities(this.parameter.states2[0].id, '', 1);\n            } else {\n              this.parameter.cities1 = [];\n            }\n          } else if (keyname === 3) {\n            this.parameter.states3 = success.data.reverse();\n          }\n          // if (this.parameter.states1.length !== 0) {\n          //   this.parameter.state_id = this.parameter.states1[0].id;\n          //   this.getCities(this.parameter.states1[0].id, '', '1');\n          // }else { this.parameter.cities = []; }\n        });\n  }\n\n\n  getCities(state_id, keyword, keyname) {\n    this.parameter.state_id = state_id;\n    this.searchCity = keyword;\n    const input = new FormData();\n    input.append('state_id', state_id);\n    if (keyword) { input.append('keyword', keyword); }\n    this.admin.postDataApi('getCities', input)\n      .subscribe(\n        success => {\n          // this.parameter.cities = success.data.reverse();\n          if (keyname === '') {\n            this.parameter.state_id1 = state_id;\n            this.parameter.cities1 = success.data.reverse();\n            this.parameter.cities2 = success.data.reverse();\n          } else if (keyname === 1) {\n            this.parameter.state_id1 = state_id;\n            this.parameter.cities1 = success.data.reverse();\n          } else if (keyname === 2) {\n            this.parameter.cities2 = success.data.reverse();\n          }\n        }, error => {\n          // this.spinner.hide();\n        });\n  }\n\n\n  checkIfCountrySpanishNameEntered(name_en, name_es = '') {\n    const self = this;\n    if (name_es === '') {\n      swal({\n        text: this.translate.instant('message.error.saveEngCountryName'),\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: this.constant.confirmButtonColor,\n        cancelButtonColor: this.constant.cancelButtonColor,\n        confirmButtonText: 'Yes'\n      }).then((result) => {\n        if (result.value) {\n          this.addCountry(name_en, name_en, self.location.countryModel.status, '');\n        }\n      });\n    } else {\n      self.addCountry(name_en, name_es, self.location.countryModel.status, '');\n    }\n  }\n\n\n  addCountry(name_en: string, name_es: string, status, country_id) {\n    if (country_id === '') { this.modalRef.hide(); }    // hide only when open\n\n    const input = new FormData();\n    input.append('name_es', name_es);\n    input.append('name_en', name_en);\n    input.append('status', status);\n\n    if (this.location.countryModel.country_id) {\n      input.append('country_id', this.location.countryModel.country_id);\n    } else if (country_id) {\n      input.append('country_id', country_id);\n    }\n\n    this.admin.postDataApi('addCountry', input)\n      .subscribe(\n        success => {\n          const text = this.location.countryModel.country_id || country_id ?\n          this.translate.instant('message.success.updatedSuccessfully') :\n          this.translate.instant('message.success.addedSuccessfully');\n          swal(this.translate.instant('swal.success'), text, 'success');\n          this.getCountries('', '');\n          // this.getAllCountries('', 'added-country');   // loading dropdown\n\n\n          // if (this.parameter.index === -1) {\n          //   this.parameter.countries1.push(success.data);\n          // }else {\n          //   this.parameter.countries1[this.parameter.index] = success.data;\n          // }\n        });\n  }\n\n\n  checkIfStateSpanishNameEntered(country_id, name_en, name_es = '') {\n    const self = this;\n    if (name_es === '') {\n      swal({\n        text: this.translate.instant('message.error.saveEngStateName'),\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: this.constant.confirmButtonColor,\n        cancelButtonColor: this.constant.cancelButtonColor,\n        confirmButtonText: 'Yes'\n      }).then((result) => {\n        if (result.value) {\n          this.addState(country_id, name_en, name_en, self.location.stateModel.status, '');\n        }\n      });\n    } else {\n      self.addState(country_id, name_en, name_es, self.location.stateModel.status, '');\n    }\n  }\n\n\n  addState(country_id, name_en, name_es, status, state_id) {\n\n    if (state_id === '') { this.modalRef.hide(); }\n\n    const input = new FormData();\n    input.append('name_es', name_es);\n    input.append('name_en', name_en);\n    input.append('status', status);\n\n    if (this.location.stateModel.country_id) {\n      input.append('country_id', this.location.stateModel.country_id);  // edit\n    } else {\n      input.append('country_id', country_id);  // add\n    }\n\n    if (this.location.stateModel.state_id) {\n      input.append('state_id', this.location.stateModel.state_id);\n    } else if (state_id) {\n      input.append('state_id', state_id);\n    }\n\n    this.admin.postDataApi('country/addState', input)\n      .subscribe(\n        success => {\n          const text = this.location.stateModel.state_id || state_id ?\n          this.translate.instant('message.success.updatedSuccessfully') :\n          this.translate.instant('message.success.addedSuccessfully');\n          swal(this.translate.instant('swal.success'), text, 'success');\n          this.getStates(this.parameter.country_id1, '', 1);\n          this.getStates(this.parameter.country_id2, '', 2);\n          // this.getStatesWRTCountry(this.parameter.country_id, '');\n          // if (this.parameter.index === -1) {\n          //   this.parameter.states.push(success.data);\n          // }else {\n          //   this.parameter.states[this.parameter.index] = success.data;\n          // }\n        });\n  }\n\n\n  checkIfCitySpanishNameEntered(state_id, name_en, name_es = '') {\n    const self = this;\n    if (name_es === '') {\n      swal({\n        text: this.translate.instant('message.error.saveEngCityName'),\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: this.constant.confirmButtonColor,\n        cancelButtonColor: this.constant.cancelButtonColor,\n        confirmButtonText: 'Yes'\n      }).then((result) => {\n        if (result.value) {\n          this.addCity(state_id, name_en, name_en, self.location.cityModel.status, '');\n        }\n      });\n    } else {\n      self.addCity(state_id, name_en, name_es, self.location.cityModel.status, '');\n    }\n  }\n\n\n  addCity(state_id, name_en, name_es, status, city_id) {\n    if (city_id === '') { this.modalRef.hide(); }\n    const input = new FormData();\n    input.append('name_es', name_es);\n    input.append('name_en', name_en);\n    input.append('status', status);\n\n    if (this.location.cityModel.state_id) {\n      input.append('state_id', this.location.cityModel.state_id);   // edit\n    } else {\n      input.append('state_id', state_id);   // add\n    }\n\n    if (this.location.cityModel.city_id) {\n      input.append('city_id', this.location.cityModel.city_id);   // edit\n    } else if (city_id) {\n      input.append('city_id', city_id);   // edit\n    }\n\n    this.admin.postDataApi('addCity', input)\n      .subscribe(\n        success => {\n          const text = this.location.cityModel.city_id || city_id ?\n          this.translate.instant('message.success.updatedSuccessfully') :\n          this.translate.instant('message.success.addedSuccessfully');\n          swal(this.translate.instant('swal.success'), text, 'success');\n          this.getCities(this.parameter.state_id1, '', 1);\n        });\n  }\n\n\n  blockUnblockCountry(country_id, name_en, name_es, type, index) {\n    this.parameter.index = index;\n    switch (type) {\n      case 0:\n      this.parameter.text = this.translate.instant('message.error.wantToBlockCountry');\n      this.parameter.successText = this.translate.instant('message.success.blockedSuccessfully');\n        break;\n      case 1:\n      this.parameter.text = this.translate.instant('message.error.wantToUnblockCountry');\n      this.parameter.successText = this.translate.instant('message.success.unblockedSuccessfully');\n        break;\n    }\n\n    swal({\n      html: this.translate.instant('message.error.areYouSure') + '<br>' + this.parameter.text,\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: this.constant.confirmButtonColor,\n      cancelButtonColor: this.constant.cancelButtonColor,\n      confirmButtonText: 'Yes'\n    }).then((result) => {\n      if (result.value) {\n        this.addCountry(name_en, name_es, type, country_id);\n      }\n    });\n  }\n\n\n  blockUnblockState(country_id, name_en, name_es, type, state_id, index) {\n    this.parameter.index = index;\n    switch (type) {\n      case 0:\n      this.parameter.text = this.translate.instant('message.error.wantToBlockState');\n      this.parameter.successText = this.translate.instant('message.success.blockedSuccessfully');\n        break;\n      case 1:\n      this.parameter.text = this.translate.instant('message.error.wantToUnblockState');\n      this.parameter.successText = this.translate.instant('message.success.unblockedSuccessfully');\n        break;\n    }\n\n    // const self = this;\n    swal({\n      // title: this.parameter.title,\n      // text: this.parameter.text,\n      html: this.translate.instant('message.error.areYouSure') + '<br>' + this.parameter.text,\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: this.constant.confirmButtonColor,\n      cancelButtonColor: this.constant.cancelButtonColor,\n      confirmButtonText: 'Yes'\n    }).then((result) => {\n      if (result.value) {\n        this.addState(country_id, name_en, name_es, type, state_id);\n      }\n    });\n  }\n\n\n  blockUnblockCity(state_id, name_en, name_es, type, city_id, index) {\n    this.parameter.index = index;\n    switch (type) {\n      case 0:\n      this.parameter.text = this.translate.instant('message.error.wantToBlockCity');\n      this.parameter.successText = this.translate.instant('message.success.blockedSuccessfully');\n        break;\n      case 1:\n      this.parameter.text = this.translate.instant('message.error.wantToUnblockCity');\n      this.parameter.successText = this.translate.instant('message.success.unblockedSuccessfully');\n        break;\n    }\n\n    swal({\n      // title: this.parameter.title,\n      // text: this.parameter.text,\n      html: this.translate.instant('message.error.areYouSure') + '<br>' + this.parameter.text,\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: this.constant.confirmButtonColor,\n      cancelButtonColor: this.constant.cancelButtonColor,\n      confirmButtonText: 'Yes'\n    }).then((result) => {\n      if (result.value) {\n        this.addCity(state_id, name_en, name_es, type, city_id);\n      }\n    });\n  }\n\n// delete country , state , city\n  deletePopup(data : any, index: number, value : string ){\n    swal({\n      html: this.translate.instant('message.error.areYouSure') + '<br>' +\n        this.translate.instant('message.error.wantToDelete' + value),\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: this.constant.confirmButtonColor,\n      cancelButtonColor: this.constant.cancelButtonColor,\n      confirmButtonText: 'Yes'\n    }).then((result) => {\n      if (result.value) {\n        value == 'Country'? this.deleteCountry(data, index) : value == 'State'?\n        this.deleteState(data, index): value == 'City'?\n        this.deleteCity(data, index): undefined;\n      }\n    });\n  }\n\n  deleteCountry(country: any, index: number) {\n    this.admin.postDataApi('deleteCountry',\n      { country_id: country.id }).subscribe(r => {\n        swal(this.translate.instant('swal.success'), this.translate.instant('message.success.deletedSuccessfully'), 'success');\n        this.getCountries('', '');\n        this.items.splice(index, 1);\n      },\n        error => {\n          swal(this.translate.instant('swal.error'), error.message, 'error');\n        });\n  }\n\n  deleteState(state: any, index: number) {\n    this.admin.postDataApi('deleteState',\n      { state_id: state.id }).subscribe(r => {\n        swal(this.translate.instant('swal.success'), this.translate.instant('message.success.deletedSuccessfully'), 'success');\n        this.getStates(this.parameter.country_id1, '', 1);\n          this.getStates(this.parameter.country_id2, '', 2);\n        this.items.splice(index, 1);\n      },\n        error => {\n          swal(this.translate.instant('swal.error'), error.message, 'error');\n        });\n  }\n\n  deleteCity(city: any, index: number) {\n    this.admin.postDataApi('deleteCity',\n      { city_id: city.id }).subscribe(r => {\n        swal(this.translate.instant('swal.success'), this.translate.instant('message.success.deletedSuccessfully'), 'success');\n        this.getCities(this.parameter.state_id1, '', 1);\n        this.items.splice(index, 1);\n      },\n        error => {\n          swal(this.translate.instant('swal.error'), error.message, 'error');\n        });\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9zZXR0aW5ncy9wcm9maWxlL3Byb2ZpbGUuY29tcG9uZW50LmNzcyJ9 */\"","module.exports = \"\\n<div class=\\\"container-fluid\\\">\\n<div class=\\\"row\\\">\\n    <div class=\\\"col-12\\\">\\n      <div class=\\\"title-group\\\">\\n          <h5>{{'myProfile.label' | translate}}</h5>\\n          <div class=\\\"spacer30\\\"></div>\\n      </div>\\n    </div>\\n</div>\\n<div class=\\\"white-bg padding40\\\">\\n    <div class=\\\"row\\\">\\n    <form role=\\\"form\\\" ngNativeValidate #addForm=\\\"ngForm\\\">\\n      <div class=\\\"col-xl-12 col-lg-12 col-md-12 col-12\\\">\\n          <div class=\\\"row\\\">\\n            <div class=\\\"col-6\\\">\\n                <div class=\\\"add-img\\\" style=\\\"display:flex;\\\">\\n                    <img *ngIf=\\\"image\\\" [src]=\\\"image\\\" style=\\\"object-fit: cover; width: 100%;\\\">\\n                    <label *ngIf=\\\"!image\\\">{{'myProfile.noImage' | translate}}</label>\\n                </div>\\n            </div>\\n            <div class=\\\"col-12\\\">\\n                <div class=\\\"spacer40\\\"></div>\\n            </div>\\n            <div class=\\\"col-12\\\">\\n                <div class=\\\"form-group-2\\\">\\n                  <label>{{'addForm.name' | translate}}</label>\\n                  <input disabled autocomplete=\\\"off\\\" required type=\\\"text\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"model.name\\\" name=\\\"name\\\">\\n                </div>\\n            </div>\\n            <div class=\\\"col-12\\\">\\n                <div class=\\\"form-group-2\\\">\\n                  <label>{{'addForm.contactNumber' | translate}}</label>\\n                  <input disabled minlength=\\\"6\\\" maxlength=\\\"16\\\" autocomplete=\\\"off\\\" type=\\\"text\\\" [pattern]=\\\"constant.phonePattern\\\" class=\\\"form-control\\\" id=\\\"phone\\\" required minlength=\\\"1\\\" [(ngModel)]=\\\"model.phone\\\" name=\\\"phone\\\"\\n                        ng2TelInput [ng2TelInputOptions]=\\\"initialCountry\\\" />\\n                </div>\\n            </div>\\n            <div class=\\\"col-12\\\">\\n                <div class=\\\"form-group-2\\\">\\n                  <label>{{'addForm.emailId' | translate}}</label>\\n                  <input disabled autocomplete=\\\"off\\\" required [pattern]=\\\"constant.emailPattern\\\" type=\\\"email\\\" class=\\\"form-control\\\" [(ngModel)]=\\\"model.email\\\" name=\\\"email\\\">\\n                </div>\\n            </div>\\n          </div>\\n          <div class=\\\"access-controls\\\">\\n              <div class=\\\"select-controls select-controls-1\\\" *ngFor=\\\"let permission of model.admin_acl; let i=index\\\">\\n              <label class=\\\"cust-check-bx2\\\" [ngClass]=\\\"{'access-control11':permission.can_create==1 || permission.can_read==1 || permission.can_update==1 || permission.can_delete==1 || permission.can_purge==1}\\\">{{permission?.acl?.name}}\\n              <input (click)=\\\"expandBox(i)\\\" type=\\\"checkbox\\\" [checked]=\\\"permission.can_create == 1 || permission.can_read==1 || permission.can_update==1 || permission.can_delete==1 || permission.can_purge==1 ? 'checked': ''\\\">\\n              <span class=\\\"checkmark\\\"></span>\\n              </label>\\n              \\n              <div class=\\\"clearfix\\\"></div>\\n              <div *ngIf=\\\"permission.show\\\" id=\\\"broker-seller-dev\\\" class=\\\"inner-select\\\">\\n                <label class=\\\"cust-check-bx\\\" [ngClass]=\\\"{'inner-checked':permission.can_create==1}\\\">{{'addForm.canCreate' | translate}}\\n                    <input [disabled]=\\\"true\\\" type=\\\"checkbox\\\" [checked]=\\\"permission.can_create == 1 ? 'checked': ''\\\" >\\n                    <span class=\\\"checkmark\\\"></span>\\n                </label>\\n                <label class=\\\"cust-check-bx\\\" [ngClass]=\\\"{'inner-checked':permission.can_read==1}\\\">{{'addForm.canRead' | translate}}\\n                    <input [disabled]=\\\"true\\\" type=\\\"checkbox\\\" [checked]=\\\"permission.can_read == 1 ? 'checked': ''\\\" >\\n                    <span class=\\\"checkmark\\\"></span>\\n                </label>\\n                <label class=\\\"cust-check-bx\\\" [ngClass]=\\\"{'inner-checked':permission.can_update==1}\\\">{{'addForm.canUpdate' | translate}}\\n                    <input [disabled]=\\\"true\\\" type=\\\"checkbox\\\" [checked]=\\\"permission.can_update == 1 ? 'checked': ''\\\" >\\n                    <span class=\\\"checkmark\\\"></span>\\n                </label>\\n                <label class=\\\"cust-check-bx\\\" [ngClass]=\\\"{'inner-checked':permission.can_delete==1}\\\">{{'addForm.canBlockUnblock' | translate}}\\n                    <input [disabled]=\\\"true\\\" type=\\\"checkbox\\\" [checked]=\\\"permission.can_delete == 1 ? 'checked': ''\\\" >\\n                    <span class=\\\"checkmark\\\"></span>\\n                </label>\\n                <label class=\\\"cust-check-bx\\\" [ngClass]=\\\"{'inner-checked':permission.can_crud==1}\\\">{{'addForm.canCRUD' | translate}}\\n                    <input [disabled]=\\\"true\\\" type=\\\"checkbox\\\" [checked]=\\\"permission.can_crud == 1 ? 'checked': ''\\\" >\\n                    <span class=\\\"checkmark\\\"></span>\\n                </label>\\n                <br>\\n              </div>\\n              <div class=\\\"clearfix\\\"></div>\\n            </div>\\n        </div>\\n\\n\\n        <div class=\\\"row\\\" *ngFor=\\\"let add of model.address; let j=index\\\">\\n            <div class=\\\"col-sm-2 col-12\\\">\\n                <div class=\\\"form-group-2\\\">\\n                  <label>{{'filters.location.country' | translate}}</label>\\n                  <select class=\\\"form-control\\\">\\n                      <option>{{add.countries}}</option>\\n                  </select>\\n                </div>\\n            </div>\\n            <div class=\\\"col-sm-2 col-12\\\">\\n                <div class=\\\"form-group-2\\\">\\n                  <label>{{'filters.location.state' | translate}}</label>\\n                  <select class=\\\"form-control\\\" disabled>\\n                      <option>{{add.states}}</option>\\n                  </select>\\n                </div>\\n            </div>\\n            <div class=\\\"col-sm-2 col-12\\\">\\n                <div class=\\\"form-group-2\\\">\\n                  <label>{{'filters.location.city' | translate}}</label>\\n                  <select class=\\\"form-control\\\" disabled>\\n                      <option>{{add.cities}}</option>\\n                  </select>\\n                </div>\\n            </div>\\n            <div class=\\\"col-sm-2 col-12\\\">\\n                <div class=\\\"form-group-2\\\">\\n                  <label>{{'filters.location.locality' | translate}}</label>\\n                  <select class=\\\"form-control\\\" disabled>\\n                      <option>{{add.localities}}</option>\\n                  </select>\\n                </div>\\n            </div>\\n            <div class=\\\"col-sm-2 col-12\\\">\\n                <div class=\\\"form-group-2\\\">\\n                  <label>{{'filters.location.building' | translate}}</label>\\n                  <select class=\\\"form-control\\\" disabled>\\n                      <option>{{add.buildings}}</option>\\n                  </select>\\n                </div>\\n            </div>\\n          </div>\\n                 \\n      </div>\\n      </form>\\n    </div>\\n</div>\"","import { Component, OnInit } from '@angular/core';\nimport { AdminService } from 'src/app/services/admin.service';\nimport { IProperty } from 'src/app/common/property';\nimport { ACL } from 'src/app/models/acl.model';\nimport { Constant } from 'src/app/common/constants';\nimport { NgxSpinnerService } from 'ngx-spinner';\ndeclare let swal: any;\n\n@Component({\n  selector: 'app-profile',\n  templateUrl: './profile.component.html',\n  styleUrls: ['./profile.component.css'],\n  providers: [ACL]\n})\nexport class ProfileComponent implements OnInit {\n\n  image: any;\n  public parameter: IProperty = {};\n  initialCountry: any;\n  show = false;\n  constructor(public constant: Constant, public model: ACL,\n    private admin: AdminService, private spinner: NgxSpinnerService\n  ) { }\n\n  ngOnInit() {\n    this.model.country_code = this.constant.country_code;\n    this.model.dial_code = this.constant.dial_code;\n    this.parameter.itemsPerPage = this.constant.itemsPerPage;\n    this.parameter.p = this.constant.p;\n    this.initialCountry = {initialCountry: this.constant.country_code};\n    this.loginData();\n  }\n\n  loginData() {\n    this.spinner.show();\n    this.admin.postDataApi('loginData', {})\n    .subscribe(\n      success => {\n        this.spinner.hide();\n        this.model = success.data;\n        this.image = this.model.image;\n        this.model.admin_acl = success.data.admin_acl;\n        this.model.address = [];\n        for (let ind = 0; ind < success.data.countries.length; ind++) {\n          const tempAdd = {\n            countries: success.data.countries[ind].name_en,\n            states: success.data.states !== null && success.data.states[ind] ? success.data.states[ind].name_en : 'All',\n            cities: success.data.cities !== null && success.data.cities[ind] ? success.data.cities[ind].name_en : 'All',\n            localities: success.data.localities !== null && success.data.localities[ind] ? success.data.localities[ind].name_en : 'All',\n            buildings: success.data.buildings !== null && success.data.buildings[ind] ? success.data.buildings[ind].name_en : 'All'\n          };\n          this.model.address[ind] = tempAdd;\n        }\n      }, error => {\n        this.spinner.hide();\n      });\n  }\n\n  expandBox(index: number) {\n    this.model.admin_acl[index].show = this.model.admin_acl[index].show === true ? false : true;\n  }\n}\n","module.exports = \".amenity-img{\\n    text-align: center\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L3NldHRpbmdzL3Byb2plY3QvcHJvamVjdC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksa0JBQWtCO0NBQ3JCIiwiZmlsZSI6InNyYy9hcHAvbGF5b3V0L3NldHRpbmdzL3Byb2plY3QvcHJvamVjdC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmFtZW5pdHktaW1ne1xuICAgIHRleHQtYWxpZ246IGNlbnRlclxufSJdfQ== */\"","module.exports = \"\\n<div class=\\\"container-fluid\\\">\\n  <div class=\\\"breadcrumb-group\\\">\\n      <h5>{{'settings.label' | translate}}</h5>\\n      <nav class=\\\"breadcrumb\\\">\\n        <a class=\\\"breadcrumb-item\\\">{{'settings.home' | translate}}</a>\\n        <a class=\\\"breadcrumb-item\\\">{{'settings.label' | translate}}</a>\\n        <span class=\\\"breadcrumb-item active\\\">{{'project.label' | translate}}</span>\\n      </nav>\\n  </div>\\n  <div class=\\\"white-bg\\\">\\n      <div class=\\\"page-title\\\">\\n        <h3>{{'project.label' | translate}}</h3>\\n      </div>\\n\\n      <div class=\\\"form-outer\\\">\\n          <div class=\\\"inline-form-group\\\">\\n             <div class=\\\"row\\\">\\n                <div class=\\\"col-md-4\\\">\\n                    <label><strong>{{'project.possessionStatus' | translate}}</strong></label>\\n                </div>\\n                <div class=\\\"col-md-8\\\" *ngIf=\\\"admin?.admin_acl['Settings']?.can_create==1\\\">\\n                   <form role=\\\"form\\\" novalidate #addPossessionForm=\\\"ngForm\\\" (ngSubmit)=\\\"checkIfPossessionSpanishNameEntered(addPossessionForm, '', addPossessionForm.value.name_en, addPossessionForm.value.name_es, 1, 'add')\\\">\\n                      <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-6 col-md-6\\\">\\n                          <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"{{'addForm.placeholder.possessionStatusEn' | translate}}\\\" id=\\\"name_en\\\" required [(ngModel)]=\\\"project.possession.name_en\\\" name=\\\"name_en\\\" #name_en=\\\"ngModel\\\">\\n                          <!-- <div *ngIf=\\\"name_en.errors && (name_en.dirty || name_en.touched)\\\" class=\\\"show-not-found\\\">\\n                            <div [hidden]=\\\"!name_en.errors.required\\\">\\n                              {{constant.errorMsg.PROPERTY_CONFIG_REQUIRED}}\\n                            </div>\\n                          </div>       -->\\n                        </div>\\n                        <div class=\\\"col-lg-6 col-md-6\\\">\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"{{'addForm.placeholder.possessionStatusEs' | translate}}\\\" [(ngModel)]=\\\"project.possession.name_es\\\" name=\\\"name_es\\\">\\n                        </div>\\n                      </div>\\n                    <button [disabled]=\\\"admin?.admin_acl['Settings']?.can_create==0 || addPossessionForm.invalid\\\" type=\\\"submit\\\" class=\\\"add-btn btn\\\">\\n                       <img src=\\\"assets/img/add.png\\\" alt=\\\"img\\\">\\n                     </button>\\n                   </form>\\n                </div>\\n             </div>\\n          </div>\\n      </div>\\n\\n      <div class=\\\"tabel-section padding40 paddingT0\\\">\\n          <div class=\\\"table-responsive\\\">\\n            <table class=\\\"table table-striped\\\">\\n                <tr>\\n                  <th style=\\\"width:40%; text-align:left;\\\">{{'table.th.nameEn' | translate}}</th>\\n                  <th style=\\\"width:40%; text-align:left;\\\">{{'table.th.nameEs' | translate}}</th>\\n                  <th style=\\\"width:20%\\\">{{'table.th.actions.label' | translate}}</th>\\n                </tr>\\n                <tr *ngFor=\\\"let item of parameter.items; let i=index\\\">\\n                  <td class=\\\"text-left\\\">\\n                    {{item.name_en}}\\n                  </td>\\n                  <td class=\\\"text-left\\\">\\n                    {{item.name_es}}\\n                  </td>\\n                  <td>\\n                      <button title=\\\"{{'table.title.editDetails' | translate}}\\\" [disabled]=\\\"admin?.admin_acl['Settings']?.can_update==0\\\" \\n                      (click)=\\\"openPossessionStatusModal(addPossessionStatusModal, i, item.id, item.name_en, item.name_es, item.status)\\\" class=\\\"action-icon\\\"><img src=\\\"assets/img/edit.png\\\" alt=\\\"img\\\"></button>\\n                    \\n                      <!-- status = 1 means unblocked -->\\n                      <button [disabled]=\\\"admin?.admin_acl['Settings']?.can_delete==0\\\"\\n                        (click)=\\\"addPossessionStatusPopup(i, item.id, item.name_en, item.name_es, item.status==1?0:1, item.status==1?'block':'unblock')\\\" \\n                        title=\\\"{{item.status==1 ? ('table.title.block' | translate) : ('table.title.unblock' | translate)}}\\\" [ngClass]=\\\"{'unblock-bg':item.status==0}\\\"\\n                        class=\\\"action-icon\\\"><img src=\\\"assets/img/block.png\\\" alt=\\\"img\\\">\\n                      </button>\\n                    <!-- <a title=\\\"Edit Configuration\\\" (click)=\\\"openPossessionStatusModal(addPossessionStatusModal, item.id, item.name_en, item.name_es, item.status)\\\" class=\\\"icon-block edit-icon\\\"><img src=\\\"assets/img/edit.png\\\" alt=\\\"img\\\"></a>\\n                    <a *ngIf=\\\"item.status == 1\\\" (click)=\\\"addPossessionStatusPopup(item.id, item.name_en, item.name_es, 0, 'block')\\\" title=\\\"Block Configuration\\\" class=\\\"icon-block block-icon\\\"><img src=\\\"assets/img/unblock.png\\\" alt=\\\"img\\\"></a>\\n                    <a *ngIf=\\\"item.status == 0\\\" (click)=\\\"addPossessionStatusPopup(item.id, item.name_en, item.name_es, 1, 'unblock')\\\" title=\\\"Unblock Configuration\\\" class=\\\"icon-block block-icon unblock-bg\\\"><img src=\\\"assets/img/block.png\\\" alt=\\\"img\\\"></a> -->\\n                  </td>\\n                </tr>\\n\\n                <div *ngIf=\\\"parameter.total == 0\\\">\\n                  <p class=\\\"show-not-found\\\">\\n                      {{'message.error.noPossessionFound' | translate}}\\n                  </p>\\n                </div>\\n            </table>\\n          </div>\\n      </div>\\n\\n\\n      <div class=\\\"form-outer\\\">\\n        <div class=\\\"inline-form-group\\\">\\n           <div class=\\\"row\\\">\\n              <div class=\\\"col-md-4\\\">\\n                  <label><strong>{{'project.projectType' | translate}}</strong></label>\\n              </div>\\n              <div class=\\\"col-md-8\\\" *ngIf=\\\"admin?.admin_acl['Settings']?.can_create==1\\\">\\n                 <form role=\\\"form\\\" novalidate #addTypeForm=\\\"ngForm\\\" (ngSubmit)=\\\"checkIfTypeSpanishNameEntered(addTypeForm, '', addTypeForm.value.name_en, addTypeForm.value.name_es, 1, 'add')\\\">\\n\\n                  <div class=\\\"row\\\">\\n                      <div class=\\\"col-md-6 col-lg-6\\\">\\n                          <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"{{'addForm.placeholder.projectTypeEn' | translate}}\\\" id=\\\"name_en\\\" required [(ngModel)]=\\\"project.type.name_en\\\" name=\\\"name_en\\\" #name_en=\\\"ngModel\\\">\\n                          <!-- <div *ngIf=\\\"name_en.errors && (name_en.dirty || name_en.touched)\\\" class=\\\"show-not-found\\\">\\n                            <div [hidden]=\\\"!name_en.errors.required\\\">\\n                              {{constant.errorMsg.PROPERTY_TYPE_REQUIRED}}\\n                            </div>\\n                        </div> -->\\n                      </div>\\n                    \\n                    <div class=\\\"col-lg-6 col-md-6\\\">\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"{{'addForm.placeholder.projectTypeEs' | translate}}\\\" [(ngModel)]=\\\"project.type.name_es\\\" name=\\\"name_es\\\">\\n                    </div>\\n  \\n                  </div>\\n                  <button [disabled]=\\\"admin?.admin_acl['Settings']?.can_create==0 || addTypeForm.invalid\\\" type=\\\"submit\\\" class=\\\"add-btn btn\\\">\\n                     <img src=\\\"assets/img/add.png\\\" alt=\\\"img\\\">\\n                   </button>\\n                 </form>\\n              </div>\\n           </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"tabel-section padding40 paddingT0\\\">\\n        <div class=\\\"table-responsive\\\">\\n          <table class=\\\"table table-striped\\\">\\n              <tr>\\n                <th style=\\\"width:40%; text-align:left;\\\">{{'table.th.nameEn' | translate}}</th>\\n                <th style=\\\"width:40%; text-align:left;\\\">{{'table.th.nameEs' | translate}}</th>\\n                <th style=\\\"width:20%\\\">{{'table.th.actions.label' | translate}}</th>\\n              </tr>\\n              <tr *ngFor=\\\"let item of parameter.projectTypes; let j=index\\\">\\n                <td class=\\\"text-left\\\">\\n                  {{item.name_en}}\\n                </td>\\n                <td class=\\\"text-left\\\">\\n                  {{item.name_es}}\\n                </td>\\n                <td>\\n                    <button title=\\\"{{'table.title.editDetails' | translate}}\\\" [disabled]=\\\"admin?.admin_acl['Settings']?.can_update==0\\\" \\n                    (click)=\\\"openBuildingTypeModal(addBuildingTypeModal, j, item.id, item.name_en, item.name_es, item.status)\\\" class=\\\"action-icon\\\"><img src=\\\"assets/img/edit.png\\\" alt=\\\"img\\\"></button>\\n                  \\n                    <!-- status = 1 means unblocked -->\\n                    <button [disabled]=\\\"admin?.admin_acl['Settings']?.can_delete==0\\\"\\n                      (click)=\\\"addBuildingTypePopup(j, item.id, item.name_en, item.name_es, item.status==1?0:1, item.status==1?'block':'unblock')\\\" \\n                      title=\\\"{{item.status==1 ? ('table.title.block' | translate) : ('table.title.unblock' | translate)}}\\\" [ngClass]=\\\"{'unblock-bg':item.status==0}\\\"\\n                      class=\\\"action-icon\\\"><img src=\\\"assets/img/block.png\\\" alt=\\\"img\\\">\\n                    </button>\\n                  <!-- <a title=\\\"Edit Property Type\\\" (click)=\\\"openBuildingTypeModal(addBuildingTypeModal, item.id, item.name_en, item.name_es, item.status)\\\" class=\\\"icon-block edit-icon\\\"><img src=\\\"assets/img/edit.png\\\" alt=\\\"img\\\"></a>\\n                  <a *ngIf=\\\"item.status == 1\\\" (click)=\\\"addBuildingTypePopup(item.id, item.name_en, item.name_es, 0, 'block')\\\" title=\\\"Block Property Type\\\" class=\\\"icon-block block-icon\\\"><img src=\\\"assets/img/unblock.png\\\" alt=\\\"img\\\"></a>\\n                  <a *ngIf=\\\"item.status == 0\\\" (click)=\\\"addBuildingTypePopup(item.id, item.name_en, item.name_es, 1, 'unblock')\\\" title=\\\"Unblock Property Type\\\" class=\\\"icon-block block-icon unblock-bg\\\"><img src=\\\"assets/img/block.png\\\" alt=\\\"img\\\"></a> -->\\n                </td>\\n              </tr>\\n\\n              <div *ngIf=\\\"parameter.projectTypesCount == 0\\\">\\n                <p class=\\\"show-not-found\\\">\\n                    {{'message.error.noProjectTypeFound' | translate}}\\n                </p>\\n              </div>\\n          </table>\\n        </div>\\n    </div>\\n\\n\\n\\n      <div class=\\\"form-outer\\\">\\n        <div class=\\\"inline-form-group\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-4\\\">\\n                  <label>{{'project.amenities' | translate}}</label>\\n              </div>\\n              <div class=\\\"col-md-8\\\" *ngIf=\\\"admin?.admin_acl['Settings']?.can_create==1\\\">\\n                 <form role=\\\"form\\\" novalidate #addAmenityForm=\\\"ngForm\\\" (ngSubmit)=\\\"checkIfAmenitySpanishNameEntered(addAmenityForm, '', '', addAmenityForm.value.name_en, addAmenityForm.value.name_es, 1, 'add')\\\">\\n                  <div class=\\\"browse-files\\\">\\n                    <input accept=\\\"image/*\\\" (change)=\\\"changeListner($event)\\\" type=\\\"file\\\" class=\\\"image form-control\\\" placeholder=\\\"{{'addForm.placeholder.amenity' | translate}}\\\" id=\\\"icon\\\" required [(ngModel)]=\\\"amenityModel.icon\\\" name=\\\"icon\\\" #icon=\\\"ngModel\\\">\\n                    <span>{{'project.browse' | translate}}</span>\\n                  </div>\\n                  <!-- <div *ngIf=\\\"icon.errors && (icon.dirty || icon.touched)\\\" class=\\\"show-not-found\\\">\\n                    <div [hidden]=\\\"!icon.errors.required\\\">\\n                      {{constant.errorMsg.FILE_REQUIRED}}\\n                    </div>\\n                  </div> -->\\n                  \\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col-lg-6 col-md-6\\\">\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"{{'addForm.placeholder.projectAmenityEn' | translate}}\\\" id=\\\"name_en\\\" required [(ngModel)]=\\\"amenityModel.name_en\\\" name=\\\"name_en\\\" #name_en=\\\"ngModel\\\">\\n                        <!-- <div *ngIf=\\\"name_en.errors && (name_en.dirty || name_en.touched)\\\" class=\\\"show-not-found\\\">\\n                          <div [hidden]=\\\"!name_en.errors.required\\\">\\n                            {{constant.errorMsg.PROPERTY_TYPE_REQUIRED}}\\n                          </div>\\n                      </div>     -->\\n                    </div>\\n                    <div class=\\\"col-lg-6 col-md-6\\\">\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"{{'addForm.placeholder.projectAmenityEs' | translate}}\\\" [(ngModel)]=\\\"amenityModel.name_es\\\" name=\\\"name_es\\\">\\n                    </div>\\n                  </div>\\n                  <button [disabled]=\\\"admin?.admin_acl['Settings']?.can_create==0 || addAmenityForm.invalid\\\" type=\\\"submit\\\" class=\\\"add-btn btn\\\">\\n                     <img src=\\\"assets/img/add.png\\\" alt=\\\"img\\\">\\n                   </button>\\n                 </form>\\n              </div>\\n              <!-- <div class=\\\"col-md-8\\\">\\n                  <div class=\\\"browse-files\\\">\\n                    <input type=\\\"file\\\" name=\\\"\\\">\\n                    <span>Browse</span>\\n                  </div>\\n                  <input type=\\\"text\\\" name=\\\"\\\">\\n                  <button class=\\\"add-btn\\\" (click)=\\\"openAmenitiesModal(addAmenitiesModal, '', '', '', '', 1)\\\">\\n                    <img src=\\\"assets/img/add.png\\\" alt=\\\"img\\\">\\n                  </button>\\n              </div> -->\\n            </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"tabel-section padding40\\\">\\n        <div class=\\\"table-responsive\\\">\\n            <table class=\\\"table table-striped\\\">\\n              <tr>\\n                  <th style=\\\"width:20%\\\">{{'table.th.image' | translate}}</th>\\n                  <th style=\\\"width:30%; text-align:left;\\\">{{'table.th.nameEn' | translate}}</th>\\n                  <th style=\\\"width:30%; text-align:left;\\\">{{'table.th.nameEs' | translate}}</th>\\n                  <th style=\\\"width:20%\\\">{{'table.th.actions.label' | translate}}</th>\\n              </tr>\\n              <tr *ngFor=\\\"let item of parameter.amenities; let k=index\\\">\\n                  <td>\\n                    <!-- <i class=\\\"fa fa-building\\\"></i> -->\\n                    <img alt=\\\"image\\\" height=\\\"30\\\" width=\\\"30\\\" src=\\\"{{item.icon}}\\\">\\n                  </td>\\n                  <td class=\\\"text-left\\\">\\n                    {{item.name_en}}\\n                  </td>\\n                  <td class=\\\"text-left\\\">\\n                    {{item.name_es}}\\n                  </td>\\n                  <td>\\n                      <button title=\\\"{{'table.title.editDetails' | translate}}\\\" [disabled]=\\\"admin?.admin_acl['Settings']?.can_update==0\\\" \\n                      (click)=\\\"openAmenityModal(addAmenityModal, k, item.id, item.icon, item.name_en, item.name_es, item.status)\\\" class=\\\"action-icon\\\"><img src=\\\"assets/img/edit.png\\\" alt=\\\"img\\\"></button>\\n                    \\n                      <!-- status = 1 means unblocked -->\\n                      <button [disabled]=\\\"admin?.admin_acl['Settings']?.can_delete==0\\\"\\n                        (click)=\\\"addAmenityPopup(k ,item.id, item.icon, item.name_en, item.name_es, item.status==1?0:1, item.status==1?'block':'unblock')\\\" \\n                        title=\\\"{{item.status==1 ? ('table.title.block' | translate) : ('table.title.unblock' | translate)}}\\\" [ngClass]=\\\"{'unblock-bg':item.status==0}\\\"\\n                        class=\\\"action-icon\\\"><img src=\\\"assets/img/block.png\\\" alt=\\\"img\\\">\\n                      </button>\\n\\n                    <!-- <a title=\\\"Edit Amenity\\\" (click)=\\\"openAmenityModal(addAmenityModal, item.id, item.icon, item.name_en, item.name_es, item.status)\\\" class=\\\"icon-block edit-icon\\\"><img src=\\\"assets/img/edit.png\\\" alt=\\\"img\\\"></a>\\n                    <a *ngIf=\\\"item.status == 1\\\" (click)=\\\"addAmenityPopup(item.id, item.icon, item.name_en, item.name_es, 0, 'block')\\\" title=\\\"Block Amenity\\\" class=\\\"icon-block block-icon\\\"><img src=\\\"assets/img/unblock.png\\\" alt=\\\"img\\\"></a>\\n                    <a *ngIf=\\\"item.status == 0\\\" (click)=\\\"addAmenityPopup(item.id, item.icon, item.name_en, item.name_es, 1, 'unblock')\\\" title=\\\"Unblock Amenity\\\" class=\\\"icon-block block-icon unblock-bg\\\"><img src=\\\"assets/img/block.png\\\" alt=\\\"img\\\"></a> -->\\n                  </td>\\n              </tr>\\n\\n              <div *ngIf=\\\"parameter.amenitiesCount == 0\\\">\\n                  <p class=\\\"show-not-found\\\">\\n                      {{'message.error.noProjectAmenityFound' | translate}}\\n                  </p>\\n                </div>\\n            </table>\\n        </div>\\n      </div>\\n      <!-- <div class=\\\"btn-cont text-right padding40 paddingT0\\\">\\n        <button class=\\\"btn btn-primary\\\">Save</button>\\n      </div> -->\\n  </div>\\n</div>\\n\\n\\n<!-- add possession status modal -->\\n<ng-template #addPossessionStatusModal>\\n  <div class=\\\"modal-content\\\">\\n    <div class=\\\"modal-header my-modal-header\\\">\\n      <h4 class=\\\"modal-title\\\">{{'project.editPropertyConfig' | translate}}</h4>\\n      <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n    </div>\\n    <form class=\\\"form-horizontal my-modal-form\\\" role=\\\"form\\\" novalidate #addForm=\\\"ngForm\\\" (ngSubmit)=\\\"checkIfPossessionSpanishNameEntered(addForm, project.possession.id, addForm.value.name_en, addForm.value.name_es, project.possession.status, 'edit')\\\">\\n      <div class=\\\"modal-body my-modal-body\\\">\\n        <div class=\\\"form-group\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"{{'addForm.placeholder.projectPossessionStatusEn' | translate}}\\\" id=\\\"name_en\\\" required [(ngModel)]=\\\"project.possession.name_en\\\" name=\\\"name_en\\\" #name_en=\\\"ngModel\\\">\\n          <!-- <div *ngIf=\\\"name_en.errors && (name_en.dirty || name_en.touched)\\\" class=\\\"show-not-found\\\">\\n              <div [hidden]=\\\"!name_en.errors.required\\\">\\n                {{constant.errorMsg.PROPERTY_TYPE_REQUIRED}}\\n              </div>\\n          </div> -->\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"{{'addForm.placeholder.projectPossessionStatusEs' | translate}}\\\" [(ngModel)]=\\\"project.possession.name_es\\\" name=\\\"name_es\\\">\\n        </div>\\n      </div>\\n      <div class=\\\"modal-footer btn-cont\\\">\\n        <button type=\\\"submit\\\" [disabled]=\\\"admin?.admin_acl['Settings']?.can_update==0 || addForm.invalid\\\" class=\\\"btn btn-primary-new\\\">{{'addForm.submit' | translate}}</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">{{'addForm.close' | translate}}</button>\\n      </div>\\n    </form>\\n  </div>\\n</ng-template>\\n\\n\\n<!-- add PropertyTypeModal modal -->\\n<ng-template #addBuildingTypeModal>\\n  <div class=\\\"modal-content\\\">\\n    <div class=\\\"modal-header my-modal-header\\\">\\n      <h4 class=\\\"modal-title\\\">{{'project.editPropertyType' | translate}}</h4>\\n      <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n    </div>\\n    <form class=\\\"form-horizontal my-modal-form\\\" role=\\\"form\\\" novalidate #addForm1=\\\"ngForm\\\" (ngSubmit)=\\\"checkIfTypeSpanishNameEntered(addForm1, project.type.id, addForm1.value.name_en, addForm1.value.name_es, project.type.status, 'edit')\\\">\\n      <div class=\\\"modal-body my-modal-body\\\">\\n        <div class=\\\"form-group\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"{{'addForm.placeholder.projectTypeEn' | translate}}\\\" id=\\\"name_en\\\" required [(ngModel)]=\\\"project.type.name_en\\\" name=\\\"name_en\\\" #name_en=\\\"ngModel\\\">\\n          <!-- <div *ngIf=\\\"name_en.errors && (name_en.dirty || name_en.touched)\\\" class=\\\"show-not-found\\\">\\n              <div [hidden]=\\\"!name_en.errors.required\\\">\\n                {{constant.errorMsg.PROPERTY_TYPE_REQUIRED}}\\n              </div>\\n          </div> -->\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"{{'addForm.placeholder.projectTypeEs' | translate}}\\\" [(ngModel)]=\\\"project.type.name_es\\\" name=\\\"name_es\\\">\\n        </div>\\n      </div>\\n      <div class=\\\"modal-footer btn-cont\\\">\\n        <button type=\\\"submit\\\" [disabled]=\\\"admin?.admin_acl['Settings']?.can_update==0 || addForm1.invalid\\\" class=\\\"btn btn-primary-new\\\">{{'addForm.submit' | translate}}</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">{{'addForm.close' | translate}}</button>\\n      </div>\\n    </form>\\n  </div>\\n</ng-template>\\n\\n\\n<!-- addAmenitiesModal -->\\n<ng-template #addAmenityModal>\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header my-modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">{{'project.editAmenity' | translate}}</h4>\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <form class=\\\"form-horizontal my-modal-form\\\" role=\\\"form\\\" novalidate #addForm2=\\\"ngForm\\\" (ngSubmit)=\\\"checkIfAmenitySpanishNameEntered(addForm2, amenityModel.id, '', addForm2.value.name_en, addForm2.value.name_es, amenityModel.status, 'edit')\\\">\\n        <div class=\\\"modal-body my-modal-body\\\">\\n          <div class=\\\"form-group amenity-img\\\">\\n            <img [src]=\\\"amenityModel.icon\\\" class=\\\"image\\\" width=\\\"100\\\" height=\\\"100\\\">\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <input accept=\\\"image/*\\\" (change)=\\\"changeListner($event)\\\" type=\\\"file\\\" class=\\\"form-control\\\">\\n          </div>\\n          \\n          <div class=\\\"form-group\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"{{'addForm.placeholder.amenityEn' | translate}}\\\" id=\\\"name_en\\\" required [(ngModel)]=\\\"amenityModel.name_en\\\" name=\\\"name_en\\\" #name_en=\\\"ngModel\\\">\\n            <!-- <div *ngIf=\\\"name_en.errors && (name_en.dirty || name_en.touched)\\\" class=\\\"show-not-found\\\">\\n                <div [hidden]=\\\"!name_en.errors.required\\\">\\n                  {{constant.errorMsg.PROPERTY_TYPE_REQUIRED}}\\n                </div>\\n            </div> -->\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"{{'addForm.placeholder.amenityEn' | translate}}\\\" [(ngModel)]=\\\"amenityModel.name_es\\\" name=\\\"name_es\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"modal-footer btn-cont\\\">\\n          <button type=\\\"submit\\\" [disabled]=\\\"admin?.admin_acl['Settings']?.can_update==0 || addForm2.invalid\\\" class=\\\"btn btn-primary-new\\\">{{'addForm.submit' | translate}}</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-default\\\" aria-label=\\\"Close\\\" (click)=\\\"closeModal()\\\">{{'addForm.close' | translate}}</button>\\n        </div>\\n      </form>\\n  </div>\\n</ng-template>\\n  \"","import { Component, OnInit, TemplateRef, ElementRef } from '@angular/core';\nimport { AdminService } from 'src/app/services/admin.service';\nimport { Router } from '@angular/router';\nimport { IProperty } from 'src/app/common/property';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { Constant } from 'src/app/common/constants';\nimport { Project, Amenities } from 'src/app/models/project.model';\nimport { NgForm } from '@angular/forms';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { TranslateService } from '@ngx-translate/core';\ndeclare let swal: any;\n\n@Component({\n  selector: 'app-project',\n  templateUrl: './project.component.html',\n  styleUrls: ['./project.component.css'],\n  providers: [Constant, Project, Amenities]\n})\n\nexport class ProjectComponent implements OnInit {\n\n  public parameter: IProperty = {};\n  public modalRef: BsModalRef;\n  icon: any;\n\n  constructor(private element: ElementRef, private constant: Constant, public project: Project,\n    private modalService: BsModalService, public admin: AdminService,\n    public amenityModel: Amenities, private spinner: NgxSpinnerService,\n    private translate: TranslateService\n  ) {\n    this.parameter.index = -1;\n    this.parameter.countryCount = 0;\n    this.parameter.stateCount = 0;\n    this.parameter.cityCount = 0;\n  }\n\n  ngOnInit() {\n    this.getPossessionStatuses();\n    this.getBuildingTypes();\n    this.getAmenities();\n  }\n\n  closeModal() {\n    this.amenityModel = new Amenities;\n    this.modalRef.hide();\n  }\n\n  public openPossessionStatusModal(template: TemplateRef<any>, index, id, name_en, name_es, status) {\n    this.parameter.index = index;\n    this.project.possession.id = id;\n    this.project.possession.name_en = name_en;\n    this.project.possession.name_es = name_es == null ? name_en : name_es;\n    this.project.possession.status = status;\n    this.modalRef = this.modalService.show(template);\n  }\n\n  public openBuildingTypeModal(template: TemplateRef<any>, index, id, name_en, name_es, status) {\n    this.parameter.index = index;\n    this.project.type.id = id;\n    this.project.type.name_en = name_en;\n    this.project.type.name_es = name_es;\n    this.project.type.status = status;\n    this.modalRef = this.modalService.show(template);\n  }\n\n  public openAmenityModal(template: TemplateRef<any>, index, id, icon, name_en, name_es, status) {\n    this.parameter.index = index;\n    this.amenityModel.id = id;\n    this.amenityModel.icon = icon;\n    this.amenityModel.name_en = name_en;\n    this.amenityModel.name_es = name_es;\n    this.amenityModel.status = status;\n    this.modalRef = this.modalService.show(template);\n  }\n\n\n  addPossessionStatus(id, name_en, name_es, status, type) {\n    if (type === 'edit') { this.modalRef.hide(); }\n    this.parameter.url = 'addPossessionStatus';\n    const input = new FormData();\n    input.append('name_en', name_en);\n    input.append('name_es', name_es);\n    input.append('status', status);\n\n    if (id) { input.append('id', id); }\n    this.spinner.show();\n    this.admin.postDataApi(this.parameter.url, input)\n      .subscribe(\n        success => {\n          this.spinner.hide();\n          const text = id ?\n          this.translate.instant('message.success.updatedSuccessfully') :\n          this.translate.instant('message.success.addedSuccessfully');\n          swal(this.translate.instant('swal.success'), text, 'success');\n          this.project.possession.name_en = '';\n          this.project.possession.name_es = '';\n          if (this.parameter.index !== -1) {\n            this.parameter.items[this.parameter.index] = success.data;\n          } else {\n            this.parameter.items.push(success.data);\n          }\n          this.parameter.index = -1;\n          // this.getPossessionStatuses();\n        }, error => {\n          this.spinner.hide();\n        });\n  }\n\n  addBuildingType(id, name_en, name_es, status, type) {\n    if (type === 'edit') { this.modalRef.hide(); }\n    this.parameter.url = 'addBuildingType';\n\n    const input = new FormData();\n    input.append('name_en', name_en);\n    input.append('name_es', name_es);\n    input.append('status', status);\n\n    if (id) { input.append('id', id); }\n    this.spinner.show();\n    this.admin.postDataApi(this.parameter.url, input)\n      .subscribe(\n        success => {\n          this.spinner.hide();\n          const text = id ?\n          this.translate.instant('message.success.updatedSuccessfully') :\n          this.translate.instant('message.success.addedSuccessfully');\n          this.project.type.name_en = '';\n          this.project.type.name_es = '';\n          swal(this.translate.instant('swal.success'), text, 'success');\n          if (this.parameter.index !== -1) {\n            this.parameter.projectTypes[this.parameter.index] = success.data;\n          } else {\n            this.parameter.projectTypes.push(success.data);\n          }\n          this.parameter.index = -1;\n          // this.getBuildingTypes();\n        }, error => {\n          this.spinner.hide();\n        });\n  }\n\n\n  addAmenity(id, icon, name_en, name_es, status, type) {\n    if (type === 'edit') { this.modalRef.hide(); }\n    const iconNew = this.icon ? this.icon : this.amenityModel.icon;\n    this.parameter.url = 'addAmenity';\n\n    const input = new FormData();\n\n    input.append('name_en', name_en);\n    input.append('name_es', name_es);\n    input.append('status', status);\n\n    if (this.icon) { input.append('icon', iconNew); }\n\n    if (id) { input.append('id', id); }\n    this.spinner.show();\n    this.admin.postDataApi(this.parameter.url, input)\n      .subscribe(\n        success => {\n          this.spinner.hide();\n          const text = id ?\n          this.translate.instant('message.success.updatedSuccessfully') :\n          this.translate.instant('message.success.addedSuccessfully');\n          swal(this.translate.instant('swal.success'), text, 'success');\n          if (this.parameter.index !== -1) {\n            this.parameter.amenities[this.parameter.index] = success.data;\n          } else {\n            this.parameter.amenities.push(success.data);\n          }\n          this.parameter.index = -1;\n          this.amenityModel = new Amenities;\n          // this.getAmenities();\n        }, error => {\n          this.spinner.hide();\n        });\n  }\n\n\n  getPossessionStatuses() {\n    this.spinner.show();\n    this.parameter.url = 'getPossessionStatuses';\n    const input = new FormData();\n    this.admin.postDataApi(this.parameter.url, {hide_blocked: 0})\n      .subscribe(\n        success => {\n          this.spinner.hide();\n          this.parameter.items = success.data;\n          this.parameter.total = success.data.length;\n        }, error => {\n          this.spinner.hide();\n        }\n      );\n  }\n\n\n  getBuildingTypes() {\n    this.spinner.show();\n    this.parameter.url = 'getBuildingTypes';\n    const input = new FormData();\n    this.admin.postDataApi(this.parameter.url, {hide_blocked: 0})\n      .subscribe(\n        success => {\n          this.spinner.hide();\n          this.parameter.projectTypes = success.data;\n          this.parameter.projectTypesCount = success.data.length;\n        }, error => {\n          this.spinner.hide();\n        }\n      );\n  }\n\n  getAmenities() {\n    this.spinner.show();\n    this.parameter.url = 'getAmenities';\n    const input = new FormData();\n    this.admin.postDataApi(this.parameter.url, {hide_blocked: 0})\n      .subscribe(\n        success => {\n          this.spinner.hide();\n          this.parameter.amenities = success.data;\n          this.parameter.amenitiesCount = success.data.length;\n        }, error => {\n          this.spinner.hide();\n        }\n      );\n  }\n\n  addPossessionStatusPopup(index, id, name_en, name_es, status, type) {\n    this.parameter.index = index;\n    const text = status === 1 ? this.translate.instant('message.error.wantToUnblockPossessionStatus') :\n                        this.translate.instant('message.error.wantToBlockPossessionStatus');\n    swal({\n      html: this.translate.instant('message.error.areYouSure') + '<br>' + this.parameter.text,\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: this.constant.confirmButtonColor,\n      cancelButtonColor: this.constant.cancelButtonColor,\n      confirmButtonText: 'Yes'\n    }).then((result) => {\n      if (result.value) {\n        this.addPossessionStatus(id, name_en, name_es, status, type);\n      }\n    });\n  }\n\n  addBuildingTypePopup(index, id, name_en, name_es, status, type) {\n    this.parameter.index = index;\n    const text = status === 1 ? this.translate.instant('message.error.wantToUnblockProjectType') :\n                        this.translate.instant('message.error.wantToBlockProjectType');\n    swal({\n      html: this.translate.instant('message.error.areYouSure') + '<br>' + this.parameter.text,\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: this.constant.confirmButtonColor,\n      cancelButtonColor: this.constant.cancelButtonColor,\n      confirmButtonText: 'Yes'\n    }).then((result) => {\n      if (result.value) {\n        this.addBuildingType(id, name_en, name_es, status, type);\n      }\n    });\n  }\n\n  addAmenityPopup(index, id, icon, name_en, name_es, status, type) {\n    this.parameter.index = index;\n    const text = status === 1 ? this.translate.instant('message.error.wantToUnblockAmenity') :\n                        this.translate.instant('message.error.wantToBlockAmenity');\n    swal({\n      html: this.translate.instant('message.error.areYouSure') + '<br>' + this.parameter.text,\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: this.constant.confirmButtonColor,\n      cancelButtonColor: this.constant.cancelButtonColor,\n      confirmButtonText: 'Yes'\n    }).then((result) => {\n      if (result.value) {\n        this.addAmenity(id, icon, name_en, name_es, status, type);\n      }\n    });\n  }\n\n  checkIfPossessionSpanishNameEntered(formdata: NgForm, id, name_en, name_es, status, type) {\n    const self = this;\n    formdata.reset();\n    if (name_es === '') {\n      swal({\n        text: this.translate.instant('message.error.saveEngProjectPossession'),\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: this.constant.confirmButtonColor,\n        cancelButtonColor: this.constant.cancelButtonColor,\n        confirmButtonText: 'Yes'\n      }).then((result) => {\n        if (result.value) {\n          this.addPossessionStatus(id, name_en, name_en, status, type);\n        }\n      });\n    } else {\n      self.addPossessionStatus(id, name_en, name_es, status, type);\n    }\n  }\n\n\n  checkIfTypeSpanishNameEntered(formdata: NgForm, id, name_en, name_es, status, type) {\n    const self = this;\n    formdata.reset();\n    if (name_es === '') {\n      swal({\n        text: this.translate.instant('message.error.saveEngProjectType'),\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: this.constant.confirmButtonColor,\n        cancelButtonColor: this.constant.cancelButtonColor,\n        confirmButtonText: 'Yes'\n      }).then((result) => {\n        if (result.value) {\n          this.addBuildingType(id, name_en, name_en, status, type);\n        }\n      });\n    } else {\n      self.addBuildingType(id, name_en, name_es, status, type);\n    }\n  }\n\n\n  checkIfAmenitySpanishNameEntered(formdata: NgForm, id, icon, name_en, name_es, status, type) {\n    const self = this;\n    formdata.reset();\n    if (name_es === '') {\n      swal({\n        text: this.translate.instant('message.error.saveEngAmenity'),\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: this.constant.confirmButtonColor,\n        cancelButtonColor: this.constant.cancelButtonColor,\n        confirmButtonText: 'Yes'\n      }).then((result) => {\n        if (result.value) {\n          this.addAmenity(id, icon, name_en, name_en, status, type);\n        }\n      });\n    } else {\n      self.addAmenity(id, icon, name_en, name_es, status, type);\n    }\n  }\n\n  changeListner(event) {\n    const reader = new FileReader();\n    const image = this.element.nativeElement.querySelector('.image');\n    const fileToUpload = event.target.files[0];\n    this.icon = fileToUpload;\n\n    reader.onload = function (e) {\n      const src = e.target['result'];\n      image.src = src;\n    };\n\n    reader.readAsDataURL(event.target.files[0]);\n  }\n}\n","module.exports = \".amenity-img{\\n    text-align: center\\n}\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbGF5b3V0L3NldHRpbmdzL3Byb3BlcnR5L3Byb3BlcnR5LmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxrQkFBa0I7Q0FDckIiLCJmaWxlIjoic3JjL2FwcC9sYXlvdXQvc2V0dGluZ3MvcHJvcGVydHkvcHJvcGVydHkuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5hbWVuaXR5LWltZ3tcbiAgICB0ZXh0LWFsaWduOiBjZW50ZXJcbn0iXX0= */\"","module.exports = \"\\n<div class=\\\"container-fluid\\\">\\n  <div class=\\\"breadcrumb-group\\\">\\n    <h5>{{'settings.label' | translate}}</h5>\\n      <nav class=\\\"breadcrumb\\\">\\n        <a class=\\\"breadcrumb-item\\\">{{'settings.home' | translate}}</a>\\n        <a class=\\\"breadcrumb-item\\\">{{'settings.label' | translate}}</a>\\n        <span class=\\\"breadcrumb-item active\\\">{{'property.label' | translate}}</span>\\n      </nav>\\n  </div>\\n  <div class=\\\"white-bg\\\">\\n      <div class=\\\"page-title\\\">\\n        <h3>{{'property.label' | translate}}</h3>\\n      </div>\\n\\n\\n      <div class=\\\"form-outer\\\">\\n          <div class=\\\"inline-form-group\\\">\\n             <div class=\\\"row\\\">\\n                <div class=\\\"col-md-4\\\">\\n                    <label><strong>{{'property.propertyConfiguration' | translate}}</strong></label>\\n                </div>\\n                <div class=\\\"col-md-8\\\" *ngIf=\\\"admin?.admin_acl['Settings']?.can_create==1\\\" >\\n                   <!-- <form role=\\\"form\\\" novalidate #addConfigForm=\\\"ngForm\\\" (ngSubmit)=\\\"checkIfConfigSpanishNameEntered(addConfigForm, '', addConfigForm.value.name_en, addConfigForm.value.name_es, 1, 'add')\\\">\\n                    <div class=\\\"row\\\">\\n                        <div class=\\\"col-lg-6 col-md-6\\\">\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Configuration name (English)\\\" id=\\\"name_en\\\" required [(ngModel)]=\\\"property.configuration.name_en\\\" name=\\\"name_en\\\" #name_en=\\\"ngModel\\\">\\n                        </div>\\n                        <div class=\\\"col-lg-6 col-md-6\\\">\\n                            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"Configuration name (Spanish)\\\" [(ngModel)]=\\\"property.configuration.name_es\\\" name=\\\"name_es\\\">\\n                        </div>\\n                      </div>\\n                    <button [disabled]=\\\"admin?.admin_acl['Settings']?.can_create==0 || addConfigForm.invalid\\\" type=\\\"submit\\\" class=\\\"add-btn btn\\\">\\n                       <img src=\\\"assets/img/add.png\\\" alt=\\\"img\\\">\\n                     </button>\\n                   </form> -->\\n\\n                    <div class=\\\"form-group marginB0\\\">\\n                      <div class=\\\"btn-cont text-right\\\">\\n                          <a *ngIf=\\\"admin?.admin_acl['Settings']?.can_create==1\\\" class=\\\"btn btn-primary\\\" href=\\\"javascript://\\\" (click)=\\\"openPropertyConfigModal(addPropertyConfigModal, -1, '', '', '', '', '', '', 1)\\\">\\n                            {{'location.addNew' | translate}}</a>\\n                      </div>\\n                    </div>\\n                   <!-- <button [disabled]=\\\"admin?.admin_acl['Settings']?.can_create==0\\\" type=\\\"button\\\" class=\\\"add-btn btn\\\"\\n                      (click)=\\\"openPropertyConfigModal(addPropertyConfigModal, -1, '', '', '', '', '', '', 1)\\\">\\n                      <img src=\\\"assets/img/add.png\\\" alt=\\\"img\\\">\\n                    </button> -->\\n                </div>\\n             </div>\\n          </div>\\n      </div>\\n\\n      <div class=\\\"tabel-section padding40 paddingT0\\\">\\n          <div class=\\\"table-responsive\\\">\\n            <table class=\\\"table table-striped\\\">\\n                <tr>\\n                  <th style=\\\"width:25%; text-align:left;\\\">{{'table.th.nameEn' | translate}}</th>\\n                  <th style=\\\"width:25%; text-align:left;\\\">{{'table.th.nameEs' | translate}}</th>\\n                  <th style=\\\"width:10%; text-align:left;\\\">{{'table.th.bedrooms' | translate}}</th>\\n                  <th style=\\\"width:10%; text-align:left;\\\">{{'table.th.bathrooms' | translate}}</th>\\n                  <th style=\\\"width:10%; text-align:left;\\\">{{'table.th.halfBathrooms' | translate}}</th>\\n                  <th style=\\\"width:20%\\\">{{'table.th.actions.label' | translate}}</th>\\n                </tr>\\n                <tr *ngFor=\\\"let item of parameter.items; let i=index\\\">\\n                  <td class=\\\"text-left\\\">\\n                    {{item.name_en}}\\n                  </td>\\n                  <td class=\\\"text-left\\\">\\n                    {{item.name_es}}\\n                  </td>\\n                  <td class=\\\"text-left\\\">\\n                    {{item.bedroom}}\\n                  </td>\\n                  <td class=\\\"text-left\\\">\\n                    {{item.bathroom}}\\n                  </td>\\n                  <td class=\\\"text-left\\\">\\n                    {{item.half_bathroom}}\\n                  </td>\\n                  <td>\\n                    <button title=\\\"{{'table.title.editDetails' | translate}}\\\" [disabled]=\\\"admin?.admin_acl['Settings']?.can_update==0\\\" \\n                      (click)=\\\"openPropertyConfigModal(addPropertyConfigModal, i, item.id, item.name_en, item.name_es, item.bedroom, item.bathroom, item.half_bathroom, item.status)\\\" class=\\\"action-icon\\\"><img src=\\\"assets/img/edit.png\\\" alt=\\\"img\\\"></button>\\n                    \\n                      <!-- status = 1 means unblocked -->\\n                    <button [disabled]=\\\"admin?.admin_acl['Settings']?.can_delete==0\\\"\\n                      (click)=\\\"addPropertyConfigurationPopup(i, item.id, item.name_en, item.name_es, item.bedroom, item.bathroom, item.half_bathroom, item.status==1?0:1, item.status==1?'block':'unblock')\\\" \\n                      title=\\\"{{item.status==1 ? ('table.title.block' | translate) : ('table.title.unblock' | translate)}}\\\" [ngClass]=\\\"{'unblock-bg':item.status==0}\\\"\\n                      class=\\\"action-icon\\\"><img src=\\\"assets/img/block.png\\\" alt=\\\"img\\\">\\n                    </button>\\n                  </td>\\n                </tr>\\n\\n                <div *ngIf=\\\"parameter.total == 0\\\">\\n                  <p class=\\\"show-not-found\\\">\\n                      {{'message.error.noPropertyConfigFound' | translate}}\\n                  </p>\\n                </div>\\n            </table>\\n          </div>\\n      </div>\\n\\n\\n      <div class=\\\"form-outer\\\">\\n        <div class=\\\"inline-form-group\\\">\\n           <div class=\\\"row\\\">\\n              <div class=\\\"col-md-4\\\">\\n                  <label><strong>{{'property.propertyType' | translate}}</strong></label>\\n              </div>\\n              <div class=\\\"col-md-8\\\" *ngIf=\\\"admin?.admin_acl['Settings']?.can_create==1\\\">\\n                 <form role=\\\"form\\\" novalidate #addTypeForm=\\\"ngForm\\\" (ngSubmit)=\\\"checkIfTypeSpanishNameEntered(addTypeForm, '', addTypeForm.value.name_en, addTypeForm.value.name_es, 1, 'add')\\\">\\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col-lg-6 col-md-6\\\">\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"{{'addForm.placeholder.propertyTypeEn' | translate}}\\\" id=\\\"name_en\\\" required [(ngModel)]=\\\"property.type.name_en\\\" name=\\\"name_en\\\" #name_en=\\\"ngModel\\\">\\n                        <!-- <div *ngIf=\\\"name_en.errors && (name_en.dirty || name_en.touched)\\\" class=\\\"show-not-found\\\">\\n                          <div [hidden]=\\\"!name_en.errors.required\\\">\\n                            {{constant.errorMsg.PROPERTY_TYPE_REQUIRED}}\\n                          </div>\\n                      </div>     -->\\n                    </div>\\n                    <div class=\\\"col-lg-6 col-md-6\\\">\\n                      <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"{{'addForm.placeholder.propertyTypeEs' | translate}}\\\" [(ngModel)]=\\\"property.type.name_es\\\" name=\\\"name_es\\\">\\n                    </div>\\n                  </div>\\n                  <button [disabled]=\\\"admin?.admin_acl['Settings']?.can_create==0 || addTypeForm.invalid\\\" type=\\\"submit\\\" class=\\\"add-btn btn\\\">\\n                     <img src=\\\"assets/img/add.png\\\" alt=\\\"img\\\">\\n                   </button>\\n                 </form>\\n              </div>\\n           </div>\\n        </div>\\n    </div>\\n\\n    <div class=\\\"tabel-section padding40 paddingT0\\\">\\n        <div class=\\\"table-responsive\\\">\\n          <table class=\\\"table table-striped\\\">\\n              <tr>\\n                <th style=\\\"width:40%; text-align:left;\\\">{{'table.th.nameEn' | translate}}</th>\\n                <th style=\\\"width:40%; text-align:left;\\\">{{'table.th.nameEs' | translate}}</th>\\n                <th style=\\\"width:20%\\\">{{'table.th.actions.label' | translate}}</th>\\n              </tr>\\n              <tr *ngFor=\\\"let item of parameter.propertyTypes; let j=index\\\">\\n                <td class=\\\"text-left\\\">\\n                  {{item.name_en}}\\n                </td>\\n                <td class=\\\"text-left\\\">\\n                  {{item.name_es}}\\n                </td>\\n                <td>\\n                  <button title=\\\"{{'table.title.editDetails' | translate}}\\\" [disabled]=\\\"admin?.admin_acl['Settings']?.can_update==0\\\" \\n                  (click)=\\\"openPropertyTypeModal(addPropertyTypeModal, j, item.id, item.name_en, item.name_es, item.status)\\\" class=\\\"action-icon\\\"><img src=\\\"assets/img/edit.png\\\" alt=\\\"img\\\"></button>\\n                \\n                  <!-- status = 1 means unblocked -->\\n                  <button [disabled]=\\\"admin?.admin_acl['Settings']?.can_delete==0\\\"\\n                    (click)=\\\"addPropertyTypePopup(j, item.id, item.name_en, item.name_es, item.status==1?0:1, item.status==1?'block':'unblock')\\\" \\n                    title=\\\"{{item.status==1 ? ('table.title.block' | translate) : ('table.title.unblock' | translate)}}\\\" [ngClass]=\\\"{'unblock-bg':item.status==0}\\\"\\n                    class=\\\"action-icon\\\"><img src=\\\"assets/img/block.png\\\" alt=\\\"img\\\">\\n                  </button>\\n                </td>\\n              </tr>\\n\\n              <div *ngIf=\\\"parameter.total == 0\\\">\\n                <p class=\\\"show-not-found\\\">\\n                    {{'message.error.noPropertyTypeFound' | translate}}\\n                </p>\\n              </div>\\n          </table>\\n        </div>\\n    </div>\\n\\n\\n      <div class=\\\"form-outer\\\">\\n        <div class=\\\"inline-form-group\\\">\\n            <div class=\\\"row\\\">\\n              <div class=\\\"col-md-4\\\">\\n                  <label>{{'property.amenities' | translate}}</label>\\n              </div>\\n              <div class=\\\"col-md-8\\\" *ngIf=\\\"admin?.admin_acl['Settings']?.can_create==1\\\">\\n                 <form role=\\\"form\\\" novalidate #addAmenityForm=\\\"ngForm\\\" (ngSubmit)=\\\"checkIfAmenitySpanishNameEntered(addAmenityForm, '', '', addAmenityForm.value.name_en, addAmenityForm.value.name_es, 1, 'add')\\\">\\n                  <div class=\\\"browse-files\\\">\\n                    <input accept=\\\"image/*\\\" (change)=\\\"changeListner($event)\\\" type=\\\"file\\\" class=\\\"image form-control\\\" placeholder=\\\"{{'addForm.placeholder.amenity' | translate}}\\\" id=\\\"icon\\\" required [(ngModel)]=\\\"property.amenities.icon\\\" name=\\\"icon\\\" #icon=\\\"ngModel\\\">\\n                    <span>{{'property.amenities' | translate}}</span>\\n                    <!-- <div *ngIf=\\\"icon.errors && (icon.dirty || icon.touched)\\\" class=\\\"show-not-found\\\">\\n                      <div [hidden]=\\\"!icon.errors.required\\\">\\n                        {{constant.errorMsg.FILE_REQUIRED}}\\n                      </div>\\n                  </div> -->\\n                  </div>\\n                  <!-- <input type=\\\"file\\\" class=\\\"form-control\\\" placeholder=\\\"Amenity\\\" id=\\\"icon\\\" required [(ngModel)]=\\\"property.amenities.icon\\\" name=\\\"icon\\\" #icon=\\\"ngModel\\\">\\n                    <div *ngIf=\\\"icon.errors && (icon.dirty || icon.touched)\\\" class=\\\"show-not-found\\\">\\n                      <div [hidden]=\\\"!icon.errors.required\\\">\\n                        {{constant.errorMsg.PROPERTY_TYPE_REQUIRED}}\\n                      </div>\\n                  </div> -->\\n                  \\n                  <div class=\\\"row\\\">\\n                    <div class=\\\"col-lg-6 col-md-6\\\">\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"{{'addForm.placeholder.amenityEn' | translate}}\\\" id=\\\"name_en\\\" required [(ngModel)]=\\\"property.amenities.name_en\\\" name=\\\"name_en\\\" #name_en=\\\"ngModel\\\">\\n                        <!-- <div *ngIf=\\\"name_en.errors && (name_en.dirty || name_en.touched)\\\" class=\\\"show-not-found\\\">\\n                          <div [hidden]=\\\"!name_en.errors.required\\\">\\n                            {{constant.errorMsg.PROPERTY_TYPE_REQUIRED}}\\n                          </div>\\n                      </div>     -->\\n                    </div>\\n                    <div class=\\\"col-lg-6 col-md-6\\\">\\n                        <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"{{'addForm.placeholder.amenityEs' | translate}}\\\" [(ngModel)]=\\\"property.amenities.name_es\\\" name=\\\"name_es\\\">\\n                    </div>\\n                  </div>\\n                  <button [disabled]=\\\"admin?.admin_acl['Settings']?.can_create==0 || addAmenityForm.invalid\\\" type=\\\"submit\\\" class=\\\"add-btn btn\\\">\\n                     <img src=\\\"assets/img/add.png\\\" alt=\\\"img\\\">\\n                   </button>\\n                 </form>\\n              </div>\\n              <!-- <div class=\\\"col-md-8\\\">\\n                  <div class=\\\"browse-files\\\">\\n                    <input type=\\\"file\\\" name=\\\"\\\">\\n                    <span>Browse</span>\\n                  </div>\\n                  <input type=\\\"text\\\" name=\\\"\\\">\\n                  <button class=\\\"add-btn\\\" (click)=\\\"openAmenitiesModal(addAmenitiesModal, '', '', '', '', 1)\\\">\\n                    <img src=\\\"assets/img/add.png\\\" alt=\\\"img\\\">\\n                  </button>\\n              </div> -->\\n            </div>\\n        </div>\\n      </div>\\n\\n      <div class=\\\"tabel-section padding40\\\">\\n        <div class=\\\"table-responsive\\\">\\n            <table class=\\\"table table-striped\\\">\\n              <tr>\\n                  <th style=\\\"width:20%\\\">{{'table.th.image' | translate}}</th>\\n                  <th style=\\\"width:30%; text-align:left;\\\">{{'table.th.nameEn' | translate}}</th>\\n                  <th style=\\\"width:30%; text-align:left;\\\">{{'table.th.nameEs' | translate}}</th>\\n                  <th style=\\\"width:20%\\\">{{'table.th.actions.label' | translate}}</th>\\n              </tr>\\n              <tr *ngFor=\\\"let item of parameter.amenities; let k=index\\\">\\n                  <td>\\n                    <!-- <i class=\\\"fa fa-building\\\"></i> -->\\n                    <img alt=\\\"image\\\" height=\\\"30\\\" width=\\\"30\\\" src=\\\"{{item.icon}}\\\">\\n                  </td>\\n                  <td class=\\\"text-left\\\">\\n                    {{item.name_en}}\\n                  </td>\\n                  <td class=\\\"text-left\\\">\\n                    {{item.name_es}}\\n                  </td>\\n                  <td>\\n                      <button title=\\\"{{'table.title.editDetails' | translate}}\\\" [disabled]=\\\"admin?.admin_acl['Settings']?.can_update==0\\\" \\n                      (click)=\\\"openAmenityModal(addAmenityModal, k, item.id, item.icon, item.name_en, item.name_es, item.status)\\\" class=\\\"action-icon\\\"><img src=\\\"assets/img/edit.png\\\" alt=\\\"img\\\"></button>\\n                    \\n                      <!-- status = 1 means unblocked -->\\n                      <button [disabled]=\\\"admin?.admin_acl['Settings']?.can_delete==0\\\"\\n                        (click)=\\\"addAmenityPopup(k, item.id, item.icon, item.name_en, item.name_es, item.status==1?0:1, item.status==1?'block':'unblock')\\\" \\n                        title=\\\"{{item.status==1 ? ('table.title.block' | translate) : ('table.title.unblock' | translate)}}\\\" [ngClass]=\\\"{'unblock-bg':item.status==0}\\\"\\n                        class=\\\"action-icon\\\"><img src=\\\"assets/img/block.png\\\" alt=\\\"img\\\">\\n                      </button>\\n                  </td>\\n              </tr>\\n            </table>\\n        </div>\\n      </div>\\n      <!-- <div class=\\\"btn-cont text-right padding40 paddingT0\\\">\\n        <button class=\\\"btn btn-primary\\\">Save</button>\\n      </div> -->\\n  </div>\\n</div>\\n\\n\\n<!-- add configuration modal -->\\n<ng-template #addPropertyConfigModal>\\n  <div class=\\\"modal-content\\\">\\n    <div class=\\\"modal-header my-modal-header\\\">\\n      <h4 class=\\\"modal-title\\\">{{parameter.index!='-1' ? ('property.editPropertyConfig' | translate) : ('property.addPropertyConfig' | translate)}}</h4>\\n      <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n    </div>\\n    <form class=\\\"form-horizontal my-modal-form\\\" role=\\\"form\\\" novalidate #addForm=\\\"ngForm\\\" (ngSubmit)=\\\"checkIfConfigSpanishNameEntered(addForm, property.configuration.id, addForm.value.name_en, addForm.value.name_es, addForm.value.bedroom, addForm.value.bathroom, addForm.value.half_bathroom, property.configuration.status, 'edit')\\\">\\n      <div class=\\\"modal-body my-modal-body\\\">\\n        <div class=\\\"form-group\\\">\\n          <input autocomplete=\\\"off\\\" type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"{{'addForm.placeholder.propertyConfigEn' | translate}}\\\" id=\\\"name_en\\\" required [(ngModel)]=\\\"property.configuration.name_en\\\" name=\\\"name_en\\\" #name_en=\\\"ngModel\\\">\\n          <!-- <div *ngIf=\\\"name_en.errors && (name_en.dirty || name_en.touched)\\\" class=\\\"show-not-found\\\">\\n              <div [hidden]=\\\"!name_en.errors.required\\\">\\n                {{constant.errorMsg.PROPERTY_TYPE_REQUIRED}}\\n              </div>\\n          </div> -->\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"{{'addForm.placeholder.propertyConfigEs' | translate}}\\\" [(ngModel)]=\\\"property.configuration.name_es\\\" name=\\\"name_es\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" required placeholder=\\\"{{'addForm.placeholder.bedrooms' | translate}}\\\" [(ngModel)]=\\\"property.configuration.bedroom\\\" name=\\\"bedroom\\\" #bedroom=\\\"ngModel\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" required placeholder=\\\"{{'addForm.placeholder.bathrooms' | translate}}\\\" [(ngModel)]=\\\"property.configuration.bathroom\\\" name=\\\"bathroom\\\" #bathroom=\\\"ngModel\\\">\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <input type=\\\"number\\\" class=\\\"form-control\\\" required placeholder=\\\"{{'addForm.placeholder.halfBathrooms' | translate}}\\\" [(ngModel)]=\\\"property.configuration.half_bathroom\\\" name=\\\"half_bathroom\\\" #half_bathroom=\\\"ngModel\\\">\\n        </div>\\n      </div>\\n      <div class=\\\"modal-footer btn-cont\\\">\\n        <button type=\\\"submit\\\" [disabled]=\\\"admin?.admin_acl['Settings']?.can_update==0 || addForm.invalid\\\" class=\\\"btn btn-primary-new\\\">{{'addForm.submit' | translate}}</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">{{'addForm.close' | translate}}</button>\\n      </div>\\n    </form>\\n  </div>\\n</ng-template>\\n\\n\\n<!-- add PropertyTypeModal modal -->\\n<ng-template #addPropertyTypeModal>\\n  <div class=\\\"modal-content\\\">\\n    <div class=\\\"modal-header my-modal-header\\\">\\n      <h4 class=\\\"modal-title\\\">{{'property.editPropertyType' | translate}}</h4>\\n      <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n        <span aria-hidden=\\\"true\\\">&times;</span>\\n      </button>\\n    </div>\\n    <form class=\\\"form-horizontal my-modal-form\\\" role=\\\"form\\\" novalidate #addForm1=\\\"ngForm\\\" (ngSubmit)=\\\"checkIfTypeSpanishNameEntered(addForm1, property.type.id, addForm1.value.name_en, addForm1.value.name_es, property.type.status, 'edit')\\\">\\n      <div class=\\\"modal-body my-modal-body\\\">\\n        <div class=\\\"form-group\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"{{'addForm.placeholder.propertyTypeEn' | translate}}\\\" id=\\\"name_en\\\" required [(ngModel)]=\\\"property.type.name_en\\\" name=\\\"name_en\\\" #name_en=\\\"ngModel\\\">\\n          <!-- <div *ngIf=\\\"name_en.errors && (name_en.dirty || name_en.touched)\\\" class=\\\"show-not-found\\\">\\n              <div [hidden]=\\\"!name_en.errors.required\\\">\\n                {{constant.errorMsg.PROPERTY_TYPE_REQUIRED}}\\n              </div>\\n          </div> -->\\n        </div>\\n        <div class=\\\"form-group\\\">\\n          <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"{{'addForm.placeholder.propertyTypeEs' | translate}}\\\" [(ngModel)]=\\\"property.type.name_es\\\" name=\\\"name_es\\\">\\n        </div>\\n      </div>\\n      <div class=\\\"modal-footer btn-cont\\\">\\n        <button type=\\\"submit\\\" [disabled]=\\\"admin?.admin_acl['Settings']?.can_update==0 || addForm1.invalid\\\" class=\\\"btn btn-primary-new\\\">{{'addForm.submit' | translate}}</button>\\n        <button type=\\\"button\\\" class=\\\"btn btn-default\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">{{'addForm.close' | translate}}</button>\\n      </div>\\n    </form>\\n  </div>\\n</ng-template>\\n\\n\\n<!-- addAmenitiesModal -->\\n<ng-template #addAmenityModal>\\n    <div class=\\\"modal-content\\\">\\n      <div class=\\\"modal-header my-modal-header\\\">\\n        <h4 class=\\\"modal-title\\\">{{'property.editAmenity' | translate}}</h4>\\n        <button type=\\\"button\\\" class=\\\"close pull-right\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">\\n          <span aria-hidden=\\\"true\\\">&times;</span>\\n        </button>\\n      </div>\\n      <form class=\\\"form-horizontal my-modal-form\\\" role=\\\"form\\\" novalidate #addForm2=\\\"ngForm\\\" (ngSubmit)=\\\"checkIfAmenitySpanishNameEntered(addForm2, property.amenities.id, '', addForm2.value.name_en, addForm2.value.name_es, property.amenities.status, 'edit')\\\">\\n        <div class=\\\"modal-body my-modal-body\\\">\\n          <div class=\\\"form-group amenity-img\\\">\\n            <img src=\\\"{{property.amenities.icon}}\\\" width=\\\"100\\\" height=\\\"100\\\" class=\\\"image1\\\">\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <input accept=\\\"image/*\\\" (change)=\\\"changeListner1($event)\\\" type=\\\"file\\\" class=\\\"form-control\\\">\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"{{'addForm.placeholder.amenityEn' | translate}}\\\" id=\\\"name_en\\\" required [(ngModel)]=\\\"property.amenities.name_en\\\" name=\\\"name_en\\\" #name_en=\\\"ngModel\\\">\\n            <!-- <div *ngIf=\\\"name_en.errors && (name_en.dirty || name_en.touched)\\\" class=\\\"show-not-found\\\">\\n                <div [hidden]=\\\"!name_en.errors.required\\\">\\n                  {{constant.errorMsg.PROPERTY_TYPE_REQUIRED}}\\n                </div>\\n            </div> -->\\n          </div>\\n          <div class=\\\"form-group\\\">\\n            <input type=\\\"text\\\" class=\\\"form-control\\\" placeholder=\\\"{{'addForm.placeholder.amenityEs' | translate}}\\\" [(ngModel)]=\\\"property.amenities.name_es\\\" name=\\\"name_es\\\">\\n          </div>\\n        </div>\\n        <div class=\\\"modal-footer btn-cont\\\">\\n          <button type=\\\"submit\\\" [disabled]=\\\"admin?.admin_acl['Settings']?.can_update==0 || addForm2.invalid\\\" class=\\\"btn btn-primary-new\\\">{{'addForm.submit' | translate}}</button>\\n          <button type=\\\"button\\\" class=\\\"btn btn-default\\\" aria-label=\\\"Close\\\" (click)=\\\"modalRef.hide()\\\">{{'addForm.close' | translate}}</button>\\n        </div>\\n      </form>\\n  </div>\\n</ng-template>\\n  \"","import { Component, OnInit, TemplateRef, ElementRef } from '@angular/core';\nimport { AdminService } from 'src/app/services/admin.service';\nimport { Router } from '@angular/router';\nimport { IProperty } from 'src/app/common/property';\nimport { BsModalRef, BsModalService } from 'ngx-bootstrap/modal';\nimport { Constant } from 'src/app/common/constants';\nimport { Property } from 'src/app/models/property.model';\nimport { NgForm } from '@angular/forms';\nimport { NgxSpinnerService } from 'ngx-spinner';\nimport { TranslateService } from '@ngx-translate/core';\ndeclare let swal: any;\n\n@Component({\n  selector: 'app-property',\n  templateUrl: './property.component.html',\n  styleUrls: ['./property.component.css'],\n  providers: [Constant, Property]\n})\n\nexport class PropertyComponent implements OnInit {\n\n  public parameter: IProperty = {};\n  public modalRef: BsModalRef;\n  icon: any;\n\n  constructor(private element: ElementRef, private constant: Constant, public property: Property,\n    private modalService: BsModalService, public admin: AdminService, private router: Router,\n    private spinner: NgxSpinnerService,\n    private translate: TranslateService\n  ) {\n    this.parameter.index = -1;\n    this.parameter.countryCount = 0;\n    this.parameter.stateCount = 0;\n    this.parameter.cityCount = 0;\n  }\n\n  ngOnInit() {\n    this.getConfigurations();\n    this.getPropertyTypes();\n    this.getAmenities();\n  }\n\n  public openPropertyConfigModal(template: TemplateRef<any>, index, id, name_en, name_es, bedroom, bathroom, half_bathroom, status) {\n    this.parameter.index = index;\n    this.property.configuration.id = id;\n    this.property.configuration.name_en = name_en;\n    this.property.configuration.name_es = name_es == null ? name_en : name_es;\n    this.property.configuration.bedroom = bedroom;\n    this.property.configuration.bathroom = bathroom;\n    this.property.configuration.half_bathroom = half_bathroom;\n    this.property.configuration.status = status;\n    this.modalRef = this.modalService.show(template);\n  }\n\n  public openPropertyTypeModal(template: TemplateRef<any>, index, id, name_en, name_es, status) {\n    this.parameter.index = index;\n    this.property.type.id = id;\n    this.property.type.name_en = name_en;\n    this.property.type.name_es = name_es;\n    this.property.type.status = status;\n    this.modalRef = this.modalService.show(template);\n  }\n\n  public openAmenityModal(template: TemplateRef<any>, index, id, icon, name_en, name_es, status) {\n    this.parameter.index = index;\n    this.property.amenities.id = id;\n    this.property.amenities.icon = icon;\n    this.property.amenities.name_en = name_en;\n    this.property.amenities.name_es = name_es;\n    this.property.amenities.status = status;\n    this.modalRef = this.modalService.show(template);\n  }\n\n\n  addPropertyConfiguration(id, name_en, name_es, bedroom, bathroom, half_bathroom, status, type) {\n    if (type === 'edit') { this.modalRef.hide(); }\n    this.parameter.url = 'addConfiguration';\n    const input = new FormData();\n    input.append('name_en', name_en);\n    input.append('name_es', name_es);\n    input.append('bedroom', bedroom);\n    input.append('bathroom', bathroom);\n    input.append('half_bathroom', half_bathroom);\n    input.append('status', status);\n\n    if (id) { input.append('id', id); }\n    this.spinner.show();\n    this.admin.postDataApi(this.parameter.url, input)\n      .subscribe(\n        success => {\n          this.spinner.hide();\n          const text = id ?\n          this.translate.instant('message.success.updatedSuccessfully') :\n          this.translate.instant('message.success.addedSuccessfully');\n          // this.getConfigurations();\n          this.property.configuration.id = '';\n          this.property.configuration.name_en = '';\n          this.property.configuration.name_es = '';\n          swal(this.translate.instant('swal.success'), text, 'success');\n          if (this.parameter.index !== -1) {\n            this.parameter.items[this.parameter.index] = success.data;\n          } else {\n            this.parameter.items.push(success.data);\n          }\n          this.parameter.index = -1;\n        }, error => {\n          this.spinner.hide();\n        }\n      );\n  }\n\n  addPropertyType(id, name_en, name_es, status, type) {\n    if (type === 'edit') { this.modalRef.hide(); }\n    this.parameter.url = 'addPropertyType';\n    const input = new FormData();\n    input.append('name_en', name_en);\n    input.append('name_es', name_es);\n    input.append('status', status);\n\n    if (id) { input.append('id', id); }\n    this.spinner.show();\n    this.admin.postDataApi(this.parameter.url, input)\n      .subscribe(\n        success => {\n          this.spinner.hide();\n          const text = id ?\n          this.translate.instant('message.success.updatedSuccessfully') :\n          this.translate.instant('message.success.addedSuccessfully');\n          swal(this.translate.instant('swal.success'), text, 'success');\n          this.property.type.id = '';\n          this.property.type.name_en = '';\n          this.property.type.name_es = '';\n          if (this.parameter.index !== -1) {\n            this.parameter.propertyTypes[this.parameter.index] = success.data;\n          } else {\n            this.parameter.propertyTypes.push(success.data);\n          }\n          this.parameter.index = -1;\n        }, error => {\n          this.spinner.hide();\n        }\n      );\n  }\n\n\n  addAmenity(id, icon, name_en, name_es, status, type) {\n    if (type === 'edit') { this.modalRef.hide(); }\n    const iconNew = this.icon ? this.icon : this.property.amenities.icon;\n    this.parameter.url = 'addPropertyAmenity';\n    const input = new FormData();\n    input.append('name_en', name_en);\n    input.append('name_es', name_es);\n    input.append('status', status);\n\n    if (this.icon) { input.append('icon', iconNew); }\n\n    if (id) { input.append('id', id); }\n    this.spinner.show();\n    this.admin.postDataApi(this.parameter.url, input)\n      .subscribe(\n        success => {\n          this.spinner.hide();\n          const text = id ?\n          this.translate.instant('message.success.updatedSuccessfully') :\n          this.translate.instant('message.success.addedSuccessfully');\n          swal(this.translate.instant('swal.success'), text, 'success');\n          this.property.amenities.id = '';\n          this.property.amenities.name_en = '';\n          this.property.amenities.name_es = '';\n          this.property.amenities.icon = '';\n          if (this.parameter.index !== -1) {\n            this.parameter.amenities[this.parameter.index] = success.data;\n          } else {\n            this.parameter.amenities.push(success.data);\n          }\n          this.parameter.index = -1;\n        }, error => {\n          this.spinner.hide();\n        }\n      );\n  }\n\n\n  getConfigurations() {\n    this.spinner.show();\n    this.parameter.url = 'getConfigurations';\n    const input = new FormData();\n    this.admin.postDataApi(this.parameter.url, {hide_blocked: 0})\n      .subscribe(\n        success => {\n          this.spinner.hide();\n          this.parameter.items = success.data;\n          this.parameter.total = success.data.length;\n        },\n        error => {\n          this.spinner.hide();\n        }\n      );\n  }\n\n\n  getPropertyTypes() {\n    this.spinner.show();\n    this.parameter.url = 'getPropertyTypes';\n    const input = new FormData();\n    this.admin.postDataApi(this.parameter.url, {hide_blocked: 0})\n      .subscribe(\n        success => {\n          this.spinner.hide();\n          this.parameter.propertyTypes = success.data;\n          this.parameter.propertyTypesCount = success.data.length;\n        },\n        error => {\n          this.spinner.hide();\n        }\n      );\n  }\n\n  getAmenities() {\n    this.spinner.show();\n    this.parameter.url = 'getPropertyAmenities';\n    const input = new FormData();\n    this.admin.postDataApi(this.parameter.url, {hide_blocked: 0})\n      .subscribe(\n        success => {\n          this.spinner.hide();\n          this.parameter.amenities = success.data;\n          this.parameter.amenitiesCount = success.data.length;\n        }, error => {\n          this.spinner.hide();\n        }\n      );\n  }\n\n  addPropertyConfigurationPopup(index, id, name_en, name_es, bedroom, bathroom, half_bathroom, status, type) {\n    this.parameter.index = index;\n    const self = this;\n    const text = status === 1 ? this.translate.instant('message.error.wantToUnblockPropertyConfig') :\n                        this.translate.instant('message.error.wantToBlockPropertyConfig');\n    swal({\n      html: this.translate.instant('message.error.areYouSure') + '<br>' + this.parameter.text,\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: this.constant.confirmButtonColor,\n      cancelButtonColor: this.constant.cancelButtonColor,\n      confirmButtonText: 'Yes'\n    }).then((result) => {\n      if (result.value) {\n        this.addPropertyConfiguration(id, name_en, name_es, bedroom, bathroom, half_bathroom, status, type);\n      }\n    });\n  }\n\n  addPropertyTypePopup(index, id, name_en, name_es, status, type) {\n    this.parameter.index = index;\n    const self = this;\n    const text = status === 1 ? this.translate.instant('message.error.wantToUnblockPropertyType') :\n                        this.translate.instant('message.error.wantToBlockPropertyType');\n    swal({\n      html: this.translate.instant('message.error.areYouSure') + '<br>' + this.parameter.text,\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: this.constant.confirmButtonColor,\n      cancelButtonColor: this.constant.cancelButtonColor,\n      confirmButtonText: 'Yes'\n    }).then((result) => {\n      if (result.value) {\n        this.addPropertyType(id, name_en, name_es, status, type);\n      }\n    });\n  }\n\n  addAmenityPopup(index, id, icon, name_en, name_es, status, type) {\n    this.parameter.index = index;\n    const self = this;\n    const text = status === 1 ? this.translate.instant('message.error.wantToUnblockAmenity') :\n                        this.translate.instant('message.error.wantToBlockAmenity');\n    swal({\n      html: this.translate.instant('message.error.areYouSure') + '<br>' + this.parameter.text,\n      type: 'warning',\n      showCancelButton: true,\n      confirmButtonColor: this.constant.confirmButtonColor,\n      cancelButtonColor: this.constant.cancelButtonColor,\n      confirmButtonText: 'Yes'\n    }).then((result) => {\n      if (result.value) {\n        this.addAmenity(id, icon, name_en, name_es, status, type);\n      }\n    });\n  }\n\n  checkIfConfigSpanishNameEntered(formdata: NgForm, id, name_en, name_es, bedroom, bathroom, half_bathroom, status, type) {\n    const self = this;\n    formdata.reset();\n    if (name_es === '') {\n      swal({\n        text: this.translate.instant('message.error.saveEngPropertyConfig'),\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: this.constant.confirmButtonColor,\n        cancelButtonColor: this.constant.cancelButtonColor,\n        confirmButtonText: 'Yes'\n      }).then((result) => {\n        if (result.value) {\n          this.addPropertyConfiguration(id, name_en, name_en, bedroom, bathroom, half_bathroom, status, type);\n        }\n      });\n    } else {\n      self.addPropertyConfiguration(id, name_en, name_es, bedroom, bathroom, half_bathroom, status, type);\n    }\n  }\n\n\n  checkIfTypeSpanishNameEntered(formdata: NgForm, id, name_en, name_es, status, type) {\n    const self = this;\n    formdata.reset();\n    if (name_es === '') {\n      swal({\n        text: this.translate.instant('message.error.saveEngPropertyType'),\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: this.constant.confirmButtonColor,\n        cancelButtonColor: this.constant.cancelButtonColor,\n        confirmButtonText: 'Yes'\n      }).then((result) => {\n        if (result.value) {\n          this.addPropertyType(id, name_en, name_en, status, type);\n        }\n      });\n    } else {\n      self.addPropertyType(id, name_en, name_es, status, type);\n    }\n  }\n\n\n  checkIfAmenitySpanishNameEntered(formdata: NgForm, id, icon, name_en, name_es, status, type) {\n    const self = this;\n    formdata.reset();\n    if (name_es === '') {\n      swal({\n        text: this.translate.instant('message.error.saveEngAmenity'),\n        type: 'warning',\n        showCancelButton: true,\n        confirmButtonColor: this.constant.confirmButtonColor,\n        cancelButtonColor: this.constant.cancelButtonColor,\n        confirmButtonText: 'Yes'\n      }).then((result) => {\n        if (result.value) {\n          this.addAmenity(id, icon, name_en, name_en, status, type);\n        }\n      });\n    } else {\n      self.addAmenity(id, icon, name_en, name_es, status, type);\n    }\n  }\n\n\n  changeListner(event) {\n    const reader = new FileReader();\n    const image = this.element.nativeElement.querySelector('.image');\n    const fileToUpload = event.target.files[0];\n    this.icon = fileToUpload;\n\n    reader.onload = function (e) {\n      const src = e.target['result'];\n      image.src = src;\n    };\n\n    reader.readAsDataURL(event.target.files[0]);\n  }\n\n\n  changeListner1(event) {\n    const reader = new FileReader();\n\n    const image = this.element.nativeElement.querySelector('.image1');\n\n    const fileToUpload = event.target.files[0];\n    this.icon = fileToUpload;\n\n    reader.onload = function (e) {\n      const src = e.target['result'];\n      image.src = src;\n    };\n\n    reader.readAsDataURL(event.target.files[0]);\n  }\n}\n","module.exports = \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2xheW91dC9zZXR0aW5ncy9zZXR0aW5ncy5jb21wb25lbnQuY3NzIn0= */\"","module.exports = \"\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-settings',\n  templateUrl: './settings.component.html',\n  styleUrls: ['./settings.component.css']\n})\nexport class SettingsComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","// third party libraries\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { TranslateModule } from '@ngx-translate/core';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { NgxSpinnerModule } from 'ngx-spinner';\nimport { ModalModule } from 'ngx-bootstrap/modal';\nimport { AgmCoreModule } from '@agm/core';\nimport { Ng2TelInputModule } from 'ng2-tel-input';\nimport { Routes, RouterModule } from '@angular/router';\n\n// components\nimport { LocationComponent } from './location/location.component';\nimport { SettingsComponent } from './settings.component';\nimport { LocalityComponent } from './locality/locality.component';\nimport { PropertyComponent } from './property/property.component';\nimport { ProjectComponent } from './project/project.component';\nimport { EditProfileComponent } from './edit-profile/edit-profile.component';\nimport { DocumentsComponent } from './documents/documents.component';\nimport { AclUserGuard } from '../../guards/acl-user.guard';\nimport { ProfileComponent } from './profile/profile.component';\nimport { ChangePasswordComponent } from './change-password/change-password.component';\nimport { DefaultSettingsComponent } from './default-settings/default-settings.component';\nimport { MatchValueDirective } from 'src/app/directives/match-value.directive';\nimport { SharedModule } from 'src/app/modules/shared.module';\n\nconst routes: Routes = [\n  { path: 'view-profile', component: ProfileComponent },\n  { path: 'change-password', component: ChangePasswordComponent },\n  {\n    path: 'default-settings', component: DefaultSettingsComponent,\n    canActivate: [AclUserGuard], data: { roles: ['Settings', 'can_read', ''] }\n  },\n  { path: 'edit-profile', component: EditProfileComponent },\n  {\n    path: 'setting-location', component: LocationComponent,\n    canActivate: [AclUserGuard], data: { roles: ['Settings', 'can_read', ''] }\n  },\n  {\n    path: 'setting-locality', component: LocalityComponent,\n    canActivate: [AclUserGuard], data: { roles: ['Settings', 'can_read', ''] }\n  },\n  {\n    path: 'setting-property', component: PropertyComponent,\n    canActivate: [AclUserGuard], data: { roles: ['Settings', 'can_read', ''] }\n  },\n  {\n    path: 'setting-project', component: ProjectComponent,\n    canActivate: [AclUserGuard], data: { roles: ['Settings', 'can_read', ''] }\n  },\n  {\n    path: 'documents-listing', component: DocumentsComponent,\n    canActivate: [AclUserGuard], data: { roles: ['Settings', 'can_read', ''] }\n  }\n];\n\n\n@NgModule({\n\n  declarations: [\n    EditProfileComponent,\n    LocationComponent,\n    LocalityComponent,\n    PropertyComponent,\n    ProjectComponent,\n    SettingsComponent,\n    DocumentsComponent,\n    ProfileComponent,\n    ChangePasswordComponent,\n    DefaultSettingsComponent,\n    MatchValueDirective\n  ],\n  imports: [\n    RouterModule.forChild(routes),\n    CommonModule,\n    TranslateModule,\n    FormsModule,\n    ReactiveFormsModule,\n    ModalModule.forRoot(),      // modal\n    NgxSpinnerModule,\n    AgmCoreModule.forRoot({\n      apiKey: 'AIzaSyDykCJGMqHIwJluSmSiqKTJBVN2KauM_uQ',\n      libraries: ['drawing', 'places']\n    }),\n    Ng2TelInputModule,\n    SharedModule\n  ],\n  exports: [RouterModule]\n})\n\nexport class SettingsModule { }\n","export class Locality {\n    id: any;\n    name_es: string;\n    name_en: string;\n    status: any;\n    city_id: any;\n    poly_coordinates: any;\n    price_per_sqft: any;\n}\n","export class Location {\n    public countryModel = {\n        country_id: '',\n        name_es: '',\n        name_en: '',\n        status: 0\n    };\n\n    public stateModel = {\n        country_id: '',\n        state_id: '',\n        name_es: '',\n        name_en: '',\n        status: 0\n    };\n\n    public cityModel = {\n        country_id: '',\n        state_id: '',\n        city_id: '',\n        name_es: '',\n        name_en: '',\n        status: 0\n    };\n\n    public localityModel = {\n        city_id: '',\n        locality_id: '',\n        name_es: '',\n        name_en: '',\n        status: 0,\n        poly_coordinates: []\n    };\n}\n\nexport class Country {\n    id: string;\n    name: string;\n    name_es: string;\n    name_en: string;\n    status: string;\n}\n\nexport class State {\n    id: string;\n    country_id: string;\n    name: string;\n    name_es: string;\n    name_en: string;\n    status: string;\n    country?: Country;\n}\n\nexport class City {\n    id: string;\n    state_id: string;\n    name: string;\n    name_es: string;\n    name_en: string;\n    status: string;\n    state?: State;\n}\n","export class Project {\n    public possession = {\n        id: '',\n        name_es: '',\n        name_en: '',\n        status: 0\n    };\n\n    public type = {\n        id: '',\n        name_es: '',\n        name_en: '',\n        status: 0\n    };\n\n    public amenities = {\n        id: '',\n        icon: '',\n        name_es: '',\n        name_en: '',\n        status: 0\n    };\n}\n\nexport class Amenities {\n    id: string;\n    icon: string;\n    name_es: string;\n    name_en: string;\n    status: string;\n}\n","export class Property {\n    public configuration = {\n        id: '',\n        name_es: '',\n        name_en: '',\n        bedroom: 0,\n        bathroom: 0,\n        half_bathroom: 0,\n        status: 0\n    };\n\n    public type = {\n        id: '',\n        name_es: '',\n        name_en: '',\n        status: 0\n    };\n\n    public amenities = {\n        id: '',\n        icon: '',\n        name_es: '',\n        name_en: '',\n        status: 0\n    };\n}\n","export class Settings {\n    bulk_approve_project: any;\n    bulk_approve_property: any;\n    cash_limit: any;\n}\n"],"sourceRoot":""}