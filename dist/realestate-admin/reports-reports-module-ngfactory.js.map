{"version":3,"sources":["webpack:///./node_modules/@swimlane/ngx-charts/release/bar-chart/bar-vertical-2d.component.d.ts.BarVertical2DComponent.html","webpack:///./node_modules/@swimlane/ngx-charts/release/common/grid-panel-series.component.d.ts.GridPanelSeriesComponent.html","webpack:///./node_modules/@swimlane/ngx-charts/release/common/grid-panel.component.d.ts.GridPanelComponent.html","webpack:///./src/app/layout/reports/bank/bank.component.html","webpack:///./src/app/layout/reports/bank/bank.component.ts","webpack:///./src/app/layout/reports/buyer/buyer.component.html","webpack:///./src/app/layout/reports/buyer/buyer.component.ts","webpack:///./src/app/layout/reports/notary/notary.component.html","webpack:///./src/app/layout/reports/notary/notary.component.ts","webpack:///./src/app/layout/reports/reports.module.ts","webpack:///./src/app/layout/reports/seller/seller.component.html","webpack:///./src/app/layout/reports/seller/seller.component.ts"],"names":[],"mappings":"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","file":"reports-reports-module-ngfactory.js","sourcesContent":["\n    <ngx-charts-chart\n      [view]=\"[width, height]\"\n      [showLegend]=\"legend\"\n      [legendOptions]=\"legendOptions\"\n      [activeEntries]=\"activeEntries\"\n      [animations]=\"animations\"\n      (legendLabelActivate)=\"onActivate($event)\"\n      (legendLabelDeactivate)=\"onDeactivate($event)\"\n      (legendLabelClick)=\"onClick($event)\">\n      <svg:g [attr.transform]=\"transform\" class=\"bar-chart chart\">\n        <svg:g ngx-charts-grid-panel-series\n          [xScale]=\"groupScale\"\n          [yScale]=\"valueScale\"\n          [data]=\"results\"\n          [dims]=\"dims\"\n          orient=\"vertical\">\n        </svg:g>\n        <svg:g ngx-charts-x-axis\n          *ngIf=\"xAxis\"\n          [xScale]=\"groupScale\"\n          [dims]=\"dims\"\n          [showLabel]=\"showXAxisLabel\"\n          [labelText]=\"xAxisLabel\"\n          [trimTicks]=\"trimXAxisTicks\"\n          [maxTickLength]=\"maxXAxisTickLength\"\n          [tickFormatting]=\"xAxisTickFormatting\"\n          [ticks]=\"xAxisTicks\"\n          [xAxisOffset]=\"dataLabelMaxHeight.negative\"\n          (dimensionsChanged)=\"updateXAxisHeight($event)\">\n        </svg:g>\n        <svg:g ngx-charts-y-axis\n          *ngIf=\"yAxis\"\n          [yScale]=\"valueScale\"\n          [dims]=\"dims\"\n          [showGridLines]=\"showGridLines\"\n          [showLabel]=\"showYAxisLabel\"\n          [labelText]=\"yAxisLabel\"\n          [trimTicks]=\"trimYAxisTicks\"\n          [maxTickLength]=\"maxYAxisTickLength\"\n          [tickFormatting]=\"yAxisTickFormatting\"\n          [ticks]=\"yAxisTicks\"\n          (dimensionsChanged)=\"updateYAxisWidth($event)\">\n        </svg:g>\n        <svg:g ngx-charts-series-vertical\n          *ngFor=\"let group of results; let index = index; trackBy:trackBy\"\n          [@animationState]=\"'active'\"\n          [attr.transform]=\"groupTransform(group)\"\n          [activeEntries]=\"activeEntries\"\n          [xScale]=\"innerScale\"\n          [yScale]=\"valueScale\"\n          [colors]=\"colors\"\n          [series]=\"group.series\"\n          [dims]=\"dims\"\n          [gradient]=\"gradient\"\n          [tooltipDisabled]=\"tooltipDisabled\"\n          [tooltipTemplate]=\"tooltipTemplate\"\n          [showDataLabel]=\"showDataLabel\"\n          [dataLabelFormatting]=\"dataLabelFormatting\"\n          [seriesName]=\"group.name\"\n          [roundEdges]=\"roundEdges\"\n          [animations]=\"animations\"\n          (select)=\"onClick($event, group)\"\n          (activate)=\"onActivate($event, group)\"\n          (deactivate)=\"onDeactivate($event, group)\"\n          (dataLabelHeightChanged)=\"onDataLabelMaxHeightChanged($event, index)\"\n        />\n        </svg:g>\n    </ngx-charts-chart>\n  ","\n    <svg:g ngx-charts-grid-panel *ngFor=\"let gridPanel of gridPanels\"\n      [height]=\"gridPanel.height\"\n      [width]=\"gridPanel.width\"\n      [x]=\"gridPanel.x\"\n      [y]=\"gridPanel.y\"\n      [class.grid-panel]=\"true\"\n      [class.odd]=\"gridPanel.class === 'odd'\"\n      [class.even]=\"gridPanel.class === 'even'\">\n    </svg:g>\n  ","\n    <svg:rect\n      [attr.height]=\"height\"\n      [attr.width]=\"width\"\n      [attr.x]=\"x\"\n      [attr.y]=\"y\"\n      stroke=\"none\"\n      class=\"gridpanel\"\n    />\n  ","<ngx-loading [show]=\"parameter.loading\"></ngx-loading>\n<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-12\">\n          <div class=\"title-group\">\n              <h5>Report - Bank</h5>\n          </div>\n        </div>\n    </div>\n  \n  <div class=\"white-bg marginT15 padding15\">\n      <div class=\"page-title-4\">\n          <h3>Stats and Trend Analytics</h3>\n      </div>\n      \n      <div class=\"row\">\n            <div class=\"col-lg-4 col-md-4 col-sm-4 col-12\"></div>\n            <div class=\"col-lg-8 col-md-8 col-sm-8 col-12\">\n            <!-- <hr style=\"margin-top:0;\"> -->\n            <!-- From: <input class=\"date-input\" type=\"date\" [ngModel] =\"parameter.min | date:'yyyy-MM-dd'\" max=\"{{today| date:'yyyy-MM-dd'}}\" (ngModelChange)=\"parameter.min = $event; parameter.max=''\" />\n                To: <input class=\"date-input\" type=\"date\" [ngModel] =\"parameter.max | date:'yyyy-MM-dd'\" min=\"{{parameter.min | date:'yyyy-MM-dd'}}\" max=\"{{today| date:'yyyy-MM-dd'}}\" (ngModelChange)=\"parameter.max = $event\" /> -->\n                \n            <!-- <div class=\"pull-right btn-cont\">\n                From: <p-calendar [(ngModel)]=\"parameter.min\" [maxDate]=\"today\" showButtonBar=\"true\" [monthNavigator]=\"true\" [yearNavigator]=\"true\" yearRange=\"2000:2030\"></p-calendar>\n                To: <p-calendar [(ngModel)]=\"parameter.max\" [minDate]=\"parameter.min\" [maxDate]=\"today\" showButtonBar=\"true\" [monthNavigator]=\"true\" [yearNavigator]=\"true\" yearRange=\"2000:2030\"></p-calendar>\n                <button class=\"btn btn-calender new-btn\" href=\"javascript://\" (click)=\"getReportData()\"\n                    [disabled]=\"!parameter.min || !parameter.max\">Apply</button>\n            </div> -->\n    \n    \n            <div class=\"pull-right row\">\n                <div class=\"col-lg-4 col-md-4 col-sm-5 col-5\">\n                  <div class=\"form-group marginB0\">\n                      <label>From:</label>\n                      <p-calendar showIcon=\"true\" [(ngModel)]=\"parameter.min\" [maxDate]=\"today\" showButtonBar=\"true\" [monthNavigator]=\"true\" [yearNavigator]=\"true\" yearRange=\"2000:2030\"></p-calendar>\n                  </div>\n                </div>\n                <div class=\"col-lg-4 col-md-4 col-sm-5 col-5\">\n                  <div class=\"form-group marginB0\">\n                      <label>To:</label>\n                      <p-calendar showIcon=\"true\" [(ngModel)]=\"parameter.max\" [minDate]=\"parameter.min\" [maxDate]=\"today\" showButtonBar=\"true\" [monthNavigator]=\"true\" [yearNavigator]=\"true\" yearRange=\"2000:2030\"></p-calendar>\n                  </div>\n                </div>\n                <div class=\"col-lg-4 col-md-4 col-sm-2 col-5\">\n                  <div class=\"form-group btn-cont\">\n                    <label class=\"addMT3\">&nbsp;</label>\n                    <button class=\"btn btn-calender\" href=\"javascript://\" (click)=\"getReportData()\"\n                  [disabled]=\"!parameter.min || !parameter.max\">Apply</button>\n                  </div>\n                </div>\n            </div>\n        </div>\n        </div>\n\n        \n      <div class=\"row report-data\">\n        <div class=\"col-sm-5\">\n          <p class=\"report-data-title\">Total {{parameter.total>0 ? 'Banks' : 'Bank'}} On Platform</p>\n          <p class=\"report-data-value\">{{parameter.total}}</p>\n        </div>\n        <div class=\"col-sm-7\">\n            <div class=\"row\">\n                <div class=\"col-sm-6\">\n                    <span class=\"report-label report-red\">&nbsp;</span> <span> Sign Up ({{totalSignUpCount}})</span>\n                </div>\n                <div class=\"col-sm-6\">\n                    <span class=\"report-label report-yellow\">&nbsp;</span> <span> Properties ({{totalPropertyCount}})</span>\n                </div>\n            </div>\n        </div>\n      </div>\n      <div class=\"graph-area\">\n        <ngx-charts-bar-vertical-2d\n        [scheme]=\"colorScheme\"\n        [results]=\"chartView\"\n        [gradient]=\"false\"\n        [xAxis]=\"true\"\n        [yAxis]=\"true\"\n        [barPadding]=\"2\"\n        [groupPadding]=\"4\"\n        [legend]=\"false\"\n        [animations]=\"true\"\n        (select)=\"onSelect($event)\">\n      </ngx-charts-bar-vertical-2d>\n  \n      </div>\n    </div>\n      \n  </div>","import { Component, OnInit } from '@angular/core';\nimport { IProperty } from '../../../common/property';\nimport { AdminService } from './../../../services/admin.service';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-bank',\n  templateUrl: './bank.component.html',\n  styleUrls: ['./bank.component.css']\n})\nexport class BankComponent implements OnInit {\n\n  public parameter: IProperty = {};\n  today = new Date();\n  chartView: any = [];\n  totalSignUpCount: number;\n  totalPropertyCount: number;\n  colorScheme = {\n    domain: ['#ee7b7c', '#f5d05c']\n  };\n\n  constructor(public admin: AdminService) {\n    // Object.assign(this, this.chartView);\n  }\n\n  onSelect(event) {}\n\n  ngOnInit() {\n    const date = new Date();\n    // this.parameter.min = new Date(date.getFullYear() + '-' + '01' + '-' + '01');\n    // this.parameter.max = date;\n    // this.parameter.min = moment(date.getFullYear() + '-' + '01' + '-' + '01').format('YYYY-MM-DD');\n    // this.parameter.max = moment().format('YYYY-MM-DD');\n    this.parameter.min = moment().subtract(12, 'months').toDate();\n    this.parameter.max = moment().toDate();\n    this.getReportData();\n  }\n\n  getReportData () {\n    this.totalSignUpCount = 0; this.totalPropertyCount = 0;\n    // const input = {start_date: this.parameter.min, end_date: this.parameter.max};\n    const input = {start_date: moment(this.parameter.min).format('YYYY-MM-DD'), end_date: moment(this.parameter.max).format('YYYY-MM-DD')};\n    this.parameter.loading = true;\n    this.admin.postDataApi('reports/bank', input).subscribe(r => {\n      this.parameter.loading = false;\n      this.parameter.items = r.data;\n      const data = [];\n      this.parameter.items.forEach(element => {\n        this.totalSignUpCount = this.totalSignUpCount + element.signup_count;\n        this.totalPropertyCount = this.totalPropertyCount + element.property_count;\n        data.push({\n          'name' : element.month_name + ', ' + element.year,\n          'series': [\n            {\n              'name': 'Sign Up',\n              'value': element.signup_count\n            }, {\n              'name': 'Properties',\n              'value': element.property_count\n            }\n          ]\n        });\n      });\n      this.parameter.total = this.totalSignUpCount + this.totalPropertyCount;\n      this.chartView = data;\n      // Object.assign(this, this.chartView);\n    }, error => {\n      this.parameter.loading = false;\n    });\n  }\n}\n","<ngx-loading [show]=\"parameter.loading\"></ngx-loading>\n<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-12\">\n          <div class=\"title-group\">\n              <h5>Report - Buyer</h5>\n          </div>\n        </div>\n    </div>\n  \n  <div class=\"white-bg marginT15 padding15\">\n      <div class=\"page-title-4\">\n          <h3>Stats and Trend Analytics</h3>\n      </div>\n     \n      <div class=\"row\">\n            <div class=\"col-lg-4 col-md-4 col-sm-4 col-12\"></div>\n            <div class=\"col-lg-8 col-md-8 col-sm-8 col-12\">\n            <!-- <hr style=\"margin-top:0;\"> -->\n            <!-- From: <input class=\"date-input\" type=\"date\" [ngModel] =\"parameter.min | date:'yyyy-MM-dd'\" max=\"{{today| date:'yyyy-MM-dd'}}\" (ngModelChange)=\"parameter.min = $event; parameter.max=''\" />\n                To: <input class=\"date-input\" type=\"date\" [ngModel] =\"parameter.max | date:'yyyy-MM-dd'\" min=\"{{parameter.min | date:'yyyy-MM-dd'}}\" max=\"{{today| date:'yyyy-MM-dd'}}\" (ngModelChange)=\"parameter.max = $event\" /> -->\n                \n            <!-- <div class=\"pull-right btn-cont\">\n                From: <p-calendar [(ngModel)]=\"parameter.min\" [maxDate]=\"today\" showButtonBar=\"true\" [monthNavigator]=\"true\" [yearNavigator]=\"true\" yearRange=\"2000:2030\"></p-calendar>\n                To: <p-calendar [(ngModel)]=\"parameter.max\" [minDate]=\"parameter.min\" [maxDate]=\"today\" showButtonBar=\"true\" [monthNavigator]=\"true\" [yearNavigator]=\"true\" yearRange=\"2000:2030\"></p-calendar>\n                <button class=\"btn btn-calender new-btn\" href=\"javascript://\" (click)=\"getReportData()\"\n                    [disabled]=\"!parameter.min || !parameter.max\">Apply</button>\n            </div> -->\n    \n    \n            <div class=\"pull-right row\">\n                <div class=\"col-lg-4 col-md-4 col-sm-5 col-5\">\n                  <div class=\"form-group marginB0\">\n                      <label>From:</label>\n                      <p-calendar showIcon=\"true\" [(ngModel)]=\"parameter.min\" [maxDate]=\"today\" showButtonBar=\"true\" [monthNavigator]=\"true\" [yearNavigator]=\"true\" yearRange=\"2000:2030\"></p-calendar>\n                  </div>\n                </div>\n                <div class=\"col-lg-4 col-md-4 col-sm-5 col-5\">\n                  <div class=\"form-group marginB0\">\n                      <label>To:</label>\n                      <p-calendar showIcon=\"true\" [(ngModel)]=\"parameter.max\" [minDate]=\"parameter.min\" [maxDate]=\"today\" showButtonBar=\"true\" [monthNavigator]=\"true\" [yearNavigator]=\"true\" yearRange=\"2000:2030\"></p-calendar>\n                  </div>\n                </div>\n                <div class=\"col-lg-4 col-md-4 col-sm-2 col-5\">\n                  <div class=\"form-group btn-cont\">\n                    <label class=\"addMT3\">&nbsp;</label>\n                    <button class=\"btn btn-calender\" href=\"javascript://\" (click)=\"getReportData()\"\n                  [disabled]=\"!parameter.min || !parameter.max\">Apply</button>\n                  </div>\n                </div>\n            </div>\n        </div>\n        </div>\n\n      <div class=\"row report-data\">\n        <div class=\"col-sm-5\">\n          <p class=\"report-data-title\">Total {{parameter.total>0 ? 'Buyers' : 'Buyer'}} On Platform</p>\n          <p class=\"report-data-value\">{{parameter.total}}</p>\n        </div>\n        <div class=\"col-sm-7\">\n            <div class=\"row\">\n                <div class=\"col-sm-6\">\n                    <span class=\"report-label report-green\">&nbsp;</span> <span> Sign Up ({{totalSignUpCount}})</span>\n                </div>\n                <div class=\"col-sm-6\">\n                    <span class=\"report-label report-blue\">&nbsp;</span> <span> Added Information ({{totalInfoCount}})</span>\n                </div>\n            </div>\n            <div class=\"row marginT15\">\n                <div class=\"col-sm-6\">\n                    <span class=\"report-label report-red\">&nbsp;</span> <span> Brokers Assigned ({{totalBrokerCount}})</span>\n                </div>\n                <div class=\"col-sm-6\">\n                    <span class=\"report-label report-yellow\">&nbsp;</span> <span> Sold ({{totalSold}})</span>\n                </div>\n            </div>\n        </div>\n      </div>\n      <div class=\"graph-area\">\n        <ngx-charts-bar-vertical-2d\n        [scheme]=\"colorScheme\"\n        [results]=\"chartView\"\n        [gradient]=\"false\"\n        [xAxis]=\"true\"\n        [yAxis]=\"true\"\n        [barPadding]=\"2\"\n        [groupPadding]=\"4\"\n        [legend]=\"false\"\n        [animations]=\"true\"\n        (select)=\"onSelect($event)\">\n      </ngx-charts-bar-vertical-2d>\n  \n      </div>\n    </div>\n      \n  </div>","import { Component, OnInit } from '@angular/core';\nimport { IProperty } from '../../../common/property';\nimport { AdminService } from './../../../services/admin.service';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-buyer',\n  templateUrl: './buyer.component.html',\n  styleUrls: ['./buyer.component.css']\n})\nexport class BuyerComponent implements OnInit {\n\n  public parameter: IProperty = {};\n  today = new Date();\n  chartView: any = [];\n  totalSignUpCount: number;\n  totalInfoCount: number;\n  totalBrokerCount: number;\n  totalSold: number;\n  colorScheme = {\n    domain: ['#4eb96f', '#4a85ff', '#ee7b7c', '#f5d05c']\n  };\n\n  constructor(public admin: AdminService) {\n    // Object.assign(this, this.chartView);\n  }\n\n  onSelect(event) {}\n\n  ngOnInit() {\n    const date = new Date();\n    // this.parameter.min = new Date(date.getFullYear() + '-' + '01' + '-' + '01');\n    // this.parameter.max = date;\n    // this.parameter.min = moment(date.getFullYear() + '-' + '01' + '-' + '01').format('YYYY-MM-DD');\n    // this.parameter.max = moment().format('YYYY-MM-DD');\n    this.parameter.min = moment().subtract(12, 'months').toDate();\n    this.parameter.max = moment().toDate();\n    this.getReportData();\n  }\n\n  getReportData () {\n    this.totalSignUpCount = 0; this.totalInfoCount = 0; this.totalBrokerCount = 0; this.totalSold = 0;\n    // const input = {start_date: this.parameter.min, end_date: this.parameter.max};\n    const input = {start_date: moment(this.parameter.min).format('YYYY-MM-DD'), end_date: moment(this.parameter.max).format('YYYY-MM-DD')};\n    this.parameter.loading = true;\n    this.admin.postDataApi('reports/buyers', input).subscribe(r => {\n      this.parameter.loading = false;\n      this.parameter.items = r.data;\n      const data = [];\n      this.parameter.items.forEach(element => {\n        this.totalSignUpCount = this.totalSignUpCount + element.signup_count;\n        this.totalInfoCount = this.totalInfoCount + element.info_count;\n        this.totalBrokerCount = this.totalBrokerCount + element.broker_count;\n        this.totalSold = this.totalSold + element.property_sold;\n        data.push({\n          'name' : element.month_name + ', ' + element.year,\n          'series': [\n            {\n              'name': 'Sign Up',\n              'value': element.signup_count\n            }, {\n              'name': 'Added Information',\n              'value': element.info_count\n            }, {\n              'name': 'Brokers Assigned',\n              'value': element.broker_count\n            }, {\n              'name': 'Sold',\n              'value': element.property_sold\n            }\n          ]\n        });\n      });\n      this.parameter.total = this.totalSignUpCount + this.totalInfoCount + this.totalBrokerCount + this.totalSold;\n      this.chartView = data;\n      // Object.assign(this, this.chartView);\n    }, error => {\n      this.parameter.loading = false;\n    });\n  }\n}\n","<ngx-loading [show]=\"parameter.loading\"></ngx-loading>\n<div class=\"container-fluid\">\n    <div class=\"row\">\n        <div class=\"col-12\">\n          <div class=\"title-group\">\n              <h5>Report - Notary</h5>\n          </div>\n        </div>\n    </div>\n  \n  <div class=\"white-bg marginT15 padding15\">\n      <div class=\"page-title-4\">\n          <h3>Stats and Trend Analytics</h3>\n      </div>\n      <div class=\"row\">\n            <div class=\"col-lg-4 col-md-4 col-sm-4 col-12\"></div>\n            <div class=\"col-lg-8 col-md-8 col-sm-8 col-12\">\n            <!-- <hr style=\"margin-top:0;\"> -->\n            <!-- From: <input class=\"date-input\" type=\"date\" [ngModel] =\"parameter.min | date:'yyyy-MM-dd'\" max=\"{{today| date:'yyyy-MM-dd'}}\" (ngModelChange)=\"parameter.min = $event; parameter.max=''\" />\n                To: <input class=\"date-input\" type=\"date\" [ngModel] =\"parameter.max | date:'yyyy-MM-dd'\" min=\"{{parameter.min | date:'yyyy-MM-dd'}}\" max=\"{{today| date:'yyyy-MM-dd'}}\" (ngModelChange)=\"parameter.max = $event\" /> -->\n                \n            <!-- <div class=\"pull-right btn-cont\">\n                From: <p-calendar [(ngModel)]=\"parameter.min\" [maxDate]=\"today\" showButtonBar=\"true\" [monthNavigator]=\"true\" [yearNavigator]=\"true\" yearRange=\"2000:2030\"></p-calendar>\n                To: <p-calendar [(ngModel)]=\"parameter.max\" [minDate]=\"parameter.min\" [maxDate]=\"today\" showButtonBar=\"true\" [monthNavigator]=\"true\" [yearNavigator]=\"true\" yearRange=\"2000:2030\"></p-calendar>\n                <button class=\"btn btn-calender new-btn\" href=\"javascript://\" (click)=\"getReportData()\"\n                    [disabled]=\"!parameter.min || !parameter.max\">Apply</button>\n            </div> -->\n    \n    \n            <div class=\"pull-right row\">\n                <div class=\"col-lg-4 col-md-4 col-sm-5 col-5\">\n                  <div class=\"form-group marginB0\">\n                      <label>From:</label>\n                      <p-calendar showIcon=\"true\" [(ngModel)]=\"parameter.min\" [maxDate]=\"today\" showButtonBar=\"true\" [monthNavigator]=\"true\" [yearNavigator]=\"true\" yearRange=\"2000:2030\"></p-calendar>\n                  </div>\n                </div>\n                <div class=\"col-lg-4 col-md-4 col-sm-5 col-5\">\n                  <div class=\"form-group marginB0\">\n                      <label>To:</label>\n                      <p-calendar showIcon=\"true\" [(ngModel)]=\"parameter.max\" [minDate]=\"parameter.min\" [maxDate]=\"today\" showButtonBar=\"true\" [monthNavigator]=\"true\" [yearNavigator]=\"true\" yearRange=\"2000:2030\"></p-calendar>\n                  </div>\n                </div>\n                <div class=\"col-lg-4 col-md-4 col-sm-2 col-5\">\n                  <div class=\"form-group btn-cont\">\n                    <label class=\"addMT3\">&nbsp;</label>\n                    <button class=\"btn btn-calender\" href=\"javascript://\" (click)=\"getReportData()\"\n                  [disabled]=\"!parameter.min || !parameter.max\">Apply</button>\n                  </div>\n                </div>\n            </div>\n        </div>\n        </div>\n\n      <div class=\"row report-data\">\n        <div class=\"col-sm-5\">\n          <p class=\"report-data-title\">Total {{parameter.total>0 ? 'Notaries' : 'Notary'}} On Platform</p>\n          <p class=\"report-data-value\">{{parameter.total}}</p>\n        </div>\n        <div class=\"col-sm-7\">\n            <div class=\"row\">\n                <div class=\"col-sm-6\">\n                    <span class=\"report-label report-green\">&nbsp;</span> <span> Sign Up ({{totalSignUpCount}})</span>\n                </div>\n                <div class=\"col-sm-6\">\n                    <span class=\"report-label report-blue\">&nbsp;</span> <span> Properties ({{totalPropertyCount}})</span>\n                </div>\n            </div>\n        </div>\n      </div>\n      <div class=\"graph-area\">\n        <ngx-charts-bar-vertical-2d\n        [scheme]=\"colorScheme\"\n        [results]=\"chartView\"\n        [gradient]=\"false\"\n        [xAxis]=\"true\"\n        [yAxis]=\"true\"\n        [barPadding]=\"2\"\n        [groupPadding]=\"4\"\n        [legend]=\"false\"\n        [animations]=\"true\"\n        (select)=\"onSelect($event)\">\n      </ngx-charts-bar-vertical-2d>\n  \n      </div>\n    </div>\n      \n  </div>","import { Component, OnInit } from '@angular/core';\nimport { IProperty } from '../../../common/property';\nimport { AdminService } from './../../../services/admin.service';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-notary',\n  templateUrl: './notary.component.html',\n  styleUrls: ['./notary.component.css']\n})\nexport class NotaryComponent implements OnInit {\n\n  public parameter: IProperty = {};\n  today = new Date();\n  chartView: any = [];\n  totalSignUpCount: number;\n  totalPropertyCount: number;\n  colorScheme = {\n    domain: ['#4eb96f', '#4a85ff']\n  };\n\n  constructor(public admin: AdminService) {\n    // Object.assign(this, this.chartView);\n  }\n\n  onSelect(event) {}\n\n  ngOnInit() {\n    const date = new Date();\n    // this.parameter.min = new Date(date.getFullYear() + '-' + '01' + '-' + '01');\n    // this.parameter.max = date;\n    // this.parameter.min = moment(date.getFullYear() + '-' + '01' + '-' + '01').format('YYYY-MM-DD');\n    // this.parameter.max = moment().format('YYYY-MM-DD');\n    this.parameter.min = moment().subtract(12, 'months').toDate();\n    this.parameter.max = moment().toDate();\n    this.getReportData();\n  }\n\n  getReportData () {\n    this.totalSignUpCount = 0; this.totalPropertyCount = 0;\n    // const input = {start_date: this.parameter.min, end_date: this.parameter.max};\n    const input = {start_date: moment(this.parameter.min).format('YYYY-MM-DD'), end_date: moment(this.parameter.max).format('YYYY-MM-DD')};\n    this.parameter.loading = true;\n    this.admin.postDataApi('reports/noatary', input).subscribe(r => {\n      this.parameter.loading = false;\n      this.parameter.items = r.data;\n      const data = [];\n      this.parameter.items.forEach(element => {\n        this.totalSignUpCount = this.totalSignUpCount + element.signup_count;\n        this.totalPropertyCount = this.totalPropertyCount + element.property_count;\n        data.push({\n          'name' : element.month_name + ', ' + element.year,\n          'series': [\n            {\n              'name': 'Sign Up',\n              'value': element.signup_count\n            }, {\n              'name': 'Properties',\n              'value': element.property_count\n            }\n          ]\n        });\n      });\n      this.parameter.total = this.totalSignUpCount + this.totalPropertyCount;\n      this.chartView = data;\n      // Object.assign(this, this.chartView);\n    }, error => {\n      this.parameter.loading = false;\n    });\n  }\n}\n","// third party libraries\nimport { NgModule } from '@angular/core';\nimport { CommonModule } from '@angular/common';\nimport { Routes, RouterModule } from '@angular/router';\nimport { NgxLoadingModule, ngxLoadingAnimationTypes } from 'ngx-loading';\nimport { NgxPaginationModule } from 'ngx-pagination';\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\nimport { Ng2TelInputModule } from 'ng2-tel-input';\nimport { NgxChartsModule } from '@swimlane/ngx-charts';\nimport { CalendarModule } from 'primeng/primeng';\n\n// general components\nimport { ReportsComponent } from './reports.component';\nimport { SellerComponent } from './seller/seller.component';\nimport { BuyerComponent } from './buyer/buyer.component';\nimport { NotaryComponent } from './notary/notary.component';\nimport { BankComponent } from './bank/bank.component';\nimport { AclUserGuard } from '../../guards/acl-user.guard';\n\nconst routes: Routes = [\n  { path: 'seller', component: SellerComponent,\n    canActivate: [AclUserGuard], data: {roles: ['Reports', 'can_read', '']}},\n  { path: 'buyer', component: BuyerComponent,\n    canActivate: [AclUserGuard], data: {roles: ['Reports', 'can_read', '']}},\n  { path: 'notary', component: NotaryComponent,\n    canActivate: [AclUserGuard], data: {roles: ['Reports', 'can_read', '']}},\n  { path: 'bank', component: BankComponent,\n    canActivate: [AclUserGuard], data: {roles: ['Reports', 'can_read', '']}}\n];\n\n@NgModule({\n  imports: [\n    RouterModule.forChild(routes),\n    CommonModule,\n    NgxLoadingModule.forRoot({\n      animationType: ngxLoadingAnimationTypes.rectangleBounce,\n      primaryColour: '#00B96F'\n    }),\n    NgxPaginationModule,\n    FormsModule,\n    ReactiveFormsModule,\n    NgxChartsModule,\n    Ng2TelInputModule,\n    CalendarModule\n  ],\n  declarations: [\n    ReportsComponent,\n    SellerComponent,\n    BuyerComponent,\n    NotaryComponent,\n    BankComponent\n  ]\n})\nexport class ReportsModule { }\n","<ngx-loading [show]=\"parameter.loading\"></ngx-loading>\n<div class=\"container-fluid\">\n  <div class=\"row\">\n      <div class=\"col-12\">\n        <div class=\"title-group\">\n            <h5>Report - Seller</h5>\n        </div>\n      </div>\n  </div>\n\n<div class=\"white-bg marginT15 padding15\">\n    <div class=\"page-title-4\">\n        <h3>Stats and Trend Analytics</h3>\n    </div>\n    <div class=\"row\">\n        <div class=\"col-lg-4 col-md-4 col-sm-4 col-12\"></div>\n        <div class=\"col-lg-8 col-md-8 col-sm-8 col-12\">\n        <!-- <hr style=\"margin-top:0;\"> -->\n        <!-- From: <input class=\"date-input\" type=\"date\" [ngModel] =\"parameter.min | date:'yyyy-MM-dd'\" max=\"{{today| date:'yyyy-MM-dd'}}\" (ngModelChange)=\"parameter.min = $event; parameter.max=''\" />\n            To: <input class=\"date-input\" type=\"date\" [ngModel] =\"parameter.max | date:'yyyy-MM-dd'\" min=\"{{parameter.min | date:'yyyy-MM-dd'}}\" max=\"{{today| date:'yyyy-MM-dd'}}\" (ngModelChange)=\"parameter.max = $event\" /> -->\n            \n        <!-- <div class=\"pull-right btn-cont\">\n            From: <p-calendar [(ngModel)]=\"parameter.min\" [maxDate]=\"today\" showButtonBar=\"true\" [monthNavigator]=\"true\" [yearNavigator]=\"true\" yearRange=\"2000:2030\"></p-calendar>\n            To: <p-calendar [(ngModel)]=\"parameter.max\" [minDate]=\"parameter.min\" [maxDate]=\"today\" showButtonBar=\"true\" [monthNavigator]=\"true\" [yearNavigator]=\"true\" yearRange=\"2000:2030\"></p-calendar>\n            <button class=\"btn btn-calender new-btn\" href=\"javascript://\" (click)=\"getReportData()\"\n                [disabled]=\"!parameter.min || !parameter.max\">Apply</button>\n        </div> -->\n\n\n        <div class=\"pull-right row\">\n            <div class=\"col-lg-4 col-md-4 col-sm-5 col-5\">\n              <div class=\"form-group marginB0\">\n                  <label>From:</label>\n                  <p-calendar showIcon=\"true\" [(ngModel)]=\"parameter.min\" [maxDate]=\"today\" showButtonBar=\"true\" [monthNavigator]=\"true\" [yearNavigator]=\"true\" yearRange=\"2000:2030\"></p-calendar>\n              </div>\n            </div>\n            <div class=\"col-lg-4 col-md-4 col-sm-5 col-5\">\n              <div class=\"form-group marginB0\">\n                  <label>To:</label>\n                  <p-calendar showIcon=\"true\" [(ngModel)]=\"parameter.max\" [minDate]=\"parameter.min\" [maxDate]=\"today\" showButtonBar=\"true\" [monthNavigator]=\"true\" [yearNavigator]=\"true\" yearRange=\"2000:2030\"></p-calendar>\n              </div>\n            </div>\n            <div class=\"col-lg-4 col-md-4 col-sm-2 col-5\">\n              <div class=\"form-group btn-cont\">\n                <label class=\"addMT3\">&nbsp;</label>\n                <button class=\"btn btn-calender\" href=\"javascript://\" (click)=\"getReportData()\"\n              [disabled]=\"!parameter.min || !parameter.max\">Apply</button>\n              </div>\n            </div>\n        </div>\n    </div>\n    </div>\n    <div class=\"row report-data\">\n      <div class=\"col-sm-5\">\n        <p class=\"report-data-title\">Total {{parameter.total>0 ? 'Sellers' : 'Seller'}} On Platform</p>\n        <p class=\"report-data-value\">{{parameter.total}}</p>\n      </div>\n      <div class=\"col-sm-7\">\n          <div class=\"row\">\n              <div class=\"col-sm-6\">\n                  <span class=\"report-label report-green\">&nbsp;</span> <span> Sign Up ({{totalSignUpCount}})</span>\n              </div>\n              <div class=\"col-sm-6\">\n                  <span class=\"report-label report-blue\">&nbsp;</span> <span> Added Property ({{totalAddedProperty}})</span>\n              </div>\n          </div>\n          <div class=\"row marginT15\">\n              <div class=\"col-sm-6\">\n                  <span class=\"report-label report-red\">&nbsp;</span> <span> Approved ({{totalApproved}})</span>\n              </div>\n              <div class=\"col-sm-6\">\n                  <span class=\"report-label report-yellow\">&nbsp;</span> <span> Sold ({{totalSold}})</span>\n              </div>\n          </div>\n      </div>\n    </div>\n    <div class=\"graph-area\">\n      <ngx-charts-bar-vertical-2d\n      [scheme]=\"colorScheme\"\n      [results]=\"chartView\"\n      [gradient]=\"false\"\n      [xAxis]=\"true\"\n      [yAxis]=\"true\"\n      [barPadding]=\"2\"\n      [groupPadding]=\"4\"\n      [legend]=\"false\"\n      [animations]=\"true\"\n      (select)=\"onSelect($event)\">\n    </ngx-charts-bar-vertical-2d>\n\n    </div>\n  </div>\n    \n</div>","import { Component, OnInit } from '@angular/core';\nimport { IProperty } from '../../../common/property';\nimport { AdminService } from './../../../services/admin.service';\nimport * as moment from 'moment';\n\n@Component({\n  selector: 'app-seller',\n  templateUrl: './seller.component.html',\n  styleUrls: ['./seller.component.css']\n})\nexport class SellerComponent implements OnInit {\n\n  public parameter: IProperty = {};\n  today = new Date();\n  chartView: any = [];\n  totalSignUpCount: number;\n  totalAddedProperty: number;\n  totalApproved: number;\n  totalSold: number;\n  colorScheme = {\n    domain: ['#4eb96f', '#4a85ff', '#ee7b7c', '#f5d05c']\n  };\n\n  constructor(public admin: AdminService) {\n    // Object.assign(this, this.chartView);\n  }\n\n  onSelect(event) {}\n\n  ngOnInit() {\n    const date = new Date();\n    // this.parameter.min = new Date(date.getFullYear() + '-' + '01' + '-' + '01');\n    // this.parameter.max = date;\n    // this.parameter.min = moment(date.getFullYear() + '-' + '01' + '-' + '01').format('YYYY-MM-DD');\n    // this.parameter.max = moment().format('YYYY-MM-DD');\n    this.parameter.min = moment().subtract(12, 'months').toDate();\n    this.parameter.max = moment().toDate();\n    this.getReportData();\n  }\n\n  getReportData () {\n    this.totalSignUpCount = 0; this.totalAddedProperty = 0; this.totalApproved = 0; this.totalSold = 0;\n    // const input = {start_date: this.parameter.min, end_date: this.parameter.max};\n    const input = {start_date: moment(this.parameter.min).format('YYYY-MM-DD'), end_date: moment(this.parameter.max).format('YYYY-MM-DD')};\n    this.parameter.loading = true;\n    this.admin.postDataApi('reports/sellers', input).subscribe(r => {\n      this.parameter.loading = false;\n      this.parameter.items = r.data;\n      const data = [];\n      this.parameter.items.forEach(element => {\n        this.totalSignUpCount = this.totalSignUpCount + element.signup_count;\n        this.totalAddedProperty = this.totalAddedProperty + element.property_count;\n        this.totalApproved = this.totalApproved + element.property_approved;\n        this.totalSold = this.totalSold + element.property_sold;\n        data.push({\n          'name' : element.month_name + ', ' + element.year,\n          'series': [\n            {\n              'name': 'Sign Up',\n              'value': element.signup_count\n            }, {\n              'name': 'Added Property',\n              'value': element.property_count\n            }, {\n              'name': 'Approved',\n              'value': element.property_approved\n            }, {\n              'name': 'Sold',\n              'value': element.property_sold\n            }\n          ]\n        });\n      });\n      this.parameter.total = this.totalSignUpCount + this.totalAddedProperty + this.totalApproved + this.totalSold;\n      this.chartView = data;\n      // Object.assign(this, this.chartView);\n    }, error => {\n      this.parameter.loading = false;\n    });\n  }\n}\n"],"sourceRoot":""}